{"version":3,"file":"static/js/3207.213dc189.chunk.js","mappings":"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","sources":["Components/adminpanel/Employers/APAddEmployer.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import styles\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APAddEmployer = () => {\r\n  const editor = useRef(null);\r\n\r\n  const [userData, setUserData] = useState({\r\n    company_name: \"\",\r\n    company_about: \"\",\r\n    position: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address: \"\",\r\n    location: \"\",\r\n    contact: \"\",\r\n    company_contact: \"\",\r\n    company_website: \"\",\r\n    email_address: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    profile_image: \"\"\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    company_name: \"\",\r\n    company_about: \"\",\r\n    position: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address: \"\",\r\n    location: \"\",\r\n    contact: \"\",\r\n    company_contact: \"\",\r\n    company_website: \"\",\r\n    email_address: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const mapKey = Cookies.get(\"mapKey\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateContactNumber = (number) => {\r\n    const numberRegex = /^\\+?\\d{1,3}-?\\d{9,15}$/; // Allow 1 to 15 digits\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.company_name === \"\") {\r\n        newErrors.company_name = \"Company Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.company_about === \"\") {\r\n        newErrors.company_about = \"Company Profile is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.position === \"\") {\r\n        newErrors.position = \"Position is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.first_name === \"\") {\r\n        newErrors.first_name = \"First Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.last_name === \"\") {\r\n        newErrors.last_name = \"Last Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.address === \"\") {\r\n        newErrors.address = \"Address is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.location === \"\") {\r\n        newErrors.location = \"Location is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.contact === \"\") {\r\n        newErrors.contact = \"Contact Number is required\";\r\n        window.scrollTo(0, 0);\r\n      } else if (!validateContactNumber(userData.contact)) {\r\n        newErrors.contact = \"Please enter contact number under 15 digits\";\r\n      }\r\n      if (userData.company_contact === \"\") {\r\n        newErrors.company_contact = \"Company Contact Number is required\";\r\n        window.scrollTo(0, 0);\r\n      } else if (!validateContactNumber(userData.company_contact)) {\r\n        newErrors.company_contact =\r\n          \"Please enter contact number under 15 digits\";\r\n      }\r\n      if (userData.email_address === \"\") {\r\n        newErrors.email_address = \"Email Address is required\";\r\n        // window.scrollTo(0, 0);\r\n      } else if (!isValidEmail(userData.email_address)) {\r\n        newErrors.email_address = \"Invalid email format\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.password === \"\") {\r\n        newErrors.password = \"Password is required\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.confirm_password === \"\") {\r\n        newErrors.confirm_password = \"Confirm Password is required\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.password) {\r\n        if (userData.password.length < 8) {\r\n          newErrors.password = \"Please enter atleast 8 characters\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.confirm_password) {\r\n        if (userData.confirm_password.length < 8) {\r\n          newErrors.confirm_password = \"Please enter atleast 8 characters\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.password && userData.confirm_password) {\r\n        if (userData.password !== userData.confirm_password) {\r\n          newErrors.confirm_password =\r\n            \"Password and Confirm Password do not match\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.company_website) {\r\n        const urlFormat =\r\n          /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n        if (\r\n          userData.company_website &&\r\n          !urlFormat.test(userData.company_website)\r\n        ) {\r\n          newErrors.company_website = \"Invalid URL format\";\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      // Function to validate email format\r\n      function isValidEmail(email) {\r\n        // Use a regular expression to validate email format\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        return emailPattern.test(email);\r\n      }\r\n\r\n      // const {\r\n      //   company_name,\r\n      //   company_about,\r\n      //   position,\r\n      //   first_name,\r\n      //   last_name,\r\n      //   address,\r\n      //   location,\r\n      //   contact,\r\n      //   company_contact,\r\n      //   company_website,\r\n      //   email_address,\r\n      //   password,\r\n      //   confirm_password,\r\n      // } = userData;\r\n\r\n      // // Check if email fields are empty\r\n      // if (\r\n      //   !company_name ||\r\n      //   !company_about ||\r\n      //   !position ||\r\n      //   !first_name ||\r\n      //   !last_name ||\r\n      //   !address ||\r\n      //   !location ||\r\n      //   !contact ||\r\n      //   !company_contact ||\r\n      //   !email_address ||\r\n      //   !password ||\r\n      //   !confirm_password\r\n      // ) {\r\n      //   setErrors({\r\n      //     company_name: company_name ? \"\" : \"Company Name is required\",\r\n      //     company_about: company_about ? \"\" : \"Company Profile is required\",\r\n      //     position: position ? \"\" : \"Position is required\",\r\n      //     first_name: first_name ? \"\" : \"First Name is required\",\r\n      //     last_name: last_name ? \"\" : \"Last Name is required\",\r\n      //     address: address ? \"\" : \"Address is required\",\r\n      //     location: location ? \"\" : \"Location is required\",\r\n      //     contact: contact ? \"\" : \"Contact is required\",\r\n      //     company_contact: company_contact ? \"\" : \"Company Number is required\",\r\n      //     email_address: email_address ? \"\" : \"Email is required\",\r\n      //     password: password ? \"\" : \"Password is required\",\r\n      //     confirm_password: confirm_password\r\n      //       ? \"\"\r\n      //       : \"Confirm password is required\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n\r\n      // if (!password || !confirm_password) {\r\n      //   setErrors({\r\n      //     password: password ? \"\" : \"Password is required\",\r\n      //     confirm_password: confirm_password\r\n      //       ? \"\"\r\n      //       : \"Confirm password is required\",\r\n      //   });\r\n      // }\r\n      // // Check if new email and confirm email match\r\n      // if (password !== confirm_password) {\r\n      //   setErrors({\r\n      //     confirm_password: \"Password and Confirm Password do not match\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n\r\n      // if (password.length < 8 || confirm_password.length < 8) {\r\n      //   setErrors({\r\n      //     password: \"Please enter atleast 8 characters\",\r\n      //     confirm_password: \"Please enter atleast 8 characters\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n\r\n      // // Validate email using the validateEmail function\r\n      // if (!validateEmail(email_address)) {\r\n      //   setErrors({\r\n      //     email_address: \"Invalid Email Address\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n\r\n      // // Validate contact using the validateEmail function\r\n      // if (!validateContactNumber(contact)) {\r\n      //   setErrors({\r\n      //     contact: \"Please enter 10 digit number\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n      // if (!validateContactNumber(company_contact)) {\r\n      //   setErrors({\r\n      //     company_contact: \"Please enter 10 digits number\",\r\n      //   });\r\n      //   // return;\r\n      // }\r\n\r\n      // if (company_website) {\r\n\r\n      //   const urlFormat = /^https:\\/\\/www\\.[\\w.-]+\\.[a-z]{2,5}$/i;\r\n      //   if (company_website && !urlFormat.test(company_website)) {\r\n      //     setErrors({\r\n      //       company_website: \"Invalid URL format\",\r\n      //     });\r\n      //     // return;\r\n      //   }\r\n      // }\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Add Employer?\",\r\n          text: \"Do you want to Add Employer?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/users/addusers\",\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Employer added successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0);\r\n            navigate(\"/admin/users\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not add employer. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserData({\r\n      company_name: \"\",\r\n      company_about: \"\",\r\n      position: \"\",\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      address: \"\",\r\n      location: \"\",\r\n      contact: \"\",\r\n      company_contact: \"\",\r\n      company_website: \"\",\r\n      email_address: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n    });\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, profile_image: base64 });\r\n  //   setSelectedImage(base64);\r\n  // };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n\r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        // setSelectedImage(\"\")\r\n        // setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n\r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n\r\n        if (width < 250 || height < 250) {\r\n          Swal.fire({\r\n            title: \"Minimum image resolution should be 250x250 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          // setSelectedImage(\"\")\r\n          // setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            profile_image: \"\",\r\n          });\r\n\r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, profile_image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, profile_image: \"\" });\r\n    const fileInput = document.getElementById(\"formFile\"); // Replace with the actual ID of your file input\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n    // window.location.reload();\r\n  };\r\n\r\n  // Code for loading Location\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${mapKey}&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n    if (value != \"\") {\r\n      setErrors({\r\n        location: \"\",\r\n      });\r\n    }\r\n\r\n    setUserData((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (userData.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    // console.log(filterItem);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/users\")}\r\n                  >\r\n                    Employers\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Add Employer Details\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Add Employer</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.company_name && \"input-error\"\r\n                      }`}\r\n                      name=\"company_name\"\r\n                      placeholder=\"Company Name\"\r\n                      value={userData.company_name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_name && (\r\n                      <div className=\"text-danger\">{errors.company_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\" mb-5 DashBoardInputBx DashBoardCreatBx APJoditEditor\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      Company Profile<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    {/* <JoditEditor\r\n                      ref={editor}\r\n                      name=\"company_about\"\r\n                      value={userData.company_about}\r\n                      onChange={(company_about) =>\r\n                        handleChange({\r\n                          target: {\r\n                            value: company_about,\r\n                            name: \"company_about\",\r\n                          },\r\n                        })\r\n                      }\r\n                    /> */}\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      value={userData.company_about}\r\n                      onChange={(value) =>\r\n                        handleChange({\r\n                          target: { name: \"company_about\", value },\r\n                        })\r\n                      }\r\n                      style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder=\"Add your text here...\"\r\n                    />\r\n                    {errors.company_about && (\r\n                      <div className=\"text-danger\">{errors.company_about}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Position<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.position && \"input-error\"\r\n                      }`}\r\n                      name=\"position\"\r\n                      value={userData.position}\r\n                      placeholder=\"Position\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.position && (\r\n                      <div className=\"text-danger\">{errors.position}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      First Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.first_name && \"input-error\"\r\n                      }`}\r\n                      name=\"first_name\"\r\n                      value={userData.first_name}\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.first_name && (\r\n                      <div className=\"text-danger\">{errors.first_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Last Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.last_name && \"input-error\"\r\n                      }`}\r\n                      name=\"last_name\"\r\n                      value={userData.last_name}\r\n                      placeholder=\"Last Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.last_name && (\r\n                      <div className=\"text-danger\">{errors.last_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.address && \"input-error\"\r\n                      }`}\r\n                      name=\"address\"\r\n                      value={userData.address}\r\n                      placeholder=\"Address\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.address && (\r\n                      <div className=\"text-danger\">{errors.address}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Image\r\n                    </label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      label=\"Image\"\r\n                      name=\"logo\"\r\n                      accept=\".jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {/* {errors.image && (\r\n                    <div className=\"text-danger\">{errors.image}</div>\r\n                  )} */}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600KB).\r\n                      Min file size 250 X 250 pixels.\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                        {userData.profile_image ? (\r\n                          <button\r\n                            className=\"APButton3\"\r\n                            type=\"button\"\r\n                            //   onClick={() => deleteImageWithSlug(slug)}\r\n                            onClick={deleteImage}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        ) : (\r\n                          <button className=\"APButton3\" onClick={deleteImage}>\r\n                            Delete\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Location<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.location && \"input-error\"\r\n                      }`}\r\n                      name=\"location\"\r\n                      value={userData.location}\r\n                      placeholder=\"Location\"\r\n                      onChange={handleLocationChange}\r\n                    />\r\n                    {suggestions.length > 0 && (\r\n                      <div\r\n                        className=\"suggestionsAdminSide\"\r\n                        style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                      >\r\n                        <ul className=\"locationDropdown\">\r\n                          {suggestions.map((suggestion, index) => (\r\n                            <div key={index} className=\"suggestion-item\">\r\n                              <li\r\n                                onClick={() =>\r\n                                  handleSuggestionClick(suggestion)\r\n                                }\r\n                              >\r\n                                <div className=\"eachLocation\">\r\n                                  <div className=\"locationIcon\">\r\n                                    <LocationOnIcon fontSize=\"small\" />\r\n                                  </div>{\" \"}\r\n                                  <div className=\"locationSuggestion\">\r\n                                    {suggestion}\r\n                                  </div>\r\n                                </div>{\" \"}\r\n                              </li>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {errors.location && (\r\n                      <div className=\"text-danger\">{errors.location}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.contact && \"input-error\"\r\n                      }`}\r\n                      name=\"contact\"\r\n                      value={userData.contact}\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact && (\r\n                      <div className=\"text-danger\">{errors.contact}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.company_contact && \"input-error\"\r\n                      }`}\r\n                      name=\"company_contact\"\r\n                      value={userData.company_contact}\r\n                      placeholder=\"Company Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_contact && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.company_contact}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Website\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.company_website && \"input-error\"\r\n                      }`}\r\n                      name=\"company_website\"\r\n                      value={userData.company_website}\r\n                      placeholder=\"Company Website\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_website && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.company_website}\r\n                      </div>\r\n                    )}\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Eg: https://www.google.com or http://google.com\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h4 className=\"mb-4\">Login Details</h4>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Email Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.email_address && \"input-error\"\r\n                      }`}\r\n                      name=\"email_address\"\r\n                      value={userData.email_address}\r\n                      placeholder=\"Email Address\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.email_address && (\r\n                      <div className=\"text-danger\">{errors.email_address}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.password && \"input-error\"\r\n                      }`}\r\n                      name=\"password\"\r\n                      value={userData.password}\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"text-danger\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.confirm_password && \"input-error\"\r\n                      }`}\r\n                      name=\"confirm_password\"\r\n                      value={userData.confirm_password}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.confirm_password}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => handleReset()}\r\n                  >\r\n                    RESET\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddEmployer;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;"],"names":["APAddEmployer","useRef","userData","setUserData","useState","company_name","company_about","position","first_name","last_name","address","location","contact","company_contact","company_website","email_address","password","confirm_password","profile_image","errors","setErrors","loading","setLoading","selectedImage","setSelectedImage","tokenKey","Cookies","adminID","mapKey","navigate","useNavigate","handleChange","e","name","value","target","prev","validateContactNumber","number","test","handleFileUpload1","async","fileInput","file","files","size","Swal","title","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","deleteImage","document","getElementById","autocompleteService","setAutocompleteService","suggestions","setSuggestions","useEffect","script","createElement","google","maps","places","AutocompleteService","console","log","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","prevFilter","getPlacePredictions","input","types","predictions","status","map","prediction","description","suggestionTaken","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","htmlFor","ReactQuill","theme","style","minHeight","label","accept","alt","length","display","suggestion","index","handleSuggestionClick","LocationOnIcon","newErrors","isValidEmail","urlFormat","email","Object","keys","text","showCancelButton","cancelButtonText","isConfirmed","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","message","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}