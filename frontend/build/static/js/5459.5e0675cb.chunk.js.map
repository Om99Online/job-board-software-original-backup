{"version":3,"file":"static/js/5459.5e0675cb.chunk.js","mappings":"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","sources":["Components/element/JobCard.js","Components/element/CategoryCard.js","Components/element/BrowseJobToggler.js","Components/element/MembershipCard.js","Components/element/Slider.js","Components/home/UserPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  LinkedinShareButton,\r\n  PinterestShareButton,\r\n  EmailShareButton,\r\n  InstapaperShareButton,\r\n  TelegramShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  LinkedinIcon,\r\n  EmailIcon,\r\n  PinterestIcon,\r\n  InstapaperIcon,\r\n  TelegramIcon,\r\n} from \"react-share\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nconst JobCard = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null); // Track the selected payment\r\n\r\n  const handleOpen = () => {\r\n    // console.log(\"Clicked payment:\", plan); // Add this line\r\n    // setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const handleClose = () => {\r\n    // setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const curr = Cookies.get(\"curr\");\r\n\r\n  // const handleJobView = () => {\r\n  //   if (!tokenKey) {\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   } else {\r\n  //     if(props.itemSearched) {\r\n  //       navigate(`/jobdescription/${props.slug}/${props.cat_slug}/${props.itemSearched}`);\r\n  //     }\r\n  //     navigate(`/jobdescription/${props.slug}/${props.cat_slug}`);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"card Jcard\" \r\n    // onClick={() => handleJobView()}\r\n    >\r\n      <div className=\"card-body JcardBody\">\r\n        <div className=\"JcardHead d-flex flex-row justify-content-between\">\r\n          {/* <button\r\n            onClick={() => handleJobView()}\r\n            className=\"h5 card-title JcardTitle homeJobs\"\r\n          >\r\n            {props.title}\r\n          </button> */}\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            {props.title}\r\n          </Link>\r\n          {/* <Link className=\"shareNodeJobCard\" onClick={() => handleOpen()}>\r\n            <i\r\n              className=\"fa-solid fa-share-nodes\"\r\n              style={{ color: \"#bdbdbd\" }}\r\n            ></i>\r\n          </Link> */}\r\n          <div>\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box sx={{ ...style, width: 700 }}>\r\n                <Button\r\n                  onClick={handleClose} // Call handleClose when the button is clicked\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                  }} // Position the button\r\n                >\r\n                  {t(\"messageForm.close\")}\r\n                </Button>\r\n\r\n                <Typography\r\n                  id=\"modal-modal-title\"\r\n                  variant=\"h6\"\r\n                  component=\"h2\"\r\n                ></Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 6 }}>\r\n                  <div className=\"modals \">\r\n                    <div className=\"modalHead\">\r\n                      <h3>{t(\"messageForm.shareNow\")}</h3>\r\n                    </div>\r\n                    <div className=\"modalBody mt-4\">\r\n                      <ul className=\"shareIconsList\">\r\n                        <li className=\"shareIconsButtons\">\r\n                          <FacebookShareButton url={props.job_url}>\r\n                            <FacebookIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></FacebookIcon>\r\n                          </FacebookShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TwitterShareButton url={props.job_url}>\r\n                            <TwitterIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TwitterIcon>\r\n                          </TwitterShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <WhatsappShareButton url={props.job_url}>\r\n                            <WhatsappIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></WhatsappIcon>\r\n                          </WhatsappShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <LinkedinShareButton url={props.job_url}>\r\n                            <LinkedinIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></LinkedinIcon>\r\n                          </LinkedinShareButton>\r\n                        </li>\r\n\r\n                        <li className=\"shareIconsButtons\">\r\n                          <EmailShareButton url={props.job_url}>\r\n                            <EmailIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></EmailIcon>\r\n                          </EmailShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <PinterestShareButton url={props.job_url}>\r\n                            <PinterestIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></PinterestIcon>\r\n                          </PinterestShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <InstapaperShareButton url={props.job_url}>\r\n                            <InstapaperIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></InstapaperIcon>\r\n                          </InstapaperShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TelegramShareButton url={props.job_url}>\r\n                            <TelegramIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TelegramIcon>\r\n                          </TelegramShareButton>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </Typography>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection1 float-left\">\r\n          {curr}\r\n          {props.min_salary}-{curr}\r\n          {props.max_salary}/{t(\"messageForm.jobCardYear\")}\r\n        </div>\r\n        <div className=\"JcardBodySection2 flex-row\">\r\n          <div className=\"section2Item1 float-left\">\r\n            {t(\"messageForm.jobCardExperience\")}: {props.min_exp}{\" \"}\r\n            {t(\"messageForm.jobCardYears\")}\r\n          </div>\r\n          <div className=\"section2Item2 text-muted\">\r\n            <i className=\"fa-regular fa-calendar-days\"></i> {props.created}{\" \"}\r\n            {t(\"messageForm.jobCardDaysAgo\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection3\">\r\n          {props.description?HTMLReactParser(props.description.substring(0, 90)):\"\"}\r\n        </div>\r\n        <h6 className=\"card-footer JcardFooter\">\r\n          {props.logo ? (\r\n            <>\r\n              <div className=\"JcardFooterItem1DynamicImage\">\r\n                <img src={props.logo} alt=\"\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"JcardFooterItem1\">\r\n                <img src=\"/Images/dummy-logo.png\" alt=\"\" />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"JcardFooterItem2\">\r\n            <h6>{props.company_name}</h6>\r\n            <p className=\"text-muted\">\r\n              <i\r\n                className=\"fa-solid fa-location-dot\"\r\n                style={{ color: \"#a3a3a3\" }}\r\n              ></i>{\" \"}\r\n              {props.job_city?.substring(0, 20)}\r\n            </p>\r\n          </div>\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            <div className=\"JcardFooterItem3\">{props.work_type}</div>\r\n          </Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CategoryCard = (props) => {\r\n  const handleClick = (id) => {\r\n    sessionStorage.setItem(\"catId\", id);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card catCard\">\r\n        <div className=\"card-body catCardBody\">\r\n          <Link to=\"/searchjob\" onClick={() => handleClick(props.id)}>\r\n            <h5 className=\"card-title catCardTitle\">{props.title}</h5>\r\n            {/* <h5 className=\"card-subtitle catCardSubtitle mb-2\">{props.title2}</h5> */}\r\n          </Link>\r\n          <div className=\"ImageCard\">\r\n            <img className=\"imageChild1\" src={props.image1} alt=\"\" />\r\n            <img className=\"imageChild2\" src={props.image2} alt=\"\" />\r\n          </div>\r\n          <h6 className=\"catCardFooter\">{props.footer?.substring(0,64)}</h6>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst BrowseJobToggler = (props) => {\r\n\r\n  console.log(props.skills,\"yaha\")\r\n  const [toggle1, setToggle1] = useState(true);\r\n  const [toggle2, setToggle2] = useState(false);\r\n  const [toggle3, setToggle3] = useState(false);\r\n  const [toggle4, setToggle4] = useState(false);\r\n  const [byTitle, setByTitle] = useState(props.jobTitle);\r\n  const [byCategory, setByCategory] = useState(props.categoryData);\r\n  const [bySkill, setBySkill] = useState(props.skills);\r\n  const [popularSearch, setPopularSearch] = useState(props.popularSearches);\r\n  const [titleActive, setTitleActive] = useState(true);\r\n  const [skillActive, setSkillActive] = useState(false);\r\n  const [categoryActive, setCategoryActive] = useState(false);\r\n  const [popularSearchActive, setPopularSearchActive] = useState(false);\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  // useEffect(() => {\r\n  //   const getData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(BaseApi + `/home`, {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //         },\r\n  //       });\r\n  //       setByTitle(response.data.response.job_title);\r\n  //       setByCategory(response.data.response.categories);\r\n  //       setBySkill(response.data.response.skillList);\r\n  //       setPopularSearch(response.data.response.keywords);\r\n  //       console.log(bySkill);\r\n  //     } catch (error) {\r\n  //       console.log(\"Cannot get home page data!\");\r\n  //     }\r\n  //   };\r\n  //   getData();\r\n  //   window.scrollTo(0, 0);\r\n  // }, []);\r\n\r\n  const Title = () => {\r\n    setTitleActive(true);\r\n    setSkillActive(false);\r\n    setCategoryActive(false);\r\n    setPopularSearchActive(false);\r\n    setToggle1(true);\r\n    setToggle2(false);\r\n    setToggle3(false);\r\n    setToggle4(false);\r\n  };\r\n  const Skill = () => {\r\n    setSkillActive(true);\r\n    setTitleActive(false);\r\n    setCategoryActive(false);\r\n    setPopularSearchActive(false);\r\n    setToggle1(false);\r\n    setToggle2(true);\r\n    setToggle3(false);\r\n    setToggle4(false);\r\n  };\r\n  const Category = () => {\r\n    setSkillActive(false);\r\n    setTitleActive(false);\r\n    setCategoryActive(true);\r\n    setPopularSearchActive(false);\r\n    setToggle1(false);\r\n    setToggle2(false);\r\n    setToggle3(true);\r\n    setToggle4(false);\r\n  };\r\n  const popularSearches = () => {\r\n    setSkillActive(false);\r\n    setTitleActive(false);\r\n    setCategoryActive(false);\r\n    setPopularSearchActive(true);\r\n    setToggle1(false);\r\n    setToggle2(false);\r\n    setToggle3(false);\r\n    setToggle4(true);\r\n  };\r\n\r\n  const handleClickTitle = (title) => {\r\n    sessionStorage.setItem(\"keywordTitle\", title);\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    sessionStorage.setItem(\"catId\", id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"buttons BrowseJobstab\">\r\n        <button\r\n          onClick={() => Title()}\r\n          className={`btn ${titleActive === true && \"active\"}`}\r\n        >\r\n          {t(\"userpage.byTitle\")}\r\n        </button>\r\n        <button\r\n          onClick={() => Skill()}\r\n          className={`btn ${skillActive === true && \"active\"}`}\r\n        >\r\n          {t(\"userpage.bySkills\")}\r\n        </button>\r\n        <button\r\n          onClick={() => Category()}\r\n          className={`btn ${categoryActive === true && \"active\"}`}\r\n        >\r\n          {t(\"userpage.byCategory\")}\r\n        </button>\r\n        <button\r\n          onClick={() => popularSearches()}\r\n          className={`btn ${popularSearchActive === true && \"active\"}`}\r\n        >\r\n          {t(\"userpage.popularSearches\")}\r\n        </button>\r\n      </div>\r\n      <div className=\"BrowseJobstabs toggledata\">\r\n        {toggle1 && (\r\n          <div className=\"first\">\r\n            <div className=\"row\">\r\n              {byTitle.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"col-md-3 col-lg-3\">\r\n                      <Link\r\n                        to={`/jobs/searchjob/${i.slug}`}\r\n                        onClick={() => handleClickTitle(i.title)}\r\n                        className=\"list\"\r\n                      >\r\n                        <p key={i.id}>{i.title}</p>\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {toggle2 && (\r\n          <div className=\"first\">\r\n            <div className=\"row\">\r\n              {bySkill.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"col-md-3 col-lg-3\">\r\n                      <Link to={`/jobs/searchjob/${i.slug}`} className=\"list\">\r\n                        <p key={i.id}>{i.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {toggle3 && (\r\n          <div className=\"first\">\r\n            <div className=\"row\">\r\n              {byCategory.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"col-md-3 col-lg-3\">\r\n                      <Link\r\n                        to=\"/searchjob\"\r\n                        onClick={() => handleClick(i.id)}\r\n                        className=\"list\"\r\n                      >\r\n                        <p key={i.id}>{i.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {toggle4 && (\r\n          <div className=\"first\">\r\n            <div className=\"row\">\r\n              {popularSearch.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"col-md-3 col-lg-3\">\r\n                      <Link to={`/jobs/searchjob/${i.name}`} className=\"list\">\r\n                        <p key={i.id}>{i.name}</p>\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BrowseJobToggler;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MembershipCard = (props) => {\r\n  const [membershipData, setMembershipData] = useState([]);\r\n  const [membershipFeatureData, setMembershipFeatureData] = useState([]);\r\n\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  let userType = Cookies.get(\"user_type\");\r\n  let curr = Cookies.get(\"curr\");\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await axios.get(BaseApi + `/home`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        setMembershipData(response.data.response.plans_details);\r\n        setMembershipFeatureData(response.data.response.plans_details);\r\n      } catch (error) {\r\n        console.log(\"Cannot get home page data!\");\r\n      }\r\n    };\r\n    getData();\r\n    if (\r\n      tokenKey !== \"\" &&\r\n      (userType === \"recruiter\" || userType === \"candidate\")\r\n    ) {\r\n      setAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const [hoverMembershipButtonColor, setHoverMembershipButtonColor] =\r\n    useState(false);\r\n\r\n  const handleMembershipButtonMouseEnter = () => {\r\n    setHoverMembershipButtonColor(true);\r\n  };\r\n\r\n  const handleMembershipButtonMouseLeave = () => {\r\n    setHoverMembershipButtonColor(false);\r\n  };\r\n\r\n  const options = {\r\n    margin: 30,\r\n    responsiveClass: true,\r\n    // nav: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 1000,\r\n    smartSpeed: 1000,\r\n    responsive: {\r\n      0: {\r\n        items: 1,\r\n      },\r\n      400: {\r\n        items: 1,\r\n      },\r\n      600: {\r\n        items: 2,\r\n      },\r\n      700: {\r\n        items: 2,\r\n      },\r\n      1000: {\r\n        items: 3,\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleBuyWithoutLogin = () => {\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: \"warning\",\r\n      title: t(\"userpage.pleaseLogin\"),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {membershipData.length > 0 ? (\r\n        <OwlCarousel\r\n          className=\"owl-theme\"\r\n          autoplay\r\n          autoplaySpeed={1000}\r\n          center={true}\r\n          loop\r\n          margin={0}\r\n          // items={3}\r\n          // nav\r\n          {...options}\r\n        >\r\n          {membershipData.map((i) => {\r\n            return (\r\n              <>\r\n                <div className=\"item\">\r\n                  <div className=\"MembershipCard\">\r\n                    <h4>{i.plan_name}</h4>\r\n                    <h2>\r\n                      {curr} {i.amount}\r\n                    </h2>\r\n                    <h6>{i.plan_type}</h6>\r\n                    <div className=\"ApplyAll\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"\r\n                        id=\"applyimmediately\"\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        for=\"applyimmediately\"\r\n                      >\r\n                        {t(\"userpage.applyImmediately\")}\r\n                      </label>\r\n                    </div>\r\n                    <ul className=\"applyoption\">\r\n                      {Object.entries(i.features).map(([key, value]) => {\r\n                        return <li><i class=\"fa-solid fa-circle-check membershipChecks\"></i>{value ? HTMLReactParser(value) : \"\"}</li>;\r\n                      })}\r\n                    </ul>\r\n                    {authenticated ? (\r\n                      <Link to=\"/plans/purchase\" className=\"btn btn-primary\">\r\n                        {t(\"userpage.buyThisPlan\")}\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        to=\"/user/jobseekerlogin\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleBuyWithoutLogin}\r\n                      >\r\n                        {t(\"userpage.buyThisPlan\")}\r\n                      </Link>\r\n                    )}\r\n                    {/* <Link className=\"btn btn-primary\">BUY THIS PLAN</Link> */}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n        </OwlCarousel>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MembershipCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Slider = () => {\r\n  const [sliderData, setSliderData] = useState([]);\r\n  const [membershipFeatureData, setMembershipFeatureData] = useState([]);\r\n\r\n  //   const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  let userType = Cookies.get(\"user_type\");\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await axios.get(BaseApi + `/homeslider`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        setSliderData(response.data.response.sliderList);\r\n        // console.log(sliderData, \"fromcomponent\");\r\n        // setMembershipFeatureData(response.data.response.plans_details);\r\n      } catch (error) {\r\n        console.log(\"Cannot get slider data!\");\r\n      }\r\n    };\r\n    getData();\r\n    // if (\r\n    //   tokenKey !== \"\" &&\r\n    //   (userType === \"recruiter\" || userType === \"candidate\")\r\n    // ) {\r\n    //   setAuthenticated(true);\r\n    // }\r\n  }, []);\r\n\r\n  //   const [hoverMembershipButtonColor, setHoverMembershipButtonColor] =\r\n  //     useState(false);\r\n\r\n  //   const handleMembershipButtonMouseEnter = () => {\r\n  //     setHoverMembershipButtonColor(true);\r\n  //   };\r\n\r\n  //   const handleMembershipButtonMouseLeave = () => {\r\n  //     setHoverMembershipButtonColor(false);\r\n  //   };\r\n\r\n  const options = {\r\n    margin: 30,\r\n    responsiveClass: true,\r\n    // nav: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 1000,\r\n    smartSpeed: 1000,\r\n    responsive: {\r\n      0: {\r\n        items: 1,\r\n      },\r\n      400: {\r\n        items: 1,\r\n      },\r\n      600: {\r\n        items: 1,\r\n      },\r\n      700: {\r\n        items: 1,\r\n      },\r\n      1000: {\r\n        items: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {sliderData.length > 0 ? (\r\n        <OwlCarousel\r\n          className=\"owl-theme\"\r\n          autoplay\r\n          autoplaySpeed={1000}\r\n          center={true}\r\n          loop\r\n          margin={0}\r\n          // items={3}\r\n          // nav\r\n          {...options}\r\n        >\r\n          {/* {sliderData.length > 0\r\n            ? sliderData.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"sliderDiv\">\r\n                      <img src={i.image} alt=\"slider\" />\r\n                    </div>\r\n                  </>\r\n                );\r\n              })\r\n            : \"\"} */}\r\n            {sliderData.length > 0\r\n            ? sliderData.map((i) => {\r\n                return (\r\n                  <>\r\n                    <div className=\"sliderDiv\">\r\n                      <div\r\n                        className=\"sliderImageBox\"\r\n                        style={{ backgroundImage: `url(${i.image})` }}\r\n                      ></div>\r\n                      {/* <img src={i.image} alt=\"slider\" /> */}\r\n                    </div>\r\n                  </>\r\n                );\r\n              })\r\n            : \"\"}\r\n\r\n          {/* <img src=\"/Images/slider1.jpg\" alt=\"slider\" />\r\n        <img src=\"/Images/slider2.jpg\" alt=\"slider\" /> */}\r\n        </OwlCarousel>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useRef } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport CategoryCard from \"../element/CategoryCard\";\r\nimport BrowseJobToggler from \"../element/BrowseJobToggler\";\r\nimport JobCard from \"../element/JobCard\";\r\nimport MembershipCard from \"../element/MembershipCard\";\r\nimport Footer from \"../element/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport Cookies from \"js-cookie\";\r\nimport Slider from \"../element/Slider\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst UserPage = () => {\r\n  const [homePageSloganTxt, setHomePageSloganTxt] = useState();\r\n  const [homePageSloganTitle, setHomePageSloganTitle] = useState();\r\n  const [categoryListing, setCategoryListing] = useState([]);\r\n  const [jobCardData, setJobCardData] = useState([]);\r\n  const [membershipData, setMembershipData] = useState([]);\r\n  const [topEmployer, setTopEmployer] = useState([]);\r\n  const [bannerDetails, setBannerDetails] = useState([]);\r\n  // const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [base64Code, setBase64Code] = useState();\r\n  const [announcementDetails, setAnnouncementDetails] = useState([]);\r\n  const [slider, setSlider] = useState([]);\r\n  const [totalPageData, setTotalPageData] = useState([]);\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  const [skills, setSkills] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [popularSearches, setPopularSearches] = useState([]);\r\n  const [job_title, setJob_title] = useState([]);\r\n\r\n  const [secondSectionRender, setSecondSectionRender] = useState(false);\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const userType = Cookies.get(\"user_type\");\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n\r\n  const [hoverSearchColor, setHoverSearchColor] = useState(false);\r\n\r\n  const handleSearchMouseEnter = () => {\r\n    setHoverSearchColor(true);\r\n  };\r\n\r\n  const handleSearchMouseLeave = () => {\r\n    setHoverSearchColor(false);\r\n  };\r\n\r\n  const [hoverUploadCVColor, setHoverUploadCVColor] = useState(false);\r\n\r\n  const handleUploadCVMouseEnter = () => {\r\n    setHoverUploadCVColor(true);\r\n  };\r\n\r\n  const handleUploadCVMouseLeave = () => {\r\n    setHoverUploadCVColor(false);\r\n  };\r\n\r\n  // Explore all Categories button\r\n  const [hoverExploreCategoriesColor, setHoverExploreCategoriesColor] =\r\n    useState(false);\r\n\r\n  const handleExploreCategoriesEnter = () => {\r\n    setHoverExploreCategoriesColor(true);\r\n  };\r\n\r\n  const handleExploreCategoriesLeave = () => {\r\n    setHoverExploreCategoriesColor(false);\r\n  };\r\n\r\n  // View Job Button\r\n  const [hoverViewJobColor, setHoverViewJobColor] = useState(false);\r\n\r\n  const handleViewJobEnter = () => {\r\n    setHoverViewJobColor(true);\r\n  };\r\n\r\n  const handleViewJobLeave = () => {\r\n    setHoverViewJobColor(false);\r\n  };\r\n\r\n  const getInitialSectionData = async () => {\r\n    try {\r\n      const response = await axios.get(BaseApi + \"/homeslider\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n        },\r\n      });\r\n      // setLoading(false);\r\n      setSlider(response.data.response.sliderList);\r\n      setHomePageSloganTxt(response.data.response.site_setting.slogan_text);\r\n      setHomePageSloganTitle(response.data.response.site_setting.slogan_title);\r\n    } catch (error) {\r\n      // setLoading(false);\r\n      console.log(\"Cannot get home page data!\");\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading2(true);\r\n      const response = await axios.get(BaseApi + `/home`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n          token: tokenKey,\r\n        },\r\n      });\r\n      setLoading2(false);\r\n            setTotalPageData(response.data.response);\r\n\r\n      setSkills(response.data.response.skillList);\r\n      setCategoryData(response.data.response.categories);\r\n      setPopularSearches(response.data.response.keywords);\r\n      setJob_title(response.data.response.job_title);\r\n      // setHomePageSloganTxt(response.data.response.site_setting.slogan_text);\r\n      // setHomePageSloganTitle(response.data.response.site_setting.slogan_title);\r\n      setCategoryListing(response.data.response.categories_listing);\r\n      setJobCardData(response.data.response.latestJobList);\r\n      setMembershipData(response.data.response.plans_details);\r\n      setTopEmployer(response.data.response.top_employer);\r\n      setBannerDetails(response.data.response.bannerDetails);\r\n      setAnnouncementDetails(response.data.response.announcementList);\r\n      // setSlider(response.data.response.sliderList);\r\n\r\n      Cookies.set(\"fbLink\", response.data.response.site_setting.facebook_link);\r\n      Cookies.set(\r\n        \"instaLink\",\r\n        response.data.response.site_setting.instagram_link\r\n      );\r\n      Cookies.set(\r\n        \"linkedInLink\",\r\n        response.data.response.site_setting.linkedin_link\r\n      );\r\n      Cookies.set(\r\n        \"pinterestLink\",\r\n        response.data.response.site_setting.pinterest\r\n      );\r\n      Cookies.set(\r\n        \"twitterLink\",\r\n        response.data.response.site_setting.twitter_link\r\n      );\r\n      // console.log(jobCardData);\r\n    } catch (error) {\r\n      setLoading2(false);\r\n      console.log(\"Cannot get home page data!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop >=\r\n        document.documentElement.offsetHeight\r\n      ) {\r\n        setSecondSectionRender(true);\r\n        getData();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileUpload = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    // Check if the selected file is a .doc file\r\n    if (file) {\r\n      if (file.type === \"application/msword\" || file.name.endsWith(\".doc\")) {\r\n        // Read the file using FileReader to get Base64 data\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          const base64Data = reader.result;\r\n          setSelectedFile(file);\r\n          setBase64Code(base64Data); // Assuming you have a state variable 'base64Code' to store the Base64 data\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        // Display an error message for file types other than .doc\r\n        alert(\"Please select a .doc file (Microsoft Word document).\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getData();\r\n    getInitialSectionData();\r\n  }, []);\r\n\r\n  const handleEmpUploadCVClick = async () => {\r\n    Swal.fire({\r\n      title:\r\n        \"You are logged in as an employer. Please login as a jobseeker to upload your CV.\",\r\n      icon: \"warning\",\r\n      confirmButtonText: \"Close\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {/* {loading ? (\r\n        <>\r\n          <div className=\"loader-container\"></div>\r\n        </>\r\n      ) : (\r\n        <> */}\r\n      {/* First block of the home page */}\r\n\r\n      <div className=\"sliderbody\">\r\n        {slider.length > 0 ? (\r\n          <>\r\n            <div className=\"\">\r\n              <Slider />\r\n              <div className=\"upperSlider\">\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-10 col-lg-8\">\r\n                      <div className=\"slidertext\">\r\n                        <h1>{homePageSloganTitle}</h1>\r\n                        <p>{homePageSloganTxt}</p>\r\n                      </div>\r\n                      <div className=\"searcharea\">\r\n                        <i>\r\n                          <img src=\"/Images/searchicon.png\" alt=\"\" />\r\n                        </i>\r\n                        <div className=\"inputGrp\">\r\n                          <input\r\n                            type=\"search\"\r\n                            className=\"form-control\"\r\n                            placeholder={t(\"userpage.jobTitleKeyword\")}\r\n                            aria-label=\"Search\"\r\n                            aria-describedby=\"search-addon\"\r\n                            value={keyword}\r\n                            name=\"keyword\"\r\n                            onChange={(e) => {\r\n                              setKeyword(e.target.value);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        {keyword ? (\r\n                          <Link\r\n                            to={`/jobs/searchjob/${keyword}`}\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary button1\"\r\n                            style={{\r\n                              backgroundColor: hoverSearchColor\r\n                                ? secondaryColor\r\n                                : primaryColor,\r\n                              border: hoverSearchColor\r\n                                ? secondaryColor\r\n                                : primaryColor,\r\n                            }}\r\n                            onMouseEnter={handleSearchMouseEnter}\r\n                            onMouseLeave={handleSearchMouseLeave}\r\n                          >\r\n                            {t(\"userpage.searchButton\")}\r\n                          </Link>\r\n                        ) : (\r\n                          <Link\r\n                            to=\"/searchjob\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary button1\"\r\n                            style={{\r\n                              backgroundColor: hoverSearchColor\r\n                                ? secondaryColor\r\n                                : primaryColor,\r\n                              border: hoverSearchColor\r\n                                ? secondaryColor\r\n                                : primaryColor,\r\n                            }}\r\n                            onMouseEnter={handleSearchMouseEnter}\r\n                            onMouseLeave={handleSearchMouseLeave}\r\n                          >\r\n                            {t(\"userpage.searchButton\")}\r\n                          </Link>\r\n                        )}\r\n\r\n                        {tokenKey && userType === \"candidate\" && (\r\n                          <Link\r\n                            to=\"/candidates/addcvdocuments\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary uploadCvButton\"\r\n                            style={{\r\n                              color: hoverUploadCVColor\r\n                                ? primaryColor\r\n                                : secondaryColor,\r\n                              backgroundColor: \"white\",\r\n                              border: hoverUploadCVColor\r\n                                ? `2px solid ${primaryColor}`\r\n                                : `2px solid ${secondaryColor}`,\r\n                            }}\r\n                            onMouseEnter={handleUploadCVMouseEnter}\r\n                            onMouseLeave={handleUploadCVMouseLeave}\r\n                          >\r\n                            {t(\"userpage.uploadCVButton\")}\r\n                          </Link>\r\n                        )}\r\n                        {tokenKey && userType === \"recruiter\" && (\r\n                          <Link\r\n                            to=\"\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary uploadCvButton\"\r\n                            style={{\r\n                              color: hoverUploadCVColor\r\n                                ? primaryColor\r\n                                : secondaryColor,\r\n                              backgroundColor: \"white\",\r\n                              border: hoverUploadCVColor\r\n                                ? `2px solid ${primaryColor}`\r\n                                : `2px solid ${secondaryColor}`,\r\n                            }}\r\n                            onClick={handleEmpUploadCVClick}\r\n                            onMouseEnter={handleUploadCVMouseEnter}\r\n                            onMouseLeave={handleUploadCVMouseLeave}\r\n                          >\r\n                            {t(\"userpage.uploadCVButton\")}\r\n                          </Link>\r\n                        )}\r\n                        {!tokenKey && (\r\n                          <Link\r\n                            to=\"/user/jobseekerlogin\"\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary uploadCvButton\"\r\n                            style={{\r\n                              color: hoverUploadCVColor\r\n                                ? primaryColor\r\n                                : secondaryColor,\r\n                              backgroundColor: \"white\",\r\n                              border: hoverUploadCVColor\r\n                                ? `2px solid ${primaryColor}`\r\n                                : `2px solid ${secondaryColor}`,\r\n                            }}\r\n                            onMouseEnter={handleUploadCVMouseEnter}\r\n                            onMouseLeave={handleUploadCVMouseLeave}\r\n                          >\r\n                            {t(\"userpage.uploadCVButton\")}\r\n                          </Link>\r\n                        )}\r\n\r\n                        {/* <button\r\n                                type=\"button\"\r\n                                onClick={handleFileUpload}\r\n                                className=\"btn btn-primary uploadCvButton\"\r\n                                style={{\r\n                                  color: hoverUploadCVColor\r\n                                    ? primaryColor\r\n                                    : secondaryColor,\r\n                                  backgroundColor: \"white\",\r\n                                  border: hoverUploadCVColor\r\n                                    ? `2px solid ${primaryColor}`\r\n                                    : `2px solid ${secondaryColor}`,\r\n                                }}\r\n                                onMouseEnter={handleUploadCVMouseEnter}\r\n                                onMouseLeave={handleUploadCVMouseLeave}\r\n                              >\r\n                               {t(\"userpage.uploadCVButton\")} \r\n                              </button>*/}\r\n                        <input\r\n                          type=\"file\"\r\n                          ref={fileInputRef}\r\n                          accept=\".doc\"\r\n                          style={{ display: \"none\" }}\r\n                          onChange={handleFileChange}\r\n                        />\r\n                      </div>\r\n                      {selectedFile && (\r\n                        <>\r\n                          <div className=\"mt-3 d-flex\">\r\n                            <p className=\"pt-2\">\r\n                              Selected File: {selectedFile.name}\r\n                            </p>\r\n                            {/* You can use the selectedFile here or show additional file information */}\r\n                            <button\r\n                              className=\"btn btn-outline-dark ms-2\"\r\n                              onClick={() => setSelectedFile()}\r\n                            >\r\n                              {t(\"userpage.deleteButton\")}\r\n                            </button>\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                      <div className=\"slidertext2\">\r\n                        <div className=\"jobs-clients-posted\">\r\n                          <h3>{totalPageData.jobscount}</h3>\r\n                          <h6 className=\"text-muted\">\r\n                            {t(\"userpage.jobsPosted\")}\r\n                          </h6>\r\n                        </div>\r\n                        <div className=\"jobs-clients-posted\">\r\n                          <h3>{totalPageData.freelancers}</h3>\r\n                          <h6 className=\"text-muted\">\r\n                            {t(\"userpage.employers\")}\r\n                          </h6>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"lowerSlider\">\r\n              <div className=\"container container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-10 col-lg-8\">\r\n                    <div className=\"slidertext\">\r\n                      <h1>{homePageSloganTitle}</h1>\r\n                      <p>{homePageSloganTxt}</p>\r\n                    </div>\r\n                    <div className=\"searcharea\">\r\n                      <i>\r\n                        <img src=\"/Images/searchicon.png\" alt=\"\" />\r\n                      </i>\r\n                      <div className=\"inputGrp\">\r\n                        <input\r\n                          type=\"search\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Job title or keyword\"\r\n                          aria-label=\"Search\"\r\n                          aria-describedby=\"search-addon\"\r\n                          value={keyword}\r\n                          name=\"keyword\"\r\n                          onChange={(e) => {\r\n                            setKeyword(e.target.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      {keyword ? (\r\n                        <Link\r\n                          to={`/jobs/searchjob/${keyword}`}\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary button1\"\r\n                          style={{\r\n                            backgroundColor: hoverSearchColor\r\n                              ? secondaryColor\r\n                              : primaryColor,\r\n                            border: hoverSearchColor\r\n                              ? secondaryColor\r\n                              : primaryColor,\r\n                          }}\r\n                          onMouseEnter={handleSearchMouseEnter}\r\n                          onMouseLeave={handleSearchMouseLeave}\r\n                        >\r\n                          {t(\"userpage.searchButton\")}\r\n                        </Link>\r\n                      ) : (\r\n                        <Link\r\n                          to=\"/searchjob\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary button1\"\r\n                          style={{\r\n                            backgroundColor: hoverSearchColor\r\n                              ? secondaryColor\r\n                              : primaryColor,\r\n                            border: hoverSearchColor\r\n                              ? secondaryColor\r\n                              : primaryColor,\r\n                          }}\r\n                          onMouseEnter={handleSearchMouseEnter}\r\n                          onMouseLeave={handleSearchMouseLeave}\r\n                        >\r\n                          {t(\"userpage.searchButton\")}\r\n                        </Link>\r\n                      )}\r\n\r\n                      {tokenKey ? (\r\n                        <Link\r\n                          to=\"/candidates/addcvdocuments\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary uploadCvButton\"\r\n                          style={{\r\n                            color: hoverUploadCVColor\r\n                              ? primaryColor\r\n                              : secondaryColor,\r\n                            backgroundColor: \"white\",\r\n                            border: hoverUploadCVColor\r\n                              ? `2px solid ${primaryColor}`\r\n                              : `2px solid ${secondaryColor}`,\r\n                          }}\r\n                          onMouseEnter={handleUploadCVMouseEnter}\r\n                          onMouseLeave={handleUploadCVMouseLeave}\r\n                        >\r\n                          {t(\"userpage.uploadCVButton\")}\r\n                        </Link>\r\n                      ) : (\r\n                        <Link\r\n                          to=\"/user/jobseekerlogin\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary uploadCvButton\"\r\n                          style={{\r\n                            color: hoverUploadCVColor\r\n                              ? primaryColor\r\n                              : secondaryColor,\r\n                            backgroundColor: \"white\",\r\n                            border: hoverUploadCVColor\r\n                              ? `2px solid ${primaryColor}`\r\n                              : `2px solid ${secondaryColor}`,\r\n                          }}\r\n                          onMouseEnter={handleUploadCVMouseEnter}\r\n                          onMouseLeave={handleUploadCVMouseLeave}\r\n                        >\r\n                          {t(\"userpage.uploadCVButton\")}\r\n                        </Link>\r\n                      )}\r\n\r\n                      {/* <button\r\n                              type=\"button\"\r\n                              onClick={handleFileUpload}\r\n                              className=\"btn btn-primary uploadCvButton\"\r\n                              style={{\r\n                                color: hoverUploadCVColor\r\n                                  ? primaryColor\r\n                                  : secondaryColor,\r\n                                backgroundColor: \"white\",\r\n                                border: hoverUploadCVColor\r\n                                  ? `2px solid ${primaryColor}`\r\n                                  : `2px solid ${secondaryColor}`,\r\n                              }}\r\n                              onMouseEnter={handleUploadCVMouseEnter}\r\n                              onMouseLeave={handleUploadCVMouseLeave}\r\n                            >\r\n                              {t(\"userpage.uploadCVButton\")}\r\n                            </button> */}\r\n                      <input\r\n                        type=\"file\"\r\n                        ref={fileInputRef}\r\n                        accept=\".doc\"\r\n                        style={{ display: \"none\" }}\r\n                        onChange={handleFileChange}\r\n                      />\r\n                    </div>\r\n                    {selectedFile && (\r\n                      <>\r\n                        <div className=\"mt-3 d-flex\">\r\n                          <p className=\"pt-2\">\r\n                            Selected File: {selectedFile.name}\r\n                          </p>\r\n                          {/* You can use the selectedFile here or show additional file information */}\r\n                          <button\r\n                            className=\"btn btn-outline-dark ms-2\"\r\n                            onClick={() => setSelectedFile()}\r\n                          >\r\n                            {t(\"userpage.deleteButton\")}\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <div className=\"slidertext2\">\r\n                      <div className=\"jobs-clients-posted\">\r\n                        <h3>{totalPageData.jobscount}</h3>\r\n                        <h6 className=\"text-muted\">\r\n                          {t(\"userpage.jobsPosted\")}\r\n                        </h6>\r\n                      </div>\r\n                      <div className=\"jobs-clients-posted\">\r\n                        <h3>{totalPageData.freelancers}</h3>\r\n                        <h6 className=\"text-muted\">\r\n                          {t(\"userpage.employers\")}\r\n                        </h6>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"BannerImg\">\r\n                    <img\r\n                      className=\"layer\"\r\n                      data-speed=\"-20\"\r\n                      src=\"/Images/banner-img.png\"\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"BannerImg1 layer\" data-speed=\"-8\">\r\n                      <img src=\"/Images/banner-userimg1.png\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"BannerImg3 layer\" data-speed=\"8\">\r\n                      <img src=\"/Images/bannerimg1.png\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"BannerImg4 layer\" data-speed=\"10\">\r\n                      <img src=\"/Images/bannerimg2.png\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"BannerImg2 layer\" data-speed=\"-5\">\r\n                      <img src=\"/Images/banner-userimg2.png\" alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <section className=\"infoSection\">\r\n        <div className=\"CategorySection\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                <Link to=\"/user/register/jobseeker\">\r\n                  <div className=\"CategoryBx\">\r\n                    <img src=\"/Images/CreateAnAccount.jpg\" alt=\"\" />\r\n                    <h5 className=\"\">{t(\"userpage.createAnAcount\")}</h5>\r\n                    <p>{t(\"userpage.belowTxt1\")}</p>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                <Link to=\"/searchjob\">\r\n                  <div className=\"CategoryBx\">\r\n                    <img src=\"/Images/SearchDesiredJob.jpg\" alt=\"\" />\r\n                    <h5 className=\"\">{t(\"userpage.searchDesiredJob\")}</h5>\r\n                    <p>{t(\"userpage.belowTxt2\")}</p>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n              <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                <Link to=\"/user/jobseekerlogin\">\r\n                  <div className=\"CategoryBx\">\r\n                    <img src=\"/Images/SendYourResume.jpg\" alt=\"\" />\r\n                    <h5 className=\"\">{t(\"userpage.sendResume\")}</h5>\r\n                    <p>{t(\"userpage.belowTxt3\")}</p>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {secondSectionRender && (\r\n        <>\r\n          {loading2 && (\r\n            <>\r\n              {/* <div className=\"container\">\r\n                    <Box sx={{ display: \"flex\", gap: 2 }}>\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                    </Box>\r\n                  </div>\r\n                  <div className=\"container\">\r\n                    <Box sx={{ display: \"flex\", gap: 2 }}>\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                      <Skeleton\r\n                        sx={{ flex: 1, height: 300 }}\r\n                        animation=\"wave\"\r\n                      />\r\n                    </Box>\r\n                  </div> */}\r\n              <div className=\"container\">\r\n                <Stack spacing={2} direction=\"row\" alignItems=\"center\" sx={{ justifyContent: \"center\" }}>\r\n                 \r\n                  <CircularProgress size=\"5rem\" />\r\n                </Stack>\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* Second block of the home page */}\r\n          <section className=\"CategorySection\">\r\n            <div className=\"container\">\r\n              {/* <div className=\"row\">\r\n                    <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                      <Link to=\"/user/register/jobseeker\">\r\n                        <div className=\"CategoryBx\">\r\n                          <img src=\"/Images/CreateAnAccount.jpg\" alt=\"\" />\r\n                          <h5 className=\"\">{t(\"userpage.createAnAcount\")}</h5>\r\n                          <p>{t(\"userpage.belowTxt1\")}</p>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                      <Link to=\"/searchjob\">\r\n                        <div className=\"CategoryBx\">\r\n                          <img src=\"/Images/SearchDesiredJob.jpg\" alt=\"\" />\r\n                          <h5 className=\"\">{t(\"userpage.searchDesiredJob\")}</h5>\r\n                          <p>{t(\"userpage.belowTxt2\")}</p>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"col-xs-12 col-md-4 col-lg-4\">\r\n                      <Link to=\"/user/jobseekerlogin\">\r\n                        <div className=\"CategoryBx\">\r\n                          <img src=\"/Images/SendYourResume.jpg\" alt=\"\" />\r\n                          <h5 className=\"\">{t(\"userpage.sendResume\")}</h5>\r\n                          <p>{t(\"userpage.belowTxt3\")}</p>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  </div> */}\r\n              {categoryListing != \"\" && (\r\n                <>\r\n                  <div className=\"subsecondblock\">\r\n                    <div className=\"LeftDotImg\">\r\n                      <img src=\"/Images/dotimg.png\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"RightDotImg\">\r\n                      <img src=\"/Images/dotimg.png\" alt=\"\" />\r\n                    </div>\r\n                    <h3 className=\"subsecondblockHeading\">\r\n                      {t(\"userpage.explore\")}\r\n                      <span className=\"textGradient\">\r\n                        {\" \"}\r\n                        <span className=\"SubHaddingTxt\">\r\n                          {t(\"userpage.categories\")}{\" \"}\r\n                        </span>\r\n                      </span>\r\n                    </h3>\r\n\r\n                    <div className=\"ExploreCategory\">\r\n                      <div className=\"row\">\r\n                        {categoryListing.map((i) => {\r\n                          return (\r\n                            <>\r\n                              <div className=\"col-md-6 col-lg-3 HomeCategorysCardBx\">\r\n                                <CategoryCard\r\n                                  title={i.name}\r\n                                  image1=\"/Images/Back-1.png\"\r\n                                  image2={i.image}\r\n                                  footer={i.sub_cat}\r\n                                  slug={i.slug}\r\n                                  id={i.id}\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                      <Link\r\n                        to=\"/allcategory\"\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary button1\"\r\n                        style={{\r\n                          backgroundColor: hoverExploreCategoriesColor\r\n                            ? secondaryColor\r\n                            : primaryColor,\r\n                          border: hoverExploreCategoriesColor\r\n                            ? secondaryColor\r\n                            : primaryColor,\r\n                        }}\r\n                        onMouseEnter={handleExploreCategoriesEnter}\r\n                        onMouseLeave={handleExploreCategoriesLeave}\r\n                      >\r\n                        {t(\"userpage.exploreAllCategories\")}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </section>\r\n\r\n          {/* third block of the home page */}\r\n          {skills.length > 0 && (\r\n            <div className=\"thirdBlock\">\r\n              <div className=\"container\">\r\n                <div className=\"thirdBlockData\">\r\n                  <h3 className=\"BrowseJobsHadding\">\r\n                    {t(\"userpage.browseJobs\")}\r\n                  </h3>\r\n                  <BrowseJobToggler\r\n                    skills={skills}\r\n                    categoryData={categoryData}\r\n                    popularSearches={popularSearches}\r\n                    jobTitle={job_title}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Fourth block of the home page */}\r\n          {jobCardData != \"\" && (\r\n            <>\r\n              <section className=\"FeaturedJobsSection\">\r\n                <div className=\"container fourthBlock text-center\">\r\n                  <h3 className=\"subsecondblockHeading\">\r\n                    {t(\"userpage.featured\")}\r\n                    <span className=\"textGradient\">\r\n                      {\" \"}\r\n                      <span className=\"SubHaddingTxt\">\r\n                        {t(\"userpage.jobs\")}\r\n                      </span>\r\n                    </span>\r\n                  </h3>\r\n                  <div className=\"FBitem\">\r\n                    <div className=\"row\">\r\n                      {jobCardData.slice(0, 6).map((i) => {\r\n                        return (\r\n                          <>\r\n                            <div className=\"col-md-6 col-lg-4\">\r\n                              <JobCard\r\n                                title={i.title}\r\n                                min_salary={i.min_salary}\r\n                                max_salary={i.max_salary}\r\n                                min_exp={i.min_exp}\r\n                                created={i.created}\r\n                                logo={i.logo}\r\n                                company_name={i.company_name}\r\n                                work_type={i.work_type}\r\n                                job_city={i.job_city}\r\n                                slug={i.slug}\r\n                                cat_slug={i.cat_slug}\r\n                                desc={i.brief_abtcomp}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                  <Link to=\"/searchjob\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      style={{\r\n                        backgroundColor: hoverViewJobColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverViewJobColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleViewJobEnter}\r\n                      onMouseLeave={handleViewJobLeave}\r\n                    >\r\n                      {t(\"userpage.viewAllJobsButton\")}\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )}\r\n\r\n          {/* Fifth block of the home page */}\r\n          {membershipData != \"\" && (\r\n            <>\r\n              <section className=\"MembershipSection\">\r\n                <div className=\"container text-center\">\r\n                  <h3 className=\"subsecondblockHeading\">\r\n                    {t(\"userpage.membership\")}\r\n                    <span className=\"textGradient\">\r\n                      {\" \"}\r\n                      <span className=\"SubHaddingTxt\">\r\n                        {t(\"userpage.plan\")}\r\n                      </span>{\" \"}\r\n                    </span>\r\n                  </h3>\r\n                  <div className=\"MembershipMainBx\">\r\n                    <MembershipCard />\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )}\r\n          {topEmployer != \"\" && (\r\n            <>\r\n              <section className=\"TopEmployersSection\">\r\n                <div className=\"container text-center\">\r\n                  <h3 className=\"subsecondblockHeading\">\r\n                    {t(\"userpage.top\")}\r\n                    <span className=\"textGradient\">\r\n                      {\" \"}\r\n                      <span className=\"SubHaddingTxt\">\r\n                        {t(\"userpage.employer\")}\r\n                      </span>{\" \"}\r\n                    </span>\r\n                  </h3>\r\n                  <div className=\"TopEmployersBx\">\r\n                    <div className=\"row m-0\">\r\n                      {topEmployer.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <div className=\"col-xs-12 col-md-3 col-lg-3 p-0 TopEmployersBxCardBx\">\r\n                              <div className=\"EmployersLogoBx BorderRight BorderBottom\">\r\n                                <Link to={`/companyprofile/${i.slug}`}>\r\n                                  <img\r\n                                    className=\"employersLogo\"\r\n                                    src={i.profile_image}\r\n                                    alt=\"\"\r\n                                  />\r\n                                </Link>\r\n                              </div>\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )}\r\n\r\n          {/* {totalPageData && (\r\n            <> */}\r\n              {/* Sixth block of the home page */}\r\n\r\n              <div className=\"sixthBlock\">\r\n                <section className=\"DownloadAppSection\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-xs-12 col-md-6 col-lg-6\">\r\n                        <div className=\"section1text \">\r\n                          <h2 className=\"\">{t(\"userpage.downloadApp\")}</h2>\r\n                          <h3>{t(\"userpage.belowTxt4\")}</h3>\r\n\r\n                          <div className=\"section1button\">\r\n                            <Link\r\n                              to=\"https://play.google.com/store/apps/details?id=ls.lsjobseeker\"\r\n                              target=\"_blank\"\r\n                            >\r\n                              <img\r\n                                className=\"\"\r\n                                src=\"/Images/googlePlayButtton.png\"\r\n                                alt=\"\"\r\n                              />\r\n                            </Link>\r\n                            <Link\r\n                              to=\"https://apps.apple.com/us/app/ls-job-seeker-candidate/id1403773426?ls=1\"\r\n                              target=\"_blank\"\r\n                            >\r\n                              <img\r\n                                className=\"\"\r\n                                src=\"/Images/appleStoreButton.png\"\r\n                                alt=\"\"\r\n                              />\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xs-12 col-md-6 col-lg-6\">\r\n                        <div className=\"DownloadRightImg\">\r\n                          <img\r\n                            className=\"phoneImage\"\r\n                            src=\"/Images/Phone.png\"\r\n                            alt=\"\"\r\n                          />\r\n                          <img\r\n                            className=\"girlImage\"\r\n                            src=\"/Images/girl.png\"\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n                {bannerDetails.length > 0  && (\r\n                  <>\r\n                    <div className=\"section2\">\r\n                      <div className=\"row\">\r\n                        {bannerDetails.map((i) => {\r\n                          return (\r\n                            <>\r\n                              <div className=\"col-md-6 col-sm-12\">\r\n                                <Link to={i.url}>\r\n                                  <img\r\n                                    className=\"flexImage\"\r\n                                    src={i.image}\r\n                                    alt=\"\"\r\n                                  />\r\n                                </Link>\r\n                              </div>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            {/* </>\r\n          )} */}\r\n          {announcementDetails != \"\" && (\r\n            <Marquee\r\n              className=\"marqueeText\"\r\n              pauseOnHover={true}\r\n              style={{\r\n                backgroundColor: primaryColor,\r\n              }}\r\n            >\r\n              {announcementDetails.map((i) => {\r\n                return (\r\n                  <Link to={i.url} className=\"marqueeLink\" target=\"_blank\">\r\n                    | {i.name + \" \"} |\r\n                  </Link>\r\n                );\r\n              })}\r\n            </Marquee>\r\n          )}\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n      {/* </>\r\n      )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\ndocument.addEventListener(\"mousemove\", parallax);\r\n\r\nfunction parallax(e) {\r\n  this.querySelectorAll(\".layer\").forEach((layer) => {\r\n    let speed = layer.getAttribute(\"data-speed\");\r\n    let x = (window.innerWidth - e.pageX * speed) / 900;\r\n    let y = (window.innerWidth - e.pageY * speed) / 900;\r\n    layer.style.transform = `translate(${x}px, ${y}px)`;\r\n  });\r\n}\r\n"],"names":["props","_props$job_city","open","setOpen","useState","selectedPayment","setSelectedPayment","t","i18n","useTranslation","handleClose","curr","useNavigate","Cookies","_jsx","className","children","_jsxs","Link","to","slug","cat_slug","title","Modal","onClose","Box","sx","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","Button","onClick","right","Typography","id","variant","component","mt","FacebookShareButton","url","job_url","FacebookIcon","logoFillColor","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","PinterestShareButton","PinterestIcon","InstapaperShareButton","InstapaperIcon","TelegramShareButton","TelegramIcon","min_salary","max_salary","min_exp","created","description","HTMLReactParser","substring","logo","_Fragment","src","alt","company_name","style","color","job_city","work_type","_props$footer","handleClick","sessionStorage","setItem","image1","image2","footer","console","log","skills","toggle1","setToggle1","toggle2","setToggle2","toggle3","setToggle3","toggle4","setToggle4","byTitle","setByTitle","jobTitle","byCategory","setByCategory","categoryData","bySkill","setBySkill","popularSearch","setPopularSearch","popularSearches","titleActive","setTitleActive","skillActive","setSkillActive","categoryActive","setCategoryActive","popularSearchActive","setPopularSearchActive","map","i","handleClickTitle","name","membershipData","setMembershipData","membershipFeatureData","setMembershipFeatureData","authenticated","setAuthenticated","userType","tokenKey","useEffect","async","response","axios","BaseApi","headers","data","plans_details","error","getData","hoverMembershipButtonColor","setHoverMembershipButtonColor","handleBuyWithoutLogin","Swal","toast","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","fire","icon","length","OwlCarousel","autoplay","autoplaySpeed","center","loop","margin","responsiveClass","smartSpeed","responsive","items","plan_name","amount","plan_type","type","for","Object","entries","features","_ref","key","value","class","Slider","sliderData","setSliderData","sliderList","backgroundImage","image","UserPage","homePageSloganTxt","setHomePageSloganTxt","homePageSloganTitle","setHomePageSloganTitle","categoryListing","setCategoryListing","jobCardData","setJobCardData","topEmployer","setTopEmployer","bannerDetails","setBannerDetails","loading2","setLoading2","keyword","setKeyword","base64Code","setBase64Code","announcementDetails","setAnnouncementDetails","slider","setSlider","totalPageData","setTotalPageData","setSkills","setCategoryData","setPopularSearches","job_title","setJob_title","secondSectionRender","setSecondSectionRender","primaryColor","secondaryColor","hoverSearchColor","setHoverSearchColor","handleSearchMouseEnter","handleSearchMouseLeave","hoverUploadCVColor","setHoverUploadCVColor","handleUploadCVMouseEnter","handleUploadCVMouseLeave","hoverExploreCategoriesColor","setHoverExploreCategoriesColor","hoverViewJobColor","setHoverViewJobColor","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","ApiKey","token","skillList","categories","keywords","categories_listing","latestJobList","top_employer","announcementList","site_setting","facebook_link","instagram_link","linkedin_link","pinterest","twitter_link","removeEventListener","selectedFile","setSelectedFile","fileInputRef","useRef","handleFileChange","e","file","target","files","endsWith","reader","FileReader","onloadend","base64Data","result","readAsDataURL","alert","slogan_text","slogan_title","getInitialSectionData","NavBar","placeholder","onChange","backgroundColor","onMouseEnter","onMouseLeave","confirmButtonText","ref","accept","display","jobscount","freelancers","Stack","spacing","direction","alignItems","justifyContent","CircularProgress","size","CategoryCard","sub_cat","handleExploreCategoriesEnter","handleExploreCategoriesLeave","BrowseJobToggler","slice","JobCard","desc","brief_abtcomp","handleViewJobEnter","handleViewJobLeave","MembershipCard","profile_image","Marquee","pauseOnHover","Footer","this","querySelectorAll","forEach","layer","speed","getAttribute","x","innerWidth","pageX","y","pageY"],"sourceRoot":""}