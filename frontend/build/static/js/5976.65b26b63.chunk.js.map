{"version":3,"file":"static/js/5976.65b26b63.chunk.js","mappings":"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","sources":["Components/adminpanel/Setting/APSiteSetting.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APSiteSetting = () => {\r\n  const [userData, setUserData] = useState({\r\n    title: \"\",\r\n    url: \"\",\r\n    tagline: \"\",\r\n    phone: \"\",\r\n    max_size: \"\",\r\n    facebook_link: \"\",\r\n    linkedin_link: \"\",\r\n    instagram_link: \"\",\r\n    pinterest: \"\",\r\n    jobs_count: \"\",\r\n    app_payment: \"\",\r\n    top_emp_text: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: \"\",\r\n    url: \"\",\r\n    tagline: \"\",\r\n    phone: \"\",\r\n    max_size: \"\",\r\n    facebook_link: \"\",\r\n    linkedin_link: \"\",\r\n    instagram_link: \"\",\r\n    pinterest: \"\",\r\n  });\r\n  const [maxSize, setMaxSize] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/settings/siteSettings\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      if (response.data.status === 200) {\r\n        setLoading(false);\r\n        setUserData(response.data.response);\r\n        setMaxSize(response.data.response.max_size_array);\r\n        console.log(maxSize);\r\n      } \r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n\r\n  const validatePhoneNumber = (number) => {\r\n    const numberRegex = /^\\+?\\d{1,3}-?\\d{9,15}$/;\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const {\r\n        title,\r\n        url,\r\n        tagline,\r\n        phone,\r\n        max_size,\r\n        facebook_link,\r\n        linkedin_link,\r\n        instagram_link,\r\n        pinterest,\r\n      } = userData;\r\n\r\n      if (\r\n        !title ||\r\n        !url ||\r\n        !tagline ||\r\n        !phone ||\r\n        !max_size ||\r\n        !facebook_link ||\r\n        !instagram_link ||\r\n        !linkedin_link ||\r\n        !pinterest\r\n      ) {\r\n        setErrors({\r\n          title: title ? \"\" : \"Title is required\",\r\n          url: url ? \"\" : \"URL is required\",\r\n          tagline: tagline ? \"\" : \"Tagline is required\",\r\n          phone: phone ? \"\" : \"Phone is required\",\r\n          max_size: max_size ? \"\" : \"Max Size is required\",\r\n          facebook_link: facebook_link ? \"\" : \"Facebook link is required\",\r\n          instagram_link: instagram_link ? \"\" : \"Instagram Link is required\",\r\n          linkedin_link: linkedin_link ? \"\" : \"LinkedIn Link is required\",\r\n          pinterest: pinterest ? \"\" : \"Pinterest Link is required\",\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const urlFormat = /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n\r\n      if (!urlFormat.test(userData.url)) {\r\n        setErrors({\r\n          url: \"Invalid URL format\",\r\n        });\r\n        window.scrollTo(0, 0);\r\n        return;\r\n      }\r\n\r\n      const numberFormat = /^\\+?\\d{1,3}-?\\d{9,15}$/;\r\n      \r\n      if (!numberFormat.test(userData.phone)) {\r\n        // console.log(\"ha\");\r\n        setErrors({\r\n          phone: \"Please enter contact number under 15 digits\",\r\n        });\r\n        // window.scrollTo(0, 0);\r\n        return;\r\n      }\r\n      \r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update Setting?\",\r\n        text: \"Do you want to update the site setting?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/settings/siteSettings\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Site setting updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n\r\n          window.scrollTo(0, 0);\r\n        } \r\n      }\r\n      // }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update setting. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    if (type === \"checkbox\" && name === \"app_payment\") {\r\n      setUserData((prev) => ({\r\n        ...prev,\r\n        [name]: checked ? 1 : 0,\r\n      }));\r\n    } else {\r\n      setUserData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n\r\n      // Check if the input is empty and set an error message accordingly\r\n      if (value.trim() === \"\") {\r\n        setErrors((prev) => ({\r\n          ...prev,\r\n          [name]: `${name.charAt(0).toUpperCase() + name.slice(1)} is required`,\r\n        }));\r\n      } else {\r\n        // If the input is not empty, clear the error message\r\n        setErrors((prev) => ({\r\n          ...prev,\r\n          [name]: \"\",\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value} = e.target;\r\n\r\n  //   setUserData((prev) => ({\r\n  //     ...prev,\r\n  //     [name]: value,\r\n  //   }));\r\n  //   // setErrors((prev) => ({\r\n  //   //   ...prev,\r\n  //   //   [name]: \"\",\r\n  //   // }));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Site Settings</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Edit Site Settings</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Site Title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.title && \"input-error\"\r\n                      }`}\r\n                      name=\"title\"\r\n                      placeholder=\"Site Title\"\r\n                      value={userData.title}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.title && (\r\n                      <div className=\"text-danger\">{errors.title}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Site URL<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.url && \"input-error\"}`}\r\n                      name=\"url\"\r\n                      value={userData.url}\r\n                      placeholder=\"Site URl\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.url && (\r\n                      <div className=\"text-danger\">{errors.url}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Site Tagline<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.tagline && \"input-error\"\r\n                      }`}\r\n                      name=\"tagline\"\r\n                      value={userData.tagline}\r\n                      placeholder=\"Site Tagline\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.tagline && (\r\n                      <div className=\"text-danger\">{errors.tagline}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Facebook Link<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.facebook_link && \"input-error\"\r\n                      }`}\r\n                      name=\"facebook_link\"\r\n                      value={userData.facebook_link}\r\n                      placeholder=\"Facebook Link\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.facebook_link && (\r\n                      <div className=\"text-danger\">{errors.facebook_link}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      LinkedIn Link<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.linkedin_link && \"input-error\"\r\n                      }`}\r\n                      name=\"linkedin_link\"\r\n                      value={userData.linkedin_link}\r\n                      placeholder=\"LinkedIn Link\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.linkedin_link && (\r\n                      <div className=\"text-danger\">{errors.linkedin_link}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Instagram Link<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.instagram_link && \"input-error\"\r\n                      }`}\r\n                      name=\"instagram_link\"\r\n                      value={userData.instagram_link}\r\n                      placeholder=\"Instagram Link\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.instagram_link && (\r\n                      <div className=\"text-danger\">{errors.instagram_link}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Pinterest Link<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.pinterest && \"input-error\"\r\n                      }`}\r\n                      name=\"pinterest\"\r\n                      value={userData.pinterest}\r\n                      placeholder=\"Pinterest Link\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.pinterest && (\r\n                      <div className=\"text-danger\">{errors.pinterest}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"phone\"\r\n                      value={userData.phone}\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.phone && (\r\n                      <div className=\"text-danger\">{errors.phone}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-5 DashBoardInputBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Max Image Upload Size (in MB)\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.max_size && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"max_size\"\r\n                      value={userData.max_size}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"\">Choose Size</option>\r\n                      {Object.entries(maxSize).map(([key, value]) => (\r\n                        <option value={key}>{value}</option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.max_size && (\r\n                      <div className=\"text-danger\">{errors.max_size}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 siteSettingPaymentInfo checkBoxCol\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Payment Through App\r\n                    </label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"tableCheckBox\"\r\n                      checked={userData.app_payment === 1}\r\n                      onChange={handleChange}\r\n                      name=\"app_payment\" // Set the name to app_payment\r\n                    />\r\n                  </div>\r\n                  {/* <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Number of Jobs\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"jobs_count\"\r\n                      value={userData.jobs_count}\r\n                      placeholder=\"No of Jobs\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div> */}\r\n                  {/* <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Top Employer Text\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"top_emp_text\"\r\n                      value={userData.top_emp_text}\r\n                      placeholder=\"Employer Text\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div> */}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APSiteSetting;\r\n"],"names":["APSiteSetting","userData","setUserData","useState","title","url","tagline","phone","max_size","facebook_link","linkedin_link","instagram_link","pinterest","jobs_count","app_payment","top_emp_text","errors","setErrors","maxSize","setMaxSize","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","type","checked","target","prev","trim","charAt","toUpperCase","slice","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","status","max_size_array","console","log","error","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","id","placeholder","onChange","htmlFor","Object","entries","map","_ref","test","Swal","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","APFooter"],"sourceRoot":""}