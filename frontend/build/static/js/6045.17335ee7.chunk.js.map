{"version":3,"file":"static/js/6045.17335ee7.chunk.js","mappings":"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","sources":["Components/adminpanel/Jobs/APNewImportJob.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APNewImportJob = () => {\r\n  const [userData, setUserData] = useState({\r\n    xml_url: \"\",\r\n    employer_id: \"\",\r\n    job_title: \"\",\r\n    job_discription: \"\",\r\n    job_category: \"\",\r\n    job_skills: \"\",\r\n    job_designation: \"\",\r\n    job_location: \"\",\r\n    work_type: \"\",\r\n    expirydate: \"\",\r\n    comapany_name: \"\",\r\n    comapany_website: \"\",\r\n    contact_person: \"\",\r\n    tagNames: \"\"\r\n    // company_name: \"\"\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    xml_url: \"\",\r\n    employer_id: \"\",\r\n    job_title: \"\",\r\n    job_discription: \"\",\r\n    job_category: \"\",\r\n    job_skills: \"\",\r\n    job_designation: \"\",\r\n    job_location: \"\",\r\n    work_type: \"\",\r\n    expirydate: \"\",\r\n    comapany_name: \"\",\r\n    comapany_website: \"\",\r\n    contact_person: \"\",\r\n    // company_name: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [employersData, setEmployersData] = useState([]);\r\n  const [tagData, setTagData] = useState([]);\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n    console.log(userData);\r\n  };\r\n\r\n  // function to get the employer data\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/job/admin_jobimportdata\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setEmployersData(response.data.response.employer_id);\r\n      setTagData(response.data.response.tagNames);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error at import jobs at Admin panel\");\r\n    }\r\n  };\r\n\r\n  // Function to sumbit the data on API\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.xml_url === \"\") {\r\n        newErrors.xml_url = \"URL is required\";\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        // Regular expression pattern to match a valid URL\r\n        const urlPattern = /^(https:\\/\\/)(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n\r\n        if (!urlPattern.test(userData.xml_url)) {\r\n          newErrors.xml_url = \"Invalid URL format\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.employer_id === \"\") {\r\n        newErrors.employer_id = \"Please select a company\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.job_title === \"\") {\r\n        newErrors.job_title = \"Job title is required\";\r\n      }\r\n      if (userData.job_discription === \"\") {\r\n        newErrors.job_discription = \"Job discription is required\";\r\n      }\r\n      if (userData.job_category === \"\") {\r\n        newErrors.job_category = \"Job category is required\";\r\n      }\r\n      if (userData.job_skills === \"\") {\r\n        newErrors.job_skills = \"Job skills is required\";\r\n      }\r\n      if (userData.job_designation === \"\") {\r\n        newErrors.job_designation = \"Job designation is required\";\r\n      }\r\n      if (userData.job_location === \"\") {\r\n        newErrors.job_location = \"Job location is required\";\r\n      }\r\n      if (userData.work_type === \"\") {\r\n        newErrors.work_type = \"Work type is required\";\r\n      }\r\n      if (userData.expirydate === \"\") {\r\n        newErrors.expirydate = \"Expiry date is required\";\r\n      }\r\n\r\n      if (userData.comapany_name === \"\") {\r\n        newErrors.comapany_name = \"Company name is required\";\r\n      }\r\n\r\n      if (userData.comapany_website === \"\") {\r\n        newErrors.comapany_website = \"Company website is required\";\r\n      }\r\n\r\n      if (userData.contact_person === \"\") {\r\n        newErrors.contact_person = \"Contact person is required\";\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Import?\",\r\n          text: \"Do you want to Import Jobs?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n        const updatedData={\r\n            ...userData,\r\n            tagNames: tagData\r\n        }\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/job/admin_jobimportnew\",\r\n            updatedData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Jobs Imported successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   xml_url: \"\",\r\n            //   employer_id: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0);\r\n            navigate(\"/admin/jobs/importlist\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not Import Jobs. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the login page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/candidates\")}\r\n                  >\r\n                    List Jobs\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">New Import Jobs</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">New Import Jobs</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      XML Feed URL<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.xml_url && \"input-error\"\r\n                      }`}\r\n                      name=\"xml_url\"\r\n                      placeholder=\"XML URL\"\r\n                      value={userData.xml_url}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.xml_url && (\r\n                      <div className=\"text-danger\">{errors.xml_url}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.employer_id && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"employer_id\"\r\n                      value={userData.employer_id}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Company\r\n                      </option>\r\n                      {employersData.map((i) => {\r\n                        return (\r\n                          <option value={i.id}>\r\n                            {i.company_name ? i.company_name : i.first_name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.employer_id && (\r\n                      <div className=\"text-danger\">{errors.employer_id}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_title && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_title\"\r\n                      value={userData.job_title}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_title && (\r\n                      <div className=\"text-danger\">{errors.job_title}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Description<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_discription && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_discription\"\r\n                      value={userData.job_discription}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_discription && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.job_discription}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Category<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_category && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_category\"\r\n                      value={userData.job_category}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_category && (\r\n                      <div className=\"text-danger\">{errors.job_category}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Skills<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_skills && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_skills\"\r\n                      value={userData.job_skills}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_skills && (\r\n                      <div className=\"text-danger\">{errors.job_skills}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Designation<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_designation && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_designation\"\r\n                      value={userData.job_designation}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_designation && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.job_designation}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Job Location<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.job_location && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"job_location\"\r\n                      value={userData.job_location}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.job_location && (\r\n                      <div className=\"text-danger\">{errors.job_location}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Work Type<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.work_type && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"work_type\"\r\n                      value={userData.work_type}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.work_type && (\r\n                      <div className=\"text-danger\">{errors.work_type}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Expiry Date<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.expirydate && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"expirydate\"\r\n                      value={userData.expirydate}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.expirydate && (\r\n                      <div className=\"text-danger\">{errors.expirydate}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.comapany_name && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"comapany_name\"\r\n                      value={userData.comapany_name}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.comapany_name && (\r\n                      <div className=\"text-danger\">{errors.comapany_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Website<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.comapany_website && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"comapany_website\"\r\n                      value={userData.comapany_website}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.comapany_website && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.comapany_website}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Person<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.contact_person && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"contact_person\"\r\n                      value={userData.contact_person}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Tag\r\n                      </option>\r\n                      {Object.entries(tagData).map(([key, values]) => {\r\n                        return <option value={values}>{values}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.contact_person && (\r\n                      <div className=\"text-danger\">{errors.contact_person}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    NEXT\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APNewImportJob;\r\n"],"names":["APNewImportJob","userData","setUserData","useState","xml_url","employer_id","job_title","job_discription","job_category","job_skills","job_designation","job_location","work_type","expirydate","comapany_name","comapany_website","contact_person","tagNames","errors","setErrors","loading","setLoading","employersData","setEmployersData","tagData","setTagData","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","console","log","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","selected","map","i","company_name","first_name","Object","entries","_ref","values","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","newErrors","test","keys","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","updatedData","status","message","APFooter"],"sourceRoot":""}