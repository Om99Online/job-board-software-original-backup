{"version":3,"file":"static/js/3703.d119b33c.chunk.js","mappings":"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","sources":["Components/adminpanel/Employers/APEmployerList.js","../node_modules/@mui/icons-material/Block.js","../node_modules/@mui/icons-material/CalendarMonth.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/Verified.js","../node_modules/@mui/icons-material/VerifiedUser.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\n// import ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n// import AddIcon from \"@mui/icons-material/Add\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport VerifiedUserIcon from \"@mui/icons-material/VerifiedUser\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEmployerList = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = parseInt(Cookies.get(\"adminID\"));\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null);\r\n  // const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const [userAccess , setUserAccess] = useState({})\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/users/index\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response.user_array);\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  const handleActivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Employer?\",\r\n        text: \"Do you want to Activate this Employer?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/activateuser/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employer Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Employer\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDeactivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Employer?\",\r\n        text: \"Do you want to Deactivate this Employer?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/deactivateuser/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employer Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Employer\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Employer?\",\r\n        text: \"Do you want to Delete this Employer?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/deleteusers/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employer deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Employer\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleVerify = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Verify Employer?\",\r\n        text: \"Do you want to Verify this Employer?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/verifyNow/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employer verified successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Verify Employer\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const [selectAll, setSelectAll] = useState(true);\r\n\r\n  const handleCheck = (id) => {\r\n    // Check if the id is 'selectAll', indicating the \"Select All\" checkbox\r\n    if (id === \"selectAll\") {\r\n      // If it's \"Select All\", toggle the selectAll state\r\n      setSelectAll(!selectAll);\r\n\r\n      // If selectAll is true, select all checkboxes, else unselect all\r\n      const updatedCheckedData = selectAll\r\n        ? listData.map((item) => item.id)\r\n        : [];\r\n      setCheckedData(updatedCheckedData);\r\n    } else {\r\n      // Individual checkbox handling remains the same\r\n      if (checkedData.includes(id)) {\r\n        // If the ID is already in the array, remove it\r\n        setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n      } else {\r\n        // If the ID is not in the array, add it\r\n        setCheckedData([...checkedData, id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n\r\n  const handleMultipleDeactivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Employers?\",\r\n        text: \"Do you want to Deactivate Employers?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const ids = checkedData.join(\",\");\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/users/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"deactivate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employers Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Deactivate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Employers\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleActivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Employers?\",\r\n        text: \"Do you want to Activate Employers?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/users/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"activate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employers Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Activate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Employers\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleDelete = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Employers?\",\r\n        text: \"Do you want to Delete Employers?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/users/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"delete\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Employers Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Delete!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Employers\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't Delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter(\r\n        (item) =>\r\n          item.company_name?.toLowerCase().includes(query) ||\r\n          item.first_name?.toLowerCase().includes(query) ||\r\n          item.position?.toLowerCase().includes(query) ||\r\n          item.email_address?.toLowerCase().includes(query) ||\r\n          item.created?.toLowerCase().includes(query)\r\n      )\r\n      .sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n          return direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n          return direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return (\r\n      item.company_name?.toLowerCase().includes(searchString) ||\r\n      item.first_name?.toLowerCase().includes(searchString) ||\r\n      item.position?.toLowerCase().includes(searchString) ||\r\n      item.email_address?.toLowerCase().includes(searchString) ||\r\n      item.created?.toLowerCase().includes(searchString)\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset currentPage to 1 when searchQuery changes\r\n  }, [searchQuery]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    const newQuery = e.target.value.toLowerCase();\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    // Replace 'your-file-url' with the actual URL of the file you want to download\r\n    const fileUrl = BaseApi + \"/admin/users/generatecsv\";\r\n\r\n    // Create an invisible <a> element\r\n    const link = document.createElement(\"a\");\r\n    link.style.display = \"none\";\r\n    link.href = fileUrl;\r\n\r\n    // Set the download attribute to specify the file name (optional)\r\n    link.download = \"Export List\";\r\n\r\n    // Add the <a> element to the DOM\r\n    document.body.appendChild(link);\r\n\r\n    // Trigger a click event on the <a> element to initiate the download\r\n    link.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const access = Cookies.get(\"access\")\r\n\r\n    if(typeof(access) !== null  || access !==  \"\" || access !==  undefined){\r\n\r\n        console.log(JSON.parse(access))\r\n\r\n        setUserAccess(JSON.parse(access))\r\n    }else{\r\n        setUserAccess({})\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"\")}\r\n                  >\r\n                    Employers\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Employers List</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Employer List</h2>\r\n                <button\r\n                  className=\"btn navButton1 APMSbutton\"\r\n                  onClick={() => handleExport()}\r\n                >\r\n                  Export Employers\r\n                </button>\r\n                {(userAccess[0]?.Add === 1 || adminID === 1)&& <>\r\n                <button\r\n                  className=\"btn navButton1 APMSbutton\"\r\n                  onClick={() => navigate(\"/admin/users/addusers\")}\r\n                >\r\n                  Add Employer\r\n                </button>\r\n                </>}\r\n              </div>\r\n              {listData != \"\" ? (\r\n                <>\r\n                  <div className=\"manageSubadminPart1\">\r\n                    <form>\r\n                      <div className=\"manageSubadminPart1Sec1\">\r\n                        <h4>\r\n                          Search employer by typing Company name, email or\r\n                          Created date\r\n                        </h4>\r\n                        <div class=\"APDashboardSearchBx \">\r\n                          {/* <label for=\"formFile\" class=\"form-label\">\r\n                          Search By Keyword\r\n                        </label> */}\r\n\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className=\"form-control\"\r\n                            name=\"searchQuery\"\r\n                            placeholder=\"Search..\"\r\n                            value={searchQuery}\r\n                            onChange={handleSearchChange}\r\n                          />\r\n                        </div>\r\n                        {/* <div className=\"dateInputs\"> */}\r\n                        {/* <label for=\"from_date\">From</label> */}\r\n                        {/* <input type=\"date\" id=\"from_date\" name=\"from_date\" /> */}\r\n                        {/* <div className=\"form-outline dateFilter\">\r\n                            <label\r\n                              className=\"form-label\"\r\n                              htmlFor=\"form3Example3\"\r\n                            >\r\n                              From Date<span className=\"RedStar\"></span>\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"form3Example3\"\r\n                              className=\"form-control\"\r\n                              name=\"last_date\"\r\n                              // value={jobData.last_date}\r\n                              placeholder=\"Last Date\"\r\n                              // onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-outline dateFilter\">\r\n                            <label\r\n                              className=\"form-label\"\r\n                              htmlFor=\"form3Example3\"\r\n                            >\r\n                              To Date<span className=\"RedStar\"></span>\r\n                            </label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"form3Example3\"\r\n                              className=\"form-control\"\r\n                              name=\"last_date\"\r\n                              // value={jobData.last_date}\r\n                              placeholder=\"Last Date\"\r\n                              // onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <button className=\"navButton1\">RESET</button>\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                    </form>\r\n                    <h4>\r\n                      No. of Results {indexOfFirstItem + 1}-\r\n                      {Math.min(\r\n                        indexOfLastItem,\r\n                        filteredData.length || listData.length\r\n                      )}{\" \"}\r\n                      of {listData.length}\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <div className=\"manageSubadminPart2\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td className=\"checkBoxCol checkBxHead\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"tableCheckBox\"\r\n                              // checked={selectAll}\r\n\r\n                              onClick={() => handleCheck(\"selectAll\")}\r\n                            />\r\n                          </td>\r\n                          <th onClick={() => handleColumnClick(\"company_name\")}>\r\n                            Company Name {symbol}\r\n                          </th>\r\n                          <th onClick={() => handleColumnClick(\"first_name\")}>\r\n                            Full Name {symbol}\r\n                          </th>\r\n\r\n                          <th onClick={() => handleColumnClick(\"position\")}>\r\n                            Position {symbol}\r\n                          </th>\r\n                          <th\r\n                            onClick={() => handleColumnClick(\"email_address\")}\r\n                          >\r\n                            Email {symbol}\r\n                          </th>\r\n                          <th>Current Plan</th>\r\n\r\n                          <th onClick={() => handleColumnClick(\"created\")}>\r\n                            <CalendarMonthIcon /> Created\r\n                          </th>\r\n                          <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {currentItems.map((i) => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td className=\"checkBoxCol\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"tableCheckBox\"\r\n                                    checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                    onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                                  />\r\n                                </td>\r\n                                <td>{i.company_name}</td>\r\n                                <td>\r\n                                  {i.first_name} {i.last_name}\r\n                                  <span className=\"verifiedUsername\">\r\n                                    {i.verify === 1 ? <VerifiedIcon /> : \"\"}\r\n                                  </span>\r\n                                </td>\r\n                                <td>{i.position}</td>\r\n                                <td>{i.email_address}</td>\r\n                                <td>{i.plan}</td>\r\n                                <td>{i.created}</td>\r\n                                <td className=\"APActionButton\">\r\n                                  {i.status === 1 ? (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleDeactivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Deactivate\">\r\n                                        <CheckIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleActivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Activate\">\r\n                                        <BlockIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  )}\r\n\r\n                                  {(userAccess[0]?.Edit === 1 || adminID === 1)&& <>\r\n                                  <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() =>\r\n                                      navigate(\r\n                                        `/admin/users/editusers/${i.slug}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip title=\"Edit\">\r\n                                      <CreateIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  </>}\r\n\r\n                                  {(userAccess[0]?.Delete === 1 || adminID === 1)&& <>\r\n                                  <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    onClick={() => handleDelete(i.slug)}\r\n                                  >\r\n                                    <Tooltip title=\"Delete\">\r\n                                      <DeleteIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  </>}\r\n\r\n                                  {!i.verify ? (\r\n                                    <>\r\n                                      <button\r\n                                        className=\"btn-primary\"\r\n                                        onClick={() => handleVerify(i.slug)}\r\n                                      >\r\n                                        <Tooltip title=\"Verify Now\">\r\n                                          <VerifiedUserIcon />\r\n                                        </Tooltip>\r\n                                      </button>\r\n                                    </>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n\r\n                                  <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() => handleOpen(i)}\r\n                                  >\r\n                                    <Tooltip title=\"View\">\r\n                                      <RemoveRedEyeIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                        <div>\r\n                          <Modal\r\n                            className=\"modalMain\"\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"modal-modal-title\"\r\n                            aria-describedby=\"modal-modal-description\"\r\n                          >\r\n                            <Box className=\"modal adminModal modal-content\">\r\n                              <IconButton\r\n                                onClick={handleClose}\r\n                                className=\"close-button\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 10,\r\n                                  right: 10,\r\n                                }}\r\n                              >\r\n                                &times;\r\n                              </IconButton>\r\n\r\n                              <Typography\r\n                                id=\"modal-modal-title\"\r\n                                variant=\"h6\"\r\n                                component=\"h2\"\r\n                              ></Typography>\r\n                              <Typography\r\n                                id=\"modal-modal-description\"\r\n                                sx={{ mt: 3 }}\r\n                              >\r\n                                {selectedPayment && (\r\n                                  <div className=\"modals \">\r\n                                    <div className=\"modalHead\">\r\n                                      <h1>\r\n                                        {selectedPayment.first_name}{\" \"}\r\n                                        {selectedPayment.last_name}\r\n                                      </h1>\r\n                                    </div>\r\n                                    <div className=\"modalBody mt-4\">\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Company Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.company_name}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Position:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.position}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          First Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.first_name}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Last Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.last_name}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Address:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.address}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Email Address:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.email_address}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Contact Number:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.contact}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Company Number:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.contact}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Website:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.url}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Modal>\r\n                        </div>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <div className=\"manageSubadminpart3\">\r\n                    <div className=\"functionalityButton\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleActivate()}\r\n                      >\r\n                        ACTIVATE\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleDeactivate()}\r\n                      >\r\n                        DEACTIVATE\r\n                      </button>\r\n\r\n                      {(userAccess[0]?.Delete === 1 || adminID === 1)&& <>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton4\"\r\n                        onClick={() => handleMultipleDelete()}\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                      </>}\r\n                    </div>\r\n\r\n                    <div className=\"pagination\">\r\n                      <Stack spacing={2}>\r\n                        <Pagination\r\n                          count={totalPages}\r\n                          color=\"primary\"\r\n                          page={currentPage}\r\n                          onChange={(event, page) => setCurrentPage(page)}\r\n                        />\r\n                      </Stack>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"appliedJobListNoData\">No Records Found</div>\r\n              )}\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEmployerList;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V10h14v10zM9 14H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm-8 4H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2z\"\n}), 'CalendarMonth');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m23 12-2.44-2.79.34-3.69-3.61-.82-1.89-3.2L12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 12l2.44 2.79-.34 3.7 3.61.82L8.6 22.5l3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69L23 12zm-12.91 4.72-3.8-3.81 1.48-1.48 2.32 2.33 5.85-5.87 1.48 1.48-7.33 7.35z\"\n}), 'Verified');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'VerifiedUser');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["APEmployerList","_userAccess$","_userAccess$4","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","parseInt","currentPage","setCurrentPage","open","setOpen","selectedPayment","setSelectedPayment","handleClose","userAccess","setUserAccess","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","user_array","error","console","log","selectAll","setSelectAll","handleCheck","id","updatedCheckedData","map","item","includes","filter","checkedId","sortConfig","setSortConfig","direction","symbol","setSymbol","sortedAndFilteredData","array","query","_item$company_name","_item$first_name","_item$position","_item$email_address","_item$created","company_name","toLowerCase","first_name","position","email_address","created","sort","a","b","sortAndFilterData","filteredData","_item$company_name2","_item$first_name2","_item$position2","_item$email_address2","_item$created2","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","window","scrollTo","handleColumnClick","access","undefined","JSON","parse","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","handleExport","fileUrl","link","document","createElement","style","display","href","download","body","appendChild","click","Add","class","type","name","placeholder","value","onChange","e","newQuery","target","min","CalendarMonthIcon","scope","_userAccess$2","_userAccess$3","checked","last_name","verify","VerifiedIcon","plan","status","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","slug","message","handleDeactivate","Tooltip","CheckIcon","handleActivate","BlockIcon","Edit","CreateIcon","Delete","handleDelete","DeleteIcon","handleVerify","VerifiedUserIcon","RemoveRedEyeIcon","Modal","onClose","Box","IconButton","top","right","variant","component","sx","mt","address","contact","url","ids","toString","idList","action","handleMultipleActivate","join","handleMultipleDeactivate","handleMultipleDelete","Stack","spacing","Pagination","count","page","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","root","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}