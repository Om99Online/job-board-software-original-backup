{"version":3,"file":"static/js/588.be1b2572.chunk.js","mappings":"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","sources":["Components/adminpanel/Employers/APHomePageSlider.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport Select from \"react-select\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APHomePageSlider = () =>{\r\n\r\n    const tokenKey = Cookies.get(\"token\");\r\n    const adminID = Cookies.get(\"adminID\");\r\n    const navigate = useNavigate();\r\n    const [userData, setUserData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [employersList , setEmployersList] = useState([])\r\n    const [selectedEmployer , setSelectedEmployer] = useState([])\r\n    const [employerValidationError , setEmployerValidationError] = useState('')\r\n\r\n    const handleEmployerChange = (selected) => {\r\n        setSelectedEmployer(selected)\r\n        setEmployerValidationError('')\r\n    }\r\n\r\n    const getData = async () => {\r\n        try {\r\n          setLoading(true);\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/users/addemployertoslider`,\r\n            null, // Pass null as the request body if not required\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n          setLoading(false);\r\n\r\n          console.log(response.data.response)\r\n\r\n          setUserData(response.data.response);\r\n          setEmployersList(response.data.response)\r\n          //setSelectedImage(response.data.response.profile_image);\r\n    \r\n          //   console.log(paymentHistory);\r\n        } catch (error) {\r\n          setLoading(false);\r\n          console.log(\"Cannot get plans data at APmanageplans\");\r\n        }\r\n    };\r\n\r\n    const handleClick = async () =>{\r\n        if(selectedEmployer.length == 0){\r\n            setEmployerValidationError('Select Employer')\r\n        }\r\n\r\n        if(employerValidationError == \"\"){\r\n\r\n            try {\r\n                const confirmationResult = await Swal.fire({\r\n                    title: \"Update Employer Slider List?\",\r\n                    text: \"Do you want to update the Employer Slider List?\",\r\n                    icon: \"question\",\r\n                    showCancelButton: true,\r\n                    confirmButtonText: \"Yes\",\r\n                    cancelButtonText: \"No\",\r\n                });\r\n\r\n                if (confirmationResult.isConfirmed) {\r\n                    setLoading(true);\r\n            \r\n                    const response = await axios.post(\r\n                        BaseApi + `/admin/users/addemployertoslider`,\r\n                        selectedEmployer,\r\n                        {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            key: ApiKey,\r\n                            token: tokenKey,\r\n                            adminid: adminID,\r\n                        },\r\n                        }\r\n                    );\r\n            \r\n                    setLoading(false);\r\n            \r\n                    if (response.data.status === 200) {\r\n                        Swal.fire({\r\n                            title: \"Employer updated successfully!\",\r\n                            icon: \"success\",\r\n                            confirmButtonText: \"Close\",\r\n                        });\r\n\r\n                        navigate(\"/admin/users/selectforslider\");\r\n                    } else {\r\n                        Swal.fire({\r\n                            title: response.data.message,\r\n                            icon: \"error\",\r\n                            confirmButtonText: \"Close\",\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } catch (error) {\r\n                setLoading(false);\r\n                console.log(\"Cannot get plans data at APmanageplans\");\r\n            }\r\n\r\n            console.log(selectedEmployer)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // Check if tokenKey is not present\r\n        if (!tokenKey) {\r\n          // Redirect to the home page\r\n          navigate(\"/admin\");\r\n        } else {\r\n          // TokenKey is present, fetch data or perform other actions\r\n          getData();\r\n          window.scrollTo(0, 0);\r\n        }\r\n      }, [tokenKey, navigate]);\r\n\r\n\r\n\r\n      return(\r\n        <>\r\n            <APNavBar />\r\n            <div className=\"APBasic\" style = {{ height: '100vh'}}>\r\n                <APSidebar />\r\n                {loading ?(\r\n                    <>\r\n                        <div className=\"loader-container\"></div>\r\n                    </>\r\n                ):(\r\n                    <>\r\n                        <div className=\"site-min-height\">\r\n                            <div className=\"breadCumb1\" role=\"presentation\">\r\n                                <Breadcrumbs\r\n                                aria-label=\"breadcrumb\"\r\n                                separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                                >\r\n                                    <Link\r\n                                        underline=\"hover\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                                    >\r\n                                        Dashboard\r\n                                    </Link>\r\n                                    <Link\r\n                                        underline=\"hover\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => navigate(\"/admin/users/selectforslider\")}\r\n                                    >\r\n                                        Employers Slider\r\n                                    </Link>\r\n\r\n                                    <Typography color=\"text.primary\">\r\n                                        Add Employer To Slider\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </div>\r\n                            <h2 className=\"adminPageHeading\">Add Employer To Slider</h2>\r\n                            <form className=\"adminForm\">\r\n                                <div className=\"mb-4 mt-5\">\r\n                                    <div class=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                                        <label for=\"formFile\" class=\"form-label\">\r\n                                        Select Employer<span className=\"RedStar\">*</span>\r\n                                        </label>\r\n                                        <Select\r\n                                            isSearchable\r\n                                            name=\"employer\"\r\n                                            options={employersList.map((i) => ({\r\n                                            value: i.id,\r\n                                            label: i.name,\r\n                                            }))}\r\n                                            className=\"basic-multi-select\"\r\n                                            value={selectedEmployer}\r\n                                            classNamePrefix=\"select\"\r\n                                            onChange={handleEmployerChange}\r\n                                        />\r\n                                        {employerValidationError && (\r\n                                            <div className=\"text-danger\">{employerValidationError}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"APAddJobBottomButtons\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary button1\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            SAVE\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary button2\"\r\n                                            onClick={() => navigate(\"/admin/users/selectforslider\")}\r\n                                        >\r\n                                            CANCEL\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <APFooter />\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n      )\r\n\r\n}\r\n\r\nexport default APHomePageSlider;"],"names":["APHomePageSlider","tokenKey","Cookies","adminID","navigate","useNavigate","userData","setUserData","useState","loading","setLoading","employersList","setEmployersList","selectedEmployer","setSelectedEmployer","employerValidationError","setEmployerValidationError","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","console","log","data","error","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","style","height","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","Select","isSearchable","name","options","map","i","value","id","label","classNamePrefix","onChange","selected","type","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}