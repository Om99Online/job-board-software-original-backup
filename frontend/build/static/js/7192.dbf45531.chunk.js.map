{"version":3,"file":"static/js/7192.dbf45531.chunk.js","mappings":"mVAiBA,MA2wBA,EA3wBwBA,MACPC,EAAAA,EAAAA,QAAO,MAAtB,MAEOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,iBAAkB,GAClBC,OAAQ,MAEHC,EAAQC,IAAaX,EAAAA,EAAAA,UAAS,CACnCC,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVE,cAAe,GACfC,aAAc,GACdC,iBAAkB,MAEbI,EAASC,IAAcb,EAAAA,EAAAA,WAAS,GACjCc,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WACtBE,EAASF,EAAAA,EAAAA,IAAY,UAErBG,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBvB,EAAAA,EAAAA,UAAS,MAE7CwB,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B7B,GAAa8B,IAAI,IACZA,EACH,CAACH,GAAOC,MAEVhB,GAAWkB,IAAI,IACVA,EACH,CAACH,GAAO,MACP,EA0QCI,EAAoBC,UACxB,MAAMC,EAAYP,EAAEG,OACdK,EAAOD,EAAUE,MAAM,GAG7B,GAAID,EAAM,CAIR,GAFwBA,EAAKE,KACN,OAerB,OAbAC,IAAAA,KAAU,CACRC,MAAO,mCACPC,KAAM,UACNC,kBAAmB,eAOrBP,EAAUL,MAAQ,IAOpB,MAAMa,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,OAAOC,IAAIC,gBAAgBZ,GAErCO,EAAIM,OAAS,KACX,MAAMC,EAAQP,EAAIQ,aACZC,EAAST,EAAIU,cAEfH,EAAQ,KAAOE,EAAS,KAC1Bb,IAAAA,KAAU,CACRC,MAAO,oDACPC,KAAM,UACNC,kBAAmB,UAOrBP,EAAUL,MAAQ,KAKlBhB,EAAU,IACLD,EACHL,cAAe,KAsa3B,SAAyB4B,GACvB,OAAO,IAAIkB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcvB,GACzBqB,EAAWR,OAAS,KAClBM,EAAQE,EAAWG,OAAO,EAE5BH,EAAWI,QAAWC,IACpBN,EAAOM,EAAM,CACd,GAEL,CA7aUC,CAAgB3B,GAAM4B,MAAMC,IAC1B/D,EAAY,IAAKD,EAAUO,cAAeyD,IAC1CvC,EAAiBuC,EAAO,IAE5B,CAEJ,GAUIC,EAAsBtC,IAC1BA,EAAEuC,iBACsB,IAApBlE,EAASW,QACXV,EAAY,IAAKD,EAAUW,OAAQ,IAEb,IAApBX,EAASW,QACXV,EAAY,IAAKD,EAAUW,OAAQ,GACrC,GAKKwD,EAAqBC,IAA0BlE,EAAAA,EAAAA,UAAS,OACxDmE,EAAaC,IAAkBpE,EAAAA,EAAAA,UAAS,KAE/CqE,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAASC,SAASC,cAAc,UAUtC,OATAF,EAAO5B,IAAO,+CAA8CzB,qBAC5DqD,EAAOxB,OAAS,KACdoB,EACE,IAAIvB,OAAO8B,OAAOC,KAAKC,OAAOC,qBAEhCC,QAAQC,IAAIb,EAAoB,EAElCM,SAASQ,KAAKC,YAAYV,GAEnB,KACLC,SAASQ,KAAKE,YAAYX,EAAO,CAClC,GACA,IAEH,MAAMY,EAAwBzD,IAC5B,MAAM,MAAEE,GAAUF,EAAEG,OACpBuD,GAAmB,GACN,IAATxD,GACFwD,GAAmB,GAER,IAATxD,GACFhB,EAAU,CACRP,SAAU,KAIdL,GAAaqF,IAAU,IAClBA,EACHhF,SAAUuB,MAGRsC,GAEFA,EAAoBoB,oBAClB,CACEC,MAAO3D,EACP4D,MAAO,CAAC,cAEV,CAACC,EAAa/E,KAEV2D,EADa,OAAX3D,GAAmB+E,EAEnBA,EAAYC,KAAKC,GAAeA,EAAWC,cAG9B,GACjB,IAIoB,KAAtB7F,EAASM,UACXgE,EAAe,GACjB,GAEKwB,EAAiBT,IAAsBnF,EAAAA,EAAAA,WAAS,GAwBvD,OAZAqE,EAAAA,EAAAA,YAAU,KAEHvD,GAraSiB,WACd,IACElB,GAAW,GACX,MAAMgF,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,0BAAyB3E,IACpC,KACA,CACE4E,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOrF,EACPsF,QAASpF,KAIfH,GAAW,GACXd,EAAY8F,EAASQ,KAAKR,UAC1BtE,EAAiBsE,EAASQ,KAAKR,SAASxF,cAG1C,CAAE,MAAOsD,GACP9C,GAAW,GACXgE,QAAQC,IAAI,yCACd,GAmZEwB,GACA3D,OAAO4D,SAAS,EAAG,IAJnBrF,EAAS,SAKX,GACC,CAACJ,EAAUI,KAGZsF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETlG,GACC+F,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYE,KAAK,eAAcL,UAC5CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMrG,EAAS,2BAA2BwF,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMrG,EAAS,qBAAqBwF,SAC9C,eAIDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,iCAKrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,oBACjCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAWH,UACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,cAC7BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEtCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOT,YAAc,gBAEvByB,KAAK,aACLC,MAAO7B,EAASG,WAChB4H,YAAY,aACZC,SAAUtG,IAEXd,EAAOT,aACN0G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAOT,iBAGzCuG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,aAC9BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAErCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOR,WAAa,gBAEtBwB,KAAK,YACLC,MAAO7B,EAASI,UAChB2H,YAAY,YACZC,SAAUtG,IAEXd,EAAOR,YACNyG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAOR,gBAIzCsG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAON,UAAY,gBAErBsB,KAAK,WACLC,MAAO7B,EAASM,SAChByH,YAAY,WACZC,SAAU5C,IAEXf,EAAY4D,OAAS,IACpBpB,EAAAA,EAAAA,KAAA,OACEE,UAAU,uBACVmB,MAAO,CAAEC,QAASrC,EAAkB,OAAS,IAAKc,UAElDC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAC7BvC,EAAYsB,KAAI,CAACyC,EAAYC,KAC5BxB,EAAAA,EAAAA,KAAA,OAAiBE,UAAU,kBAAiBH,UAC1CF,EAAAA,EAAAA,MAAA,MACEe,QAASA,IA9HRW,KAE7BhD,EAAqB,CAAEtD,OAAQ,CAAEF,KAAM,WAAYC,MAAOuG,KAE1D/C,GAAmB,GAEnBf,EAAe,GAAG,EAyHYgE,CAAsBF,GACvBxB,SAAA,EAEDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcH,UAC3BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAc,CAAClB,SAAS,YACpB,KACPR,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qBAAoBH,SAChCwB,OAEE,QAbDC,SAoBjBzH,EAAON,WACNuG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAON,eAGzCoG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,kBACzBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE1CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOP,SAAW,gBAEpBuB,KAAK,UACLC,MAAO7B,EAASK,QAChB0H,YAAY,iBACZC,SAAUtG,IAEXd,EAAOP,UACNwG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAOP,cAGzCqG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,mBAGzCC,EAAAA,EAAAA,KAAA,SACEc,MAAM,eACNE,KAAK,OACLC,GAAG,WACHU,MAAM,gBACN5G,KAAK,OACL6G,OAAO,oBACPT,SAAWrG,GAAMK,EAAkBL,MAGrCkF,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,6FAIrCpF,IACCqF,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEE,UAAU,qBACVnE,IAAKpB,EACLkH,IAAI,mBASZ7B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,mBAErBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOJ,eAAiB,gBAE1BoB,KAAK,gBACLC,MAAO7B,EAASQ,cAChBuH,YAAY,gBACZC,SAAUtG,EACViH,UAAQ,IAET/H,EAAOJ,gBACNqG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAOJ,oBAGzCkG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOgI,UAAY,gBAErBhH,KAAK,eACLC,MAAO7B,EAASS,aAChBsH,YAAY,WACZC,SAAUtG,IAEXd,EAAOH,eACNoG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEhG,EAAOH,gBAEvCoG,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,+GAKxCF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,oBACvBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE5CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACVnG,EAAOF,kBAAoB,gBAE7BkB,KAAK,mBACLC,MAAO7B,EAASU,iBAChBqH,YAAY,mBACZC,SAAUtG,IAEXd,EAAOF,mBACNmG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBhG,EAAOF,uBAKdmG,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,GAAEH,SAAC,mBACjBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,mBAAkBf,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBACHC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBH,SACT,IAApB5G,EAASW,QACRkG,EAAAA,EAAAA,KAAA,UACEE,UAAU,aACVU,QAASxD,EAAmB2C,SAC7B,YAIDC,EAAAA,EAAAA,KAAA,UACEE,UAAU,cACVU,QAASxD,EAAmB2C,SAC7B,mBAOPC,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYf,UAAU,YAAWH,SAAC,kGAI1CC,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYf,UAAU,cAAaH,SAAC,4DAK9CF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qBAAoBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAhoBAxF,UAClB,IA4CE,MAAM,WACJ9B,EAAU,UACVC,EAAS,QACTC,EAAO,SACPC,EAAQ,cACRE,EAAa,aACbC,EAAY,iBACZC,GACEV,EAEJ,IACGG,IACAC,IACAC,IACAC,IACAE,EASD,YAPAK,EAAU,CACRV,WAAYA,EAAa,GAAK,yBAC9BC,UAAWA,EAAY,GAAK,wBAC5BC,QAASA,EAAU,GAAK,6BACxBC,SAAUA,EAAW,GAAK,uBAC1BE,cAAeA,EAAgB,GAAK,sBAIxC,GAAIC,EAAc,CAChB,IAAKA,IAAiBC,EAOpB,YANAG,EAAU,CACRJ,aAAcA,EAAe,GAAK,2BAClCC,iBAAkBA,EACd,GACA,iCAKR,GAAID,IAAiBC,EAInB,YAHAG,EAAU,CACRH,iBAAkB,mDAKtB,GAAID,EAAawH,OAAS,GAAKvH,EAAiBuH,OAAS,EAKvD,YAJApH,EAAU,CACRJ,aAAc,oCACdC,iBAAkB,qCAIxB,CAGA,IAzHiB,6BACDmI,KAwHGrI,GAIjB,YAHAK,EAAU,CACRL,cAAe,0BAMnB,IAxH2BsI,KAC7B,MAAMC,EAAc,yBAGpB,QAF2B,WAEJF,KAAKC,IAGnBC,EAAYF,KAAKC,EAC1B,EAgHOE,CAAsB3I,GAIzB,YAHAQ,EAAU,CACRR,QAAS,gDAgBb,UATiCiC,IAAAA,KAAU,CACzCC,MAAO,oBACP0G,KAAM,wCACNzG,KAAM,WACN0G,kBAAkB,EAClBzG,kBAAmB,MACnB0G,iBAAkB,QAGGC,YAAa,CAClCrI,GAAW,GAEX,MAAMgF,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,+BAA8B3E,IACzCtB,EACA,CACEkG,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOrF,EACPsF,QAASpF,KAKfH,GAAW,GAEkB,MAAzBgF,EAASQ,KAAK5F,QAChB2B,IAAAA,KAAU,CACRC,MAAO,kCACPC,KAAM,UACNC,kBAAmB,UAQrBrB,EAAS,sBAETkB,IAAAA,KAAU,CACRC,MAAOwD,EAASQ,KAAK8C,QACrB7G,KAAM,QACNC,kBAAmB,SAGzB,CAGF,CAAE,MAAOoB,GACP9C,GAAW,GACXuB,IAAAA,KAAU,CACRC,MAAO,SACP0G,KAAM,sDACNzG,KAAM,QACNC,kBAAmB,UAErBsC,QAAQC,IAAI,6BAA8BnB,EAC5C,GAiduC+C,SACtB,UAGDC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAASA,IAAMrG,EAAS,2BAA2BwF,SACpD,uBAOTC,EAAAA,EAAAA,KAACyC,EAAAA,EAAQ,YAId,C,qBCrxBHC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+JACD,cACJN,EAAQ,EAAUG,C","sources":["Components/adminpanel/Jobseekers/APEditJobseeker.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditJobseeker = () => {\r\n  const editor = useRef(null);\r\n\r\n  const [userData, setUserData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    contact: \"\",\r\n    location: \"\",\r\n    profile_image: \"\",\r\n    email_address: \"\",\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n    status: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    contact: \"\",\r\n    location: \"\",\r\n    email_address: \"\",\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const mapKey = Cookies.get(\"mapKey\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/users/editusers/${slug}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setSelectedImage(response.data.response.profile_image);\r\n\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n\r\n  // const getData = async () => {\r\n  //   try {\r\n  //     setLoading(true);\r\n  //     const response = await axios.get(\r\n  //       BaseApi + `/admin/candidates/editusers/${slug}`,\r\n  //       null,\r\n  //       {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //           key: ApiKey,\r\n  //           token: tokenKey,\r\n  //           adminid: adminID,\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     setLoading(false);\r\n  //     setUserData(response.data.response.userdetails);\r\n  //     setSelectedImage(response.data.response.profile_image);\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     console.log(\"Error at edit blog at Admin panel\");\r\n  //   }\r\n  // };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // const validateContactNumber = (number) => {\r\n  //   const numberRegex = /^\\+?\\d{1,3}-?\\d{9,10}$/;\r\n  //   return numberRegex.test(number);\r\n  // };\r\n\r\n  const validateContactNumber = (number) => {\r\n    const numberRegex = /^\\+?\\d{0,3}-?\\d{6,10}$/;\r\n    const noCountryCodeRegex = /^\\d{10}$/;\r\n    \r\n    if (noCountryCodeRegex.test(number)) {\r\n      return true; // Number without country code, exactly 10 digits\r\n    } else {\r\n      return numberRegex.test(number);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      // const newErrors = {};\r\n\r\n      // if (userData.first_name === \"\") {\r\n      //   newErrors.first_name = \"First Name is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.last_name === \"\") {\r\n      //   newErrors.last_name = \"Last Name is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.contact === \"\") {\r\n      //   newErrors.contact = \"Contact is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.location === \"\") {\r\n      //   newErrors.location = \"Location is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.email_address === \"\") {\r\n      //   newErrors.email_address = \"Email Address is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // } else if (!isValidEmail(userData.email_address)) {\r\n      //   newErrors.email_address = \"Invalid email format\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.password === \"\") {\r\n      //   newErrors.password = \"Password is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (userData.confirm_password === \"\") {\r\n      //   newErrors.confirm_password = \"Confirm Password is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n\r\n      // setErrors(newErrors);\r\n\r\n      // // Function to validate email format\r\n      // function isValidEmail(email) {\r\n      //   // Use a regular expression to validate email format\r\n      //   const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n      //   return emailPattern.test(email);\r\n      // }\r\n\r\n      const {\r\n        first_name,\r\n        last_name,\r\n        contact,\r\n        location,\r\n        email_address,\r\n        new_password,\r\n        confirm_password,\r\n      } = userData;\r\n\r\n      if (\r\n        !first_name ||\r\n        !last_name ||\r\n        !contact ||\r\n        !location ||\r\n        !email_address\r\n      ) {\r\n        setErrors({\r\n          first_name: first_name ? \"\" : \"First Name is required\",\r\n          last_name: last_name ? \"\" : \"Last Name is required\",\r\n          contact: contact ? \"\" : \"Contact Number is required\",\r\n          location: location ? \"\" : \"Location is required\",\r\n          email_address: email_address ? \"\" : \"Email is required\",\r\n        });\r\n        return;\r\n      }\r\n      if (new_password) {\r\n        if (!new_password || !confirm_password) {\r\n          setErrors({\r\n            new_password: new_password ? \"\" : \"New Password is required\",\r\n            confirm_password: confirm_password\r\n              ? \"\"\r\n              : \"Confirm password is required\",\r\n          });\r\n          return;\r\n        }\r\n        // Check if new email and confirm email match\r\n        if (new_password !== confirm_password) {\r\n          setErrors({\r\n            confirm_password: \"New Password and Confirm Password do not match\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        if (new_password.length < 8 || confirm_password.length < 8) {\r\n          setErrors({\r\n            new_password: \"Please enter atleast 8 characters\",\r\n            confirm_password: \"Please enter atleast 8 characters\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Validate email using the validateEmail function\r\n      if (!validateEmail(email_address)) {\r\n        setErrors({\r\n          email_address: \"Invalid Email Address\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validate contact using the validateEmail function\r\n      if (!validateContactNumber(contact)) {\r\n        setErrors({\r\n          contact: \"Please enter contact number under 10 digits\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // if (Object.keys(newErrors).length === 0) {\r\n\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update Jobseeker?\",\r\n        text: \"Do you want to Update this Jobseeker?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/candidates/editusers/${slug}`,\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Jobseeker Updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setUserData({\r\n          //   ...userData,\r\n          //   new_username: \"\",\r\n          //   conf_username: \"\",\r\n          // });\r\n          // window.scrollTo(0, 0);\r\n          navigate(\"/admin/candidates\");\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n      // }\r\n      // }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update jobseeker. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, profile_image: base64 });\r\n  //   setSelectedImage(base64);\r\n\r\n  //   // Clear the image error\r\n  //   setErrors({\r\n  //     ...errors,\r\n  //     profile_image: \"\",\r\n  //   });\r\n  // };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n\r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        // setSelectedImage(\"\")\r\n        // setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n\r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n\r\n        if (width < 250 || height < 250) {\r\n          Swal.fire({\r\n            title: \"Minimum image resolution should be 250x250 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          // setSelectedImage(\"\")\r\n          // setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            profile_image: \"\",\r\n          });\r\n\r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, profile_image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, profile_image: \"\" });\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    e.preventDefault();\r\n    if (userData.status === 1) {\r\n      setUserData({ ...userData, status: 0 });\r\n    }\r\n    if (userData.status === 0) {\r\n      setUserData({ ...userData, status: 1 });\r\n    }\r\n  };\r\n\r\n  // Code for loading Location\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${mapKey}&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n    if (value != \"\") {\r\n      setErrors({\r\n        location: \"\",\r\n      });\r\n    }\r\n\r\n    setUserData((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (userData.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    // console.log(filterItem);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/candidates\")}\r\n                  >\r\n                    Jobseeker\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Edit Jobseeker Details\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Edit Jobseeker</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      First Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.first_name && \"input-error\"\r\n                      }`}\r\n                      name=\"first_name\"\r\n                      value={userData.first_name}\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.first_name && (\r\n                      <div className=\"text-danger\">{errors.first_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Last Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.last_name && \"input-error\"\r\n                      }`}\r\n                      name=\"last_name\"\r\n                      value={userData.last_name}\r\n                      placeholder=\"Last Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.last_name && (\r\n                      <div className=\"text-danger\">{errors.last_name}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Location<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.location && \"input-error\"\r\n                      }`}\r\n                      name=\"location\"\r\n                      value={userData.location}\r\n                      placeholder=\"Location\"\r\n                      onChange={handleLocationChange}\r\n                    />\r\n                    {suggestions.length > 0 && (\r\n                      <div\r\n                        className=\"suggestionsAdminSide\"\r\n                        style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                      >\r\n                        <ul className=\"locationDropdown\">\r\n                          {suggestions.map((suggestion, index) => (\r\n                            <div key={index} className=\"suggestion-item\">\r\n                              <li\r\n                                onClick={() =>\r\n                                  handleSuggestionClick(suggestion)\r\n                                }\r\n                              >\r\n                                <div className=\"eachLocation\">\r\n                                  <div className=\"locationIcon\">\r\n                                    <LocationOnIcon fontSize=\"small\" />\r\n                                  </div>{\" \"}\r\n                                  <div className=\"locationSuggestion\">\r\n                                    {suggestion}\r\n                                  </div>\r\n                                </div>{\" \"}\r\n                              </li>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {errors.location && (\r\n                      <div className=\"text-danger\">{errors.location}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.contact && \"input-error\"\r\n                      }`}\r\n                      name=\"contact\"\r\n                      value={userData.contact}\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact && (\r\n                      <div className=\"text-danger\">{errors.contact}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Profile Image\r\n                    </label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      label=\"profile_image\"\r\n                      name=\"logo\"\r\n                      accept=\".jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600 KB).\r\n                      Min file size 250 X 250 pixels.\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                        {/* <button className=\"APButton3\" onClick={deleteImage}>\r\n                          Delete\r\n                        </button> */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <hr />\r\n                  <h4 className=\"mb-4\">Login Details</h4>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Email Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.email_address && \"input-error\"\r\n                      }`}\r\n                      name=\"email_address\"\r\n                      value={userData.email_address}\r\n                      placeholder=\"Email Address\"\r\n                      onChange={handleChange}\r\n                      disabled\r\n                    />\r\n                    {errors.email_address && (\r\n                      <div className=\"text-danger\">{errors.email_address}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.password && \"input-error\"\r\n                      }`}\r\n                      name=\"new_password\"\r\n                      value={userData.new_password}\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.new_password && (\r\n                      <div className=\"text-danger\">{errors.new_password}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      * Note: If You want to change User's password, only then\r\n                      fill password below otherwise leave it blank.\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.confirm_password && \"input-error\"\r\n                      }`}\r\n                      name=\"confirm_password\"\r\n                      value={userData.confirm_password}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.confirm_password}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <hr />\r\n                  <div className=\"otherSection\">\r\n                    <h4 className=\"\">Other Details</h4>\r\n                    <div class=\"otherSectionBody\">\r\n                      <p>Jobseeker Status</p>\r\n                      <div className=\"activeButtonBox\">\r\n                        {userData.status === 1 ? (\r\n                          <button\r\n                            className=\"activeTrue\"\r\n                            onClick={handleStatusChange}\r\n                          >\r\n                            Active\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"activeFalse\"\r\n                            onClick={handleStatusChange}\r\n                          >\r\n                            Inactive\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Click above to change Employer's status. Changes will be\r\n                      reflect only after submitting form.\r\n                    </div>\r\n                    <div id=\"emailHelp\" className=\"text-danger\">\r\n                      Changes will be reflect only after submitting form.\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"adminBottomButtons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button1\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button2\"\r\n                      onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                    >\r\n                      CANCEL\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditJobseeker;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;"],"names":["APEditJobseeker","useRef","userData","setUserData","useState","first_name","last_name","contact","location","profile_image","email_address","new_password","confirm_password","status","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","mapKey","navigate","useNavigate","slug","useParams","selectedImage","setSelectedImage","handleChange","e","name","value","target","prev","handleFileUpload1","async","fileInput","file","files","size","Swal","title","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","handleStatusChange","preventDefault","autocompleteService","setAutocompleteService","suggestions","setSuggestions","useEffect","script","document","createElement","google","maps","places","AutocompleteService","console","log","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","prevFilter","getPlacePredictions","input","types","predictions","map","prediction","description","suggestionTaken","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","getData","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","length","style","display","suggestion","index","handleSuggestionClick","LocationOnIcon","label","accept","alt","disabled","password","test","number","numberRegex","validateContactNumber","text","showCancelButton","cancelButtonText","isConfirmed","message","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}