{"version":3,"file":"static/js/8673.bb0857c0.chunk.js","mappings":"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","sources":["Components/adminpanel/Banner Advertisement/APEditBanner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditBanner = () => {\r\n  const [userData, setUserData] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    advertisement_place: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    text: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    advertisement_place: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    text: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"type\") {\r\n      console.log(\"name is type\");\r\n      const newValue = parseInt(e.target.value, 10);\r\n      console.log(\"Parsed value:\", newValue);\r\n      setUserData({ ...userData, type: newValue });\r\n    }\r\n\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/banner/admin_edit/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setSelectedImage(response.data.response.image)\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.title === \"\") {\r\n        newErrors.title = \"Banner Title is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (userData.type === \"\") {\r\n        newErrors.type = \"Advertisement Type is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.advertisement_place === \"\") {\r\n        newErrors.advertisement_place = \"Advertisement Place is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.url === \"\") {\r\n        newErrors.url = \"URL is required\";\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        // Regular expression pattern to match a valid URL\r\n        const urlFormat = /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n\r\n\r\n        if (!urlFormat.test(userData.url)) {\r\n          newErrors.url = \"Invalid URL format\";\r\n          window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.image === \"\") {\r\n        newErrors.image = \"Advertisement Image is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Edit Banner?\",\r\n          text: \"Do you want to Edit this Banner?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/banner/admin_edit/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Banner updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            navigate(\"/admin/banneradvertisements\");\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0);\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update banner. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n  \r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        // setSelectedImage(\"\")\r\n        // setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n  \r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n  \r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n  \r\n        if (width !== 720 || height !== 320) {\r\n          Swal.fire({\r\n            title: \"Image resolution should be 720x320 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          // setSelectedImage(\"\")\r\n          // setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            image: \"\",\r\n          });\r\n  \r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, image: base64 });\r\n  //   setSelectedImage(base64);\r\n\r\n  //   // Clear the image error\r\n  //   setErrors({\r\n  //     ...errors,\r\n  //     image: \"\",\r\n  //   });\r\n  // };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, image: \"\" });\r\n\r\n    const fileInput = document.getElementById(\"formFile\"); // Replace with the actual ID of your file input\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n  };\r\n\r\n  const deleteImageWithSlug = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Image?\",\r\n        text: \"Do you want to delete this Image?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/blog/admin_deleteBlogImage/${slug}`,\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Image Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          \r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not delete Image. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not delete image!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link to=\"/admin/banneradvertisements\" underline=\"hover\" color=\"inherit\">\r\n                    Banner Advertisements\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Edit Banner Advertisement\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Banner Advertisement</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Place Of Advertisement<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.advertisement_place && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"advertisement_place\"\r\n                      value={userData.advertisement_place}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected>Select Place of Advertisement</option>\r\n                      <option value=\"home_ad1\">\r\n                        Home Page Bopx Advertisement Box1 (Width:377px,\r\n                        Height:387px)\r\n                      </option>\r\n                      <option value=\"home_ad2\">\r\n                        Home Page Bopx Advertisement Box2 (Width:377px,\r\n                        Height:387px)\r\n                      </option>\r\n                    </select>\r\n                    {errors.advertisement_place && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.advertisement_place}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.title && \"input-error\"\r\n                      }`}\r\n                      name=\"title\"\r\n                      placeholder=\"Banner Title\"\r\n                      value={userData.title}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.title && (\r\n                      <div className=\"text-danger\">{errors.title}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"APRadioInput mb-5 DashBoardInputBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      Advertisement Type<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <div className=\"APPaymentDetailsRadio\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"pictureAdverts\"\r\n                        name=\"type\"\r\n                        value=\"0\"\r\n                        checked={userData.type.toString() === \"0\"}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label className=\"LabelpictureAdverts\" htmlFor=\"0\">\r\n                        Picture Adverts\r\n                      </label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"googleAdverts\"\r\n                        name=\"type\"\r\n                        value=\"1\"\r\n                        checked={userData.type.toString() === \"1\"}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor=\"2\">Google Adverts</label>\r\n                    </div>\r\n                    {errors.type && (\r\n                      <div className=\"text-danger\">{errors.type}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      URL<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.url && \"input-error\"}`}\r\n                      name=\"url\"\r\n                      placeholder=\"URL\"\r\n                      value={userData.url}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.url && (\r\n                      <div className=\"text-danger\">{errors.url}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      (Enter URL Like https://www.google.com)\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Image<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className={`form-control ${\r\n                        errors.image && \"input-error\"\r\n                      }`}\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      lable=\"Image\"\r\n                      name=\"logo\"\r\n                      accept=\".gif, .jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {errors.image && (\r\n                      <div className=\"text-danger\">{errors.image}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600 KB).\r\n                      Standard size of Advertisement images <br />\r\n                      1) Job Selection Page (Width:720px, Height:320px)\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        {selectedImage ? (\r\n                          <img\r\n                            className=\"selectedInputImage selectedBannerImage\"\r\n                            src={selectedImage}\r\n                            alt=\"Selected\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            className=\"selectedInputImage\"\r\n                            src=\"/Images/adminpanel/demoo.jpg\"\r\n                            alt=\"Selected\"\r\n                          />\r\n                        )}\r\n\r\n                        {userData.image ? (\r\n                          <button\r\n                            className=\"APButton3\"\r\n                            type=\"button\"\r\n                            onClick={() => deleteImageWithSlug(slug)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        ) : (\r\n                          <button className=\"APButton3\" onClick={deleteImage}>\r\n                            Delete\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/banneradvertisements\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditBanner;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["APEditBanner","userData","setUserData","useState","title","type","advertisement_place","url","image","text","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","selectedImage","setSelectedImage","handleChange","e","name","value","target","console","log","newValue","parseInt","prev","handleFileUpload1","async","fileInput","file","files","size","Swal","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","useEffect","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","getData","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","onChange","selected","id","placeholder","htmlFor","checked","toString","lable","accept","alt","onClick","showCancelButton","cancelButtonText","isConfirmed","status","message","deleteImageWithSlug","deleteImage","document","getElementById","newErrors","test","Object","keys","length","APFooter"],"sourceRoot":""}