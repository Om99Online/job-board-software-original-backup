{"version":3,"file":"static/js/2948.7de7c219.chunk.js","mappings":"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","sources":["Components/adminpanel/Jobs/APAddJob.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Select from \"react-select\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import styles\r\nimport APFooter from \"../Elements/APFooter\";\r\nconst APAddJob = () => {\r\n  const [errors, setErrors] = useState({\r\n    user_id: \"\",\r\n    job_title: \"\",\r\n    category: \"\",\r\n    jobDescription: \"\",\r\n    company_name: \"\",\r\n    work_type: \"\",\r\n    contact_name: \"\",\r\n    skill: \"\",\r\n    contact_number: \"\",\r\n    company_website: \"\",\r\n    companyProfile: \"\",\r\n    designation: \"\",\r\n    location: \"\",\r\n    last_date: \"\",\r\n    experience: \"\",\r\n    annual_salary: \"\",\r\n    logo: \"\",\r\n    subCategory: \"\",\r\n  });\r\n  const [jobData, setJobData] = useState({\r\n    job_title: \"\",\r\n    category: \"\",\r\n    subCategory: [],\r\n    jobDescription: \"\",\r\n    company_name: \"\",\r\n    companyProfile: \"\",\r\n    work_type: \"\",\r\n    contact_name: \"\",\r\n    contact_number: \"\",\r\n    company_website: \"\",\r\n    skill: \"\",\r\n    designation: \"\",\r\n    location: \"\",\r\n    experience: \"\",\r\n    annual_salary: \"\",\r\n    logo: \"\",\r\n    last_date: \"\",\r\n    user_id: \"\",\r\n  });\r\n\r\n  const editor = useRef(null);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const mapKey = Cookies.get(\"mapKey\");\r\n\r\n  const navigate = useNavigate();\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [jobCategories, setJobCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [designationList, setDesignationList] = useState([]);\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [experience, setExperience] = useState([]);\r\n  const [salary, setSalary] = useState([]);\r\n  const [workType, setWorkType] = useState([]);\r\n  const [employersList, setEmployersList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [skillValidationError, setSkillValidationError] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [selectedCategories, setSelectedSubCategories] = useState([]);\r\n  const [selectedcategories, setSelectedCategories] = useState([]);\r\n\r\n  const handleSkillChange = (selectedOptions) => {\r\n    setSelectedSkills(selectedOptions); // Update selected skills\r\n\r\n    // Check if selectedOptions is not empty\r\n    // if (selectedOptions.length > 0) {\r\n    //   setSkillValidationError(\"\"); // Clear the error message\r\n    // } else {\r\n    //   setSkillValidationError(\"Skill is required\");\r\n    // }\r\n  };\r\n\r\n  const handleCategory = (selectedOption) => {\r\n    console.log(selectedOption, \"param\");\r\n\r\n    setSelectedCategories(selectedOption);\r\n    console.log(selectedcategories, \"state\");\r\n\r\n    const ids = selectedOption.value;\r\n    // console.log(ids);\r\n\r\n    getSubCategories(selectedOption.value);\r\n\r\n    setJobData((prevJobData) => ({\r\n      ...prevJobData,\r\n      category: ids,\r\n    }));\r\n  };\r\n\r\n  const handleSubcategory = (selectedOption) => {\r\n    console.log(selectedOption);\r\n\r\n    setSelectedSubCategories(selectedOption);\r\n\r\n    const ids = selectedOption.map((item) => item.value);\r\n    console.log(ids);\r\n\r\n    setJobData((prevJobData) => ({\r\n      ...prevJobData,\r\n      subCategory: ids,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"subCategory\") {\r\n      setJobData((prevJobData) => ({\r\n        ...prevJobData,\r\n        subCategory: [...prevJobData.subCategory, value],\r\n      }));\r\n    } else {\r\n      setJobData((prevJobData) => ({\r\n        ...prevJobData,\r\n        [name]: value,\r\n      }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    }\r\n    console.log(jobData);\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/job/admin_add\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n\r\n      // console.log(response);\r\n\r\n      setTotalData(response.data);\r\n      setJobCategories(response.data.response.categories);\r\n      setDesignationList(response.data.response.designationlList);\r\n      setSkillList(response.data.response.skillList);\r\n      setExperience(response.data.response.experience);\r\n      setSalary(response.data.response.sallery);\r\n      setWorkType(response.data.response.worktype);\r\n      setEmployersList(response.data.response.employers);\r\n      // console.log(totalData);\r\n    } catch (error) {\r\n      console.log(\"No data received\");\r\n    }\r\n  };\r\n\r\n  const getSubCategories = async (id) => {\r\n    setSelectedSubCategories([]);\r\n    try {\r\n      const subCatData = await axios.post(\r\n        BaseApi + `/categories/getSubCategory/${id}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setSubCategories(subCatData.data.response);\r\n    } catch (error) {\r\n      console.log(\"Couldn't get Sub category data!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getSubCategories();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    var skills = document.getElementsByName(\"skill\");\r\n    var skillArray = [];\r\n\r\n    skills.forEach((element) => {\r\n      skillArray.push(element.value);\r\n    });\r\n    // console.log(skillArray);\r\n    setJobData({ ...jobData, skill: skillArray });\r\n    // console.log(jobData);\r\n\r\n    // Check initial skill validation\r\n    // if (selectedSkills.length === 0) {\r\n    //   setSkillValidationError(\"Skill is required\");\r\n    // }\r\n\r\n    try {\r\n      const {\r\n        user_id,\r\n        job_title,\r\n        category,\r\n        company_name,\r\n        work_type,\r\n        contact_name,\r\n        contact_number,\r\n        companyProfile,\r\n        designation,\r\n        location,\r\n        last_date,\r\n        experience,\r\n        annual_salary,\r\n        company_website,\r\n      } = jobData;\r\n\r\n      if (\r\n        !user_id ||\r\n        !job_title ||\r\n        !category ||\r\n        !company_name ||\r\n        !work_type ||\r\n        !contact_name ||\r\n        !contact_number ||\r\n        !companyProfile ||\r\n        !designation ||\r\n        !location ||\r\n        !last_date ||\r\n        !experience ||\r\n        !annual_salary\r\n      ) {\r\n        setErrors({\r\n          user_id: user_id ? \"\" : \"Select an Employer\",\r\n          job_title: job_title ? \"\" : \"Job Title is required\",\r\n          category: category ? \"\" : \"Category is required\",\r\n          company_name: company_name ? \"\" : \"Company Name is required\",\r\n          work_type: work_type ? \"\" : \"Work Type is required\",\r\n          contact_name: contact_name ? \"\" : \"Contact Name is required\",\r\n          contact_number: contact_number ? \"\" : \"Contact Number is required\",\r\n          companyProfile: companyProfile ? \"\" : \"Company Profile is required\",\r\n          designation: designation ? \"\" : \"Designation is required\",\r\n          location: location ? \"\" : \"Location is required\",\r\n          last_date: last_date ? \"\" : \"Last Date is required\",\r\n          experience: experience ? \"\" : \"Experience is required\",\r\n          annual_salary: annual_salary ? \"\" : \"Annual Salary is required\",\r\n        });\r\n\r\n        return;\r\n      }\r\n      // Validation: Check if contact is exactly 10 digits\r\n      const contactFormat = /^\\+?\\d{1,3}-?\\d{9,15}$/;\r\n      if (contact_number && !contactFormat.test(contact_number)) {\r\n        setErrors({\r\n          contact_number: \"Please enter contact number under 15 digits\",\r\n        });\r\n        return;\r\n      }\r\n      if (company_website) {\r\n        const urlFormat =\r\n          /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n        if (company_website && !urlFormat.test(company_website)) {\r\n          setErrors({\r\n            company_website: \"Invalid URL format\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (skillValidationError) {\r\n        return;\r\n      }\r\n\r\n      // if (Object.keys(newErrors).length === 0) {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Add Job?\",\r\n        text: \"Do you want to Add this Job?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const updatedData = {\r\n          ...jobData,\r\n          skill: skillArray,\r\n        };\r\n        // setJobData({...jobData, skill : skillArray})\r\n\r\n        setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/job/admin_add\",\r\n          updatedData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        if (response.data.status === 200) {\r\n          setLoading(false);\r\n          Swal.fire({\r\n            title: \"Job added successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          navigate(\"/admin/jobs\");\r\n        } else {\r\n          setLoading(false);\r\n          Swal.fire({\r\n            title: \"Failed\",\r\n            text: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n      // }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Could not add this job. Please try after some time!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not submit job data\");\r\n    }\r\n  };\r\n\r\n  const jobType = (value) => {\r\n    sessionStorage.setItem(\"jobtype\", \"value\");\r\n  };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        fileInput.value = \"\"; // This clears the input\r\n        return;\r\n      }\r\n      // Convert the image to base64\r\n      convertToBase64(file).then((base64) => {\r\n        setJobData({ ...jobData, logo: base64 });\r\n        setSelectedImage(base64);\r\n      });\r\n      setErrors({\r\n        ...errors,\r\n        logo: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Code for loading Location\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${mapKey}&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n    if (value != \"\") {\r\n      setErrors({\r\n        location: \"\",\r\n      });\r\n    }\r\n\r\n    setJobData((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (jobData.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    // console.log(filterItem);\r\n  };\r\n\r\n  // Ends here\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n\r\n      //     // Check initial skill validation\r\n      // if (selectedSkills.length === 0) {\r\n      //   setSkillValidationError(\"Skill is required\");\r\n      // }\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link to=\"/admin/jobs\" underline=\"hover\" color=\"inherit\">\r\n                    Jobs\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Add Jobs</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Add Job</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-5 mt-5\">\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Select Employer<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.user_id && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"user_id\"\r\n                      value={jobData.user_id}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Employer\r\n                      </option>\r\n                      {employersList.map((i, key) => {\r\n                        return (\r\n                          <>\r\n                            <option\r\n                              key={key}\r\n                              value={i.id}\r\n                              // onChange={() => jobType(value)}\r\n                            >\r\n                              {i.first_name} {i.last_name}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.user_id && (\r\n                      <div className=\"text-danger\">{errors.user_id}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Job title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.job_title && \"input-error\"\r\n                      }`}\r\n                      name=\"job_title\"\r\n                      value={jobData.job_title}\r\n                      placeholder=\"Job Title\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.job_title && (\r\n                      <div className=\"text-danger\">{errors.job_title}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx skillPackageCategory APJoditEditor\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Category<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    {/* <select\r\n                      className={`form-select ${\r\n                        errors.category && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"category\"\r\n                      value={jobData.category}\r\n                      onChange={(e) => {\r\n                        handleChange(e);\r\n                        getSubCategories(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Job Category</option>\r\n                      {jobCategories.map((i, index) => (\r\n                        <option value={i.id} key={index}>\r\n                          {i.name}\r\n                        </option>\r\n                      ))}\r\n                    </select> */}\r\n                    <Select\r\n                      // defaultValue={[colourOptions[2], colouptions[3]]}\r\n                      // isMulti\r\n                      isSearchable\r\n                      name=\"category\"\r\n                      options={jobCategories.map((i) => ({\r\n                        value: i.id,\r\n                        label: i.name,\r\n                      }))}\r\n                      className=\"basic-multi-select\"\r\n                      value={selectedcategories}\r\n                      classNamePrefix=\"select\"\r\n                      onChange={(e) => {\r\n                        handleCategory(e);\r\n                        // getSubCategories(e.target.value);\r\n                      }}\r\n                    />\r\n                    {errors.category && (\r\n                      <div className=\"text-danger\">{errors.category}</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* {jobData.category && subCategories ? (\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Sub Category\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.subCategory && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"subCategory\"\r\n                      value={jobData.subCategory}\r\n                      onChange={handleChange}\r\n                      multiple\r\n                    >\r\n                      <option selected>Select Sub Category</option>\r\n                      {subCategories?.map((i, index) => {\r\n                        return (\r\n                          <option key={index} value={i.id}>\r\n                            {i.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.subCategory && (\r\n                      <div className=\"text-danger\">{errors.subCategory}</div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )} */}\r\n\r\n                {jobData.category && subCategories ? (\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx skillPackageSubcategory  APJoditEditor\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      Sub Category\r\n                    </label>\r\n\r\n                    <Select\r\n                      // defaultValue={[colourOptions[2], colouptions[3]]}\r\n                      isMulti\r\n                      isSearchable\r\n                      name=\"Subcategory\"\r\n                      options={subCategories.map((i) => ({\r\n                        value: i.id,\r\n                        label: i.name,\r\n                      }))}\r\n                      className=\"basic-multi-select\"\r\n                      value={selectedCategories}\r\n                      classNamePrefix=\"select\"\r\n                      onChange={handleSubcategory}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                <div className=\"mb-5 DashBoardInputBx DashBoardCreatBx APQuillEditor\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Job Description\r\n                  </label>\r\n                  {/* <JoditEditor\r\n                    ref={editor}\r\n                    name=\"jobDescription\"\r\n                    value={jobData.jobDescription}\r\n                    onChange={(jobDescription) =>\r\n                      handleChange({\r\n                        target: {\r\n                          value: jobDescription,\r\n                          name: \"jobDescription\",\r\n                        },\r\n                      })\r\n                    }\r\n                  /> */}\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={jobData.jobDescription}\r\n                    onChange={(value) =>\r\n                      handleChange({\r\n                        target: { name: \"jobDescription\", value },\r\n                      })\r\n                    }\r\n                    style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder=\"Add your text here...\"\r\n                  />\r\n                  \r\n                  {errors.jobDescription && (\r\n                    <div className=\"text-danger\">{errors.jobDescription}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Company Name<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.company_name && \"input-error\"\r\n                    }`}\r\n                    name=\"company_name\"\r\n                    value={jobData.company_name}\r\n                    placeholder=\"Company Name\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.company_name && (\r\n                    <div className=\"text-danger\">{errors.company_name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                    Work Type<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <select\r\n                    className={`form-select ${\r\n                      errors.work_type && \"input-error\"\r\n                    }`}\r\n                    aria-label=\"Default select example\"\r\n                    name=\"work_type\"\r\n                    value={jobData.work_type}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option selected>Select Work Type</option>\r\n                    {Object.entries(workType).map(([key, value]) => {\r\n                      return (\r\n                        <>\r\n                          <option\r\n                            key={key}\r\n                            value={key}\r\n                            onChange={() => jobType(value)}\r\n                          >\r\n                            {value}\r\n                          </option>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.work_type && (\r\n                    <div className=\"text-danger\">{errors.work_type}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Contact Name<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.contact_name && \"input-error\"\r\n                    }`}\r\n                    name=\"contact_name\"\r\n                    value={jobData.contact_name}\r\n                    placeholder=\"Contact Name\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.contact_name && (\r\n                    <div className=\"text-danger\">{errors.contact_name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"mb-5 DashBoardInputBx DashBoardCreatBx APJoditEditor\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Company Profile<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  {/* <JoditEditor\r\n                    ref={editor}\r\n                    name=\"companyProfile\"\r\n                    value={jobData.companyProfile}\r\n                    onChange={(companyProfile) =>\r\n                      handleChange({\r\n                        target: {\r\n                          value: companyProfile,\r\n                          name: \"companyProfile\",\r\n                        },\r\n                      })\r\n                    }\r\n                  /> */}\r\n                  <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={jobData.companyProfile}\r\n                    onChange={(value) =>\r\n                      handleChange({\r\n                        target: { name: \"companyProfile\", value },\r\n                      })\r\n                    }\r\n                    style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder=\"Add your text here...\"\r\n                  />\r\n\r\n                  {errors.companyProfile && (\r\n                    <div className=\"text-danger\">{errors.companyProfile}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Contact Number<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.contact_number && \"input-error\"\r\n                    }`}\r\n                    name=\"contact_number\"\r\n                    value={jobData.contact_number}\r\n                    placeholder=\"Contact Number\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.contact_number && (\r\n                    <div className=\"text-danger\">{errors.contact_number}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Company Website\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.company_website && \"input-error\"\r\n                    }`}\r\n                    name=\"company_website\"\r\n                    value={jobData.company_website}\r\n                    placeholder=\"Company Website\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.company_website && (\r\n                    <div className=\"text-danger\">{errors.company_website}</div>\r\n                  )}\r\n                  <div id=\"emailHelp\" className=\"form-text\">\r\n                    Eg: https://www.google.com or www.google.com\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                    Experience (In Years)<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <select\r\n                    className={`form-select ${\r\n                      errors.experience && \"input-error\"\r\n                    }`}\r\n                    aria-label=\"Default select example\"\r\n                    name=\"experience\"\r\n                    value={jobData.experience}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option selected value=\"\">\r\n                      Choose Experience\r\n                    </option>\r\n                    {Object.entries(experience).map(([key, value]) => {\r\n                      return (\r\n                        <option key={key} value={key}>\r\n                          {value}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.experience && (\r\n                    <div className=\"text-danger\">{errors.experience}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                    Annual Salary<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <select\r\n                    className={`form-select ${\r\n                      errors.annual_salary && \"input-error\"\r\n                    }`}\r\n                    aria-label=\"Default select example\"\r\n                    name=\"annual_salary\"\r\n                    value={jobData.annual_salary}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option selected value=\"\">\r\n                      Select Salary\r\n                    </option>\r\n                    {Object.entries(salary).map(([key, value]) => {\r\n                      return (\r\n                        <option key={key} value={key}>\r\n                          {value}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.annual_salary && (\r\n                    <div className=\"text-danger\">{errors.annual_salary}</div>\r\n                  )}\r\n                </div>\r\n                {/* <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">\r\n                      Company Logo<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      type=\"file\"\r\n                      lable=\"Image\"\r\n                      name=\"logo\"\r\n                      id=\"file-upload\"\r\n                      accept=\".jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload(e)}\r\n                    />\r\n                    <img\r\n                      src={jobData.logo || \"\"}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"150px\",\r\n                        marginTop: \"10px\",\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                    />\r\n                    {jobData.logo ? (\r\n                      <button\r\n                        className=\"btn-sm btn-outline-dark button1 ml-3\"\r\n                        style={{}}\r\n                        onClick={() => setJobData({ ...jobData, logo: \"\" })}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 10MB)\r\n                    </div>\r\n                  </div> */}\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx skillPackage  APJoditEditor\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                    Skills\r\n                  </label>\r\n\r\n                  <Select\r\n                    // defaultValue={[colourOptions[2], colouptions[3]]}\r\n                    isMulti\r\n                    isSearchable\r\n                    name=\"skill\"\r\n                    options={skillList.map((i) => ({\r\n                      value: i.id,\r\n                      label: i.name,\r\n                    }))}\r\n                    className=\"basic-multi-select\"\r\n                    value={selectedSkills}\r\n                    classNamePrefix=\"select\"\r\n                    onChange={handleSkillChange}\r\n                  />\r\n                  {skillValidationError && (\r\n                    <div className=\"text-danger\">{skillValidationError}</div>\r\n                  )}\r\n\r\n                  {/* <select\r\n                  className=\"form-select\"\r\n                  aria-label=\"Default select example\"\r\n                  name=\"skill\"\r\n                  value={jobData.skill}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option selected>Choose Skills</option>\r\n                  {skillList.map((i, index) => {\r\n                    return (\r\n                      <>\r\n                        <option value={i.id} key={index}>\r\n                          {i.name}\r\n                        </option>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </select> */}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                    Designation<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <select\r\n                    className={`form-select ${\r\n                      errors.designation && \"input-error\"\r\n                    }`}\r\n                    aria-label=\"Default select example\"\r\n                    name=\"designation\"\r\n                    value={jobData.designation}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option selected value=\"\">\r\n                      Choose Designation\r\n                    </option>\r\n                    {designationList.map((i, index) => {\r\n                      return (\r\n                        <>\r\n                          <option value={i.id} key={index}>\r\n                            {i.name}\r\n                          </option>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                  {errors.designation && (\r\n                    <div className=\"text-danger\">{errors.designation}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Location<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.location && \"input-error\"\r\n                    }`}\r\n                    name=\"location\"\r\n                    value={jobData.location}\r\n                    placeholder=\"Location\"\r\n                    onChange={handleLocationChange}\r\n                  />\r\n                  {suggestions.length > 0 && (\r\n                    <div\r\n                      className=\"suggestionsAdminSide\"\r\n                      style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                    >\r\n                      <ul className=\"locationDropdown\">\r\n                        {suggestions.map((suggestion, index) => (\r\n                          <div key={index} className=\"suggestion-item\">\r\n                            <li\r\n                              onClick={() => handleSuggestionClick(suggestion)}\r\n                            >\r\n                              <div className=\"eachLocation\">\r\n                                <div className=\"locationIcon\">\r\n                                  <LocationOnIcon fontSize=\"small\" />\r\n                                </div>{\" \"}\r\n                                <div className=\"locationSuggestion\">\r\n                                  {suggestion}\r\n                                </div>\r\n                              </div>{\" \"}\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                  {errors.location && (\r\n                    <div className=\"text-danger\">{errors.location}</div>\r\n                  )}\r\n                </div>\r\n                <div class=\"mb-5 DashBoardInputBx\">\r\n                  <label for=\"formFile\" class=\"form-label\">\r\n                    Company Logo\r\n                  </label>\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"file\"\r\n                    id=\"formFile\"\r\n                    label=\"profile_image\"\r\n                    name=\"logo\"\r\n                    accept=\".jpeg, .png, .jpg, .gif\"\r\n                    onChange={(e) => handleFileUpload1(e)}\r\n                  />\r\n\r\n                  <div id=\"emailHelp\" class=\"form-text\">\r\n                    Supported File Types: gif, jpg, jpeg, png (Max. 600 KB).\r\n                  </div>\r\n                  {selectedImage && (\r\n                    <div>\r\n                      <div className=\"\">\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                      </div>\r\n\r\n                      {/* <button className=\"APButton3\" onClick={deleteImage}>\r\n                        Delete\r\n                      </button> */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Last Date<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"form3Example3\"\r\n                    className={`form-control ${\r\n                      errors.last_date && \"input-error\"\r\n                    }`}\r\n                    name=\"last_date\"\r\n                    value={jobData.last_date}\r\n                    placeholder=\"Last Date\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.last_date && (\r\n                    <div className=\"text-danger\">{errors.last_date}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"APAddJobBottomButtons\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/jobs\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddJob;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;"],"names":["APAddJob","errors","setErrors","useState","user_id","job_title","category","jobDescription","company_name","work_type","contact_name","skill","contact_number","company_website","companyProfile","designation","location","last_date","experience","annual_salary","logo","subCategory","jobData","setJobData","tokenKey","useRef","Cookies","adminID","mapKey","navigate","useNavigate","totalData","setTotalData","jobCategories","setJobCategories","subCategories","setSubCategories","designationList","setDesignationList","skillList","setSkillList","setExperience","salary","setSalary","workType","setWorkType","employersList","setEmployersList","loading","setLoading","selectedSkills","setSelectedSkills","skillValidationError","setSkillValidationError","selectedImage","setSelectedImage","selectedCategories","setSelectedSubCategories","selectedcategories","setSelectedCategories","handleChange","e","name","value","target","prevJobData","prev","console","log","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","categories","designationlList","sallery","worktype","employers","error","getSubCategories","subCatData","id","useEffect","window","scrollTo","handleFileUpload1","fileInput","file","files","size","Swal","title","icon","confirmButtonText","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","convertToBase64","then","base64","autocompleteService","setAutocompleteService","suggestions","setSuggestions","script","document","createElement","src","google","maps","places","AutocompleteService","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","prevFilter","getPlacePredictions","input","types","predictions","status","map","prediction","description","suggestionTaken","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","htmlFor","onChange","selected","i","first_name","last_name","type","placeholder","Select","isSearchable","options","label","classNamePrefix","selectedOption","ids","handleCategory","isMulti","item","ReactQuill","theme","style","minHeight","height","Object","entries","_ref","sessionStorage","setItem","_ref2","_ref3","selectedOptions","index","length","display","suggestion","onClick","handleSuggestionClick","LocationOnIcon","class","for","accept","alt","skills","getElementsByName","skillArray","forEach","element","push","test","text","showCancelButton","cancelButtonText","isConfirmed","updatedData","message","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}