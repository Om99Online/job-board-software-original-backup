{"version":3,"file":"static/js/113.5aaf3c41.chunk.js","mappings":"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","sources":["Components/adminpanel/Email Templates/APEmailTemplateSetting.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\n// import CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\n// import DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\n// import ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\n// import BlockIcon from \"@mui/icons-material/Block\";\r\n// import CheckIcon from \"@mui/icons-material/Check\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n// import AddIcon from \"@mui/icons-material/Add\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n// import VerifiedIcon from \"@mui/icons-material/Verified\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEmailTemplateSetting = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  // const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = parseInt(Cookies.get(\"adminID\"));\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    setSelectedPlan(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPlan(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const [userAccess , setUserAccess] = useState({})\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/emailtemplates\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response.email);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  // const handleActivate = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Activate Page?\",\r\n  //       text: \"Do you want to Activate this Page?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/page/admin_activate/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Page Activated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Activate Page\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't activate the record!\", error.message);\r\n  //   }\r\n  // };\r\n  // const handleDeactivate = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Deactivate Page?\",\r\n  //       text: \"Do you want to Deactivate this Page?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/page/admin_deactivate/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Page Deactivated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Deactivate Page\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't deactivate the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  // const handleDelete = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Delete Page?\",\r\n  //       text: \"Do you want to Delete this Page?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/page/admin_delete/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Page Deleted successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Delete Page\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't delete the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n\r\n  // const handleMultipleDeactivate = async () => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Deactivate Pages?\",\r\n  //       text: \"Do you want to Deactivate Pages?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       const ids = checkedData.join(\",\");\r\n  //       console.log(ids);\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + \"/admin\",\r\n  //         {\r\n  //           idList: ids,\r\n  //           action: \"deactivate\",\r\n  //         }, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Pages Deactivated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: \"Couldn't Deactivate!\",\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Deactivate Pages\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't deactivate the record!\", error.message);\r\n  //   }\r\n  // };\r\n  // const handleMultipleActivate = async () => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Activate Pages?\",\r\n  //       text: \"Do you want to Activate Pages?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       let ids = checkedData.toString();\r\n  //       console.log(ids);\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + \"/admin/page/index\",\r\n  //         {\r\n  //           idList: ids,\r\n  //           action: \"activate\",\r\n  //         }, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Pages Activated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: \"Couldn't Activate!\",\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Activate Pages\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't activate the record!\", error.message);\r\n  //   }\r\n  // };\r\n  // const handleMultipleDelete = async () => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Delete Pages?\",\r\n  //       text: \"Do you want to Delete Pages?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       let ids = checkedData.toString();\r\n  //       console.log(ids);\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + \"/admin/page/index\",\r\n  //         {\r\n  //           idList: ids,\r\n  //           action: \"delete\",\r\n  //         }, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Pages Deleted successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: \"Couldn't Delete!\",\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Delete Pages\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't Delete the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter(\r\n        (item) =>\r\n          item.title?.toLowerCase().includes(query) ||\r\n          item.subject?.toLowerCase().includes(query)\r\n      )\r\n      .sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n          return direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n          return direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return (\r\n      item.title?.toLowerCase().includes(searchString) ||\r\n      item.subject?.toLowerCase().includes(searchString)\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset currentPage to 1 when searchQuery changes\r\n  }, [searchQuery]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  // const handleSearchChange = (e) => {\r\n  //   const newQuery = e.target.value.toLowerCase();\r\n  //   setSearchQuery(newQuery);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const access = Cookies.get(\"access\")\r\n\r\n    if(typeof(access) !== null  || access !==  \"\" || access !==  undefined){\r\n\r\n        console.log(JSON.parse(access))\r\n\r\n        setUserAccess(JSON.parse(access))\r\n    }else{\r\n        setUserAccess({})\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin APTextPages\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height APEmailTemplateListing\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link underline=\"hover\" color=\"inherit\">\r\n                    Email Template Management\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Email Template List\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Email Template List</h2>\r\n              </div>\r\n              <div className=\"manageSubadminPart1 APTPSec1\">\r\n                <h4>\r\n                  No. of Email Templates {indexOfFirstItem + 1}-\r\n                  {Math.min(\r\n                    indexOfLastItem,\r\n                    filteredData.length || listData.length\r\n                  )}{\" \"}\r\n                  of {listData.length}\r\n                </h4>\r\n              </div>\r\n\r\n              <div className=\"manageSubadminPart2\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th onClick={() => handleColumnClick(\"title\")}>\r\n                        Title{symbol}\r\n                      </th>\r\n                      <th onClick={() => handleColumnClick(\"subject\")}>\r\n                        Subject{symbol}\r\n                      </th>\r\n\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentItems.map((i) => {\r\n                      return (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"\">\r\n                              <Link\r\n                                to={`/admin/emailtemplates/editEmailtemplate/${i.slug}`}\r\n                              >\r\n                                {i.title}\r\n                              </Link>\r\n                            </td>\r\n                            <td className=\"\">\r\n                              <Link\r\n                                to={`/admin/emailtemplates/editEmailtemplate/${i.slug}`}\r\n                              >\r\n                                {i.subject}\r\n                              </Link>\r\n                            </td>\r\n\r\n                            <td className=\"APActionButton\">\r\n                              {/* {i.status === 1 ? (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleDeactivate(i.slug)}\r\n                                  >\r\n                                    <Tooltip title=\"Deactivate\">\r\n                                      <CheckIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleActivate(i.slug)}\r\n                                  >\r\n                                    <Tooltip title=\"Activate\">\r\n                                      <BlockIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                )} */}\r\n\r\n                            {(userAccess[10]?.Edit === 1 || adminID === 1)&& <>\r\n                              <button\r\n                                className=\"btn-primary\"\r\n                                onClick={() =>\r\n                                  navigate(\r\n                                    `/admin/emailtemplates/editEmailtemplate/${i.slug}`\r\n                                  )\r\n                                }\r\n                              >\r\n                                <Tooltip title=\"Edit\">\r\n                                  <CreateIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                              </>}\r\n\r\n                              <button\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => handleOpen(i)}\r\n                              >\r\n                                <Tooltip title=\"Delete\">\r\n                                  <RemoveRedEyeIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <div>\r\n                      <Modal\r\n                        className=\"modalMain\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box className=\"modal adminModal modal-content\">\r\n                          <IconButton\r\n                            onClick={handleClose}\r\n                            className=\"close-button\"\r\n                            style={{ position: \"absolute\", top: 10, right: 10 }}\r\n                          >\r\n                            &times;\r\n                          </IconButton>\r\n\r\n                          {/* <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h4\"\r\n                            component=\"h3\"\r\n                          >\r\n                            {selectedPlan &&\r\n                              HTMLReactParser(selectedPlan.title)}\r\n                          </Typography> */}\r\n                          {/* <hr /> */}\r\n                          <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          >\r\n                            {selectedPlan && (\r\n                              <div className=\"modals \">\r\n                                <div className=\"modalHead\">\r\n                                  <h1>{HTMLReactParser(selectedPlan.title)}</h1>\r\n                                </div>\r\n                                <div className=\"modalBody mt-4\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-4 fw-bold m-2 leftData\">\r\n                                      {/* Amount:{\" \"} */}\r\n                                    </div>\r\n                                    <div className=\"col-md-4 m-2 rightData\">\r\n                                      {/* {selectedPlan.amount} */}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  {/* <div className=\"row\"> */}\r\n                                  {/* <div className=\"col-md-4 fw-bold m-2 leftData\"> */}\r\n                                  {/* Plan Type:{\" \"} */}\r\n                                  {/* </div> */}\r\n                                  <div className=\"emailTemplateModalAdmin\">\r\n                                    {HTMLReactParser(selectedPlan.template)}\r\n                                  </div>\r\n                                  {/* </div> */}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                            {/* {selectedPlan &&\r\n                              HTMLReactParser(selectedPlan.template)} */}\r\n                          </Typography>\r\n                          <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          ></Typography>\r\n                        </Box>\r\n                      </Modal>\r\n                    </div>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"manageSubadminpart3\">\r\n                <div className=\"pagination\">\r\n                  <Stack spacing={2}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      color=\"primary\"\r\n                      page={currentPage}\r\n                      onChange={(event, page) => setCurrentPage(page)}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEmailTemplateSetting;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["APEmailTemplateSetting","navigate","useNavigate","loading","setLoading","useState","listData","setListData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","parseInt","currentPage","setCurrentPage","open","setOpen","selectedPlan","setSelectedPlan","handleClose","userAccess","setUserAccess","sortConfig","setSortConfig","key","direction","symbol","setSymbol","sortedAndFilteredData","array","query","filter","item","_item$title","_item$subject","title","toLowerCase","includes","subject","sort","a","b","sortAndFilterData","filteredData","_item$title2","_item$subject2","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","async","response","axios","BaseApi","headers","ApiKey","token","adminid","data","email","error","console","log","getData","window","scrollTo","handleColumnClick","access","undefined","JSON","parse","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","min","class","onClick","scope","map","_userAccess$","slug","Edit","Tooltip","CreateIcon","RemoveRedEyeIcon","Modal","onClose","Box","IconButton","style","position","top","right","id","sx","mt","HTMLReactParser","template","Stack","spacing","Pagination","count","page","onChange","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}