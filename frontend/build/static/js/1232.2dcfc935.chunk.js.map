{"version":3,"file":"static/js/1232.2dcfc935.chunk.js","mappings":"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","sources":["Components/element/ResetPassword.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Cookies from \"js-cookie\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { Tooltip } from \"@mui/material\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ResetPassword = () => {\r\n  const { slug1, slug2, slug3 } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n    id: slug1,\r\n    md5id: slug2,\r\n    email: slug3,\r\n  });\r\n  const recaptchaLanguage = Cookies.get(\"selectedLanguage\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  const currentLanguage = Cookies.get(\"selectedLanguage\") || \"en\";\r\n\r\n  const [initialData, setInitialData] = useState({\r\n    id: slug1,\r\n    md5id: slug2,\r\n    email: slug3,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [errors, setErrors] = useState({\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  const [showPassword, setShowPassword] = useState(false); // New state variable\r\n\r\n  // ... Other state variables and functions ...\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false); // New state variable\r\n\r\n  // ... Other state variables and functions ...\r\n\r\n  const toggleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  const [isCaptchaVerified, setIsCaptchaVerified] = useState(false);\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  let captchaKey = Cookies.get(\"captchaKey\");\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [hoverColor, setHoverColor] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setHoverColor(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverColor(false);\r\n  };\r\n\r\n  const [pageContent, setPageContent] = useState([]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log(initialData);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/resetPassword\",\r\n        initialData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      //   setPageContent(response.data.response);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      \r\n      console.log(\"Cannot get data of benefit page\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (formData.password === \"\") {\r\n        newErrors.password = t(\"resetPassword.newPassRequired\");\r\n      }\r\n      if (formData.confirm_password === \"\") {\r\n        newErrors.confirm_password = t(\"resetPassword.confirmPassRequired\");\r\n      }\r\n      if (formData.password) {\r\n        if (formData.password.length < 8) {\r\n          newErrors.password = t(\"resetPassword.passwordLengthError\");\r\n        }\r\n      }\r\n      if (formData.confirm_password) {\r\n        if (formData.confirm_password.length < 8) {\r\n          newErrors.confirm_password = t(\"resetPassword.passwordLengthError\");\r\n        }\r\n      }\r\n      if (formData.password && formData.confirm_password) {\r\n        if (formData.password !== formData.confirm_password) {\r\n          newErrors.confirm_password =\r\n          t(\"resetPassword.passwordMatchError\");\r\n        }\r\n      }\r\n\r\n      //   if (!isCaptchaVerified) {\r\n      //     newErrors.captcha = \"Please verify captcha\";\r\n      //   }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        // if (isCaptchaVerified) {\r\n        setLoading(true);\r\n        const updatedData = {\r\n          ...formData,\r\n          language: currentLanguage\r\n        }\r\n        const response = await axios.post(\r\n          BaseApi + \"/candidates/resetPassword\",\r\n          updatedData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        setLoading(false);\r\n        // console.log(\"yaha\");\r\n        if (response.data.status === 200) {\r\n          navigate(\"/user/employerlogin\");\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else if (response.data.status === 500) {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n      //   }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: t(\"resetPassword.failedTitle\"),\r\n        text: t(\"resetPassword.failedTxt\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"resetPassword.close\"),\r\n      });\r\n    }\r\n    console.log(formData);\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"privacyPolicy\">\r\n            <div className=\"text-center PPSection1\">\r\n              <h1 className=\"\">{t(\"resetPassword.resetPassword\")}</h1>\r\n              <h6 className=\"text-muted fw-normal\">\r\n                {\" \"}\r\n                <Link to=\"/\" style={{ color: \"grey\" }}>\r\n                {t(\"resetPassword.home\")}\r\n                </Link>{\" \"}\r\n                /{t(\"resetPassword.resetPassword\")}\r\n                {/* /{pageContent.static_page_title} */}\r\n              </h6>\r\n            </div>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"card forgotPasswordCard\">\r\n                  <div className=\"card-body\">\r\n                    <h2 className=\"text-center pb-4 pt-2\">\r\n                    {t(\"resetPassword.resetYour\")}\r\n                      <span className=\"textGradient\">\r\n                        {\" \"}\r\n                        <span className=\"SubHaddingTxt\"> {t(\"resetPassword.password\")}</span>\r\n                      </span>\r\n                    </h2>\r\n                    <p className=\"forgotPasswordProcessTxt\">\r\n                    {t(\"resetPassword.text1\")}\r\n                    </p>\r\n                    <form>\r\n                      <div className=\"mb-2 passwordBox\">\r\n                        <input\r\n                          type={showPassword ? \"text\" : \"password\"}\r\n                          className={`form-control ${\r\n                            errors.password && \"input-error\"\r\n                          }`}\r\n                          id=\"exampleInputEmail1\"\r\n                          aria-describedby=\"emailHelp\"\r\n                          name=\"password\"\r\n                          value={formData.password}\r\n                          placeholder={t(\"resetPassword.newPassword\")}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <div className=\"passwordVisibility\">\r\n                          <p\r\n                            className=\"btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={togglePasswordVisibility}\r\n                          >\r\n                            {showPassword ? (\r\n                              <>\r\n                                <Tooltip title=\"Hide Password\">\r\n                                  <VisibilityOffIcon />\r\n                                </Tooltip>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Tooltip title=\"View Password\">\r\n                                  <VisibilityIcon />\r\n                                </Tooltip>\r\n                              </>\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                        {errors.password && (\r\n                          <div className=\"text-danger\">{errors.password}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"mb-2 passwordBox\">\r\n                        <input\r\n                          type={showConfirmPassword ? \"text\" : \"password\"}\r\n                          className={`form-control ${\r\n                            errors.confirm_password && \"input-error\"\r\n                          }`}\r\n                          id=\"exampleInputEmail1\"\r\n                          aria-describedby=\"emailHelp\"\r\n                          name=\"confirm_password\"\r\n                          value={formData.confirm_password}\r\n                          placeholder={t(\"resetPassword.confirmPassword\")}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <div className=\"passwordVisibility\">\r\n                          <p\r\n                            className=\"btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={toggleConfirmPasswordVisibility}\r\n                          >\r\n                            {showConfirmPassword ? (\r\n                              <>\r\n                                <Tooltip title=\"Hide Password\">\r\n                                  <VisibilityOffIcon />\r\n                                </Tooltip>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <Tooltip title=\"View Password\">\r\n                                  <VisibilityIcon />\r\n                                </Tooltip>\r\n                              </>\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                        {errors.confirm_password && (\r\n                          <div className=\"text-danger\">\r\n                            {errors.confirm_password}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      {/* <p className=\"forgotPasswordReturnLogin text-muted\">\r\n                        Oops, I just remembered it! Take me back to the{\" \"}\r\n                        <Link to={() => navigate(window.history.go(-1))}>\r\n                          Login Page\r\n                        </Link>\r\n                      </p> */}\r\n\r\n                      {/* <div className=\"reCaptchaLogin mb-4\">\r\n                        <ReCAPTCHA\r\n                          sitekey={captchaKey}\r\n                          // sitekey=\"6Ld8bV8nAAAAAEp24xWlKsVFhVDYlBctFF50MI1x\"\r\n                          onChange={(value) => setIsCaptchaVerified(value)}\r\n                        />\r\n                        {errors.captcha && (\r\n                          <div className=\"text-danger\">{errors.captcha}</div>\r\n                        )}\r\n                      </div> */}\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn w-100 mt-4\"\r\n                        onClick={handleClick}\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            secondaryColor &&\r\n                            (hoverColor ? secondaryColor : primaryColor)\r\n                          }`,\r\n                        }}\r\n                        onMouseEnter={handleMouseEnter}\r\n                        onMouseLeave={handleMouseLeave}\r\n                      >\r\n                        {t(\"resetPassword.changePasswordButton\")}\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":["ResetPassword","slug1","slug2","slug3","useParams","formData","setFormData","useState","password","confirm_password","id","md5id","email","t","i18n","Cookies","useTranslation","currentLanguage","initialData","setInitialData","loading","setLoading","errors","setErrors","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","isCaptchaVerified","setIsCaptchaVerified","primaryColor","secondaryColor","tokenKey","navigate","useNavigate","hoverColor","setHoverColor","pageContent","setPageContent","useEffect","async","console","log","axios","BaseApi","headers","key","ApiKey","token","error","getData","handleChange","e","name","value","target","prevData","prev","window","scrollTo","_jsxs","_Fragment","children","_jsx","NavBar","className","Link","to","style","color","type","placeholder","onChange","onClick","togglePasswordVisibility","Tooltip","title","VisibilityOffIcon","VisibilityIcon","toggleConfirmPasswordVisibility","preventDefault","newErrors","length","Object","keys","updatedData","language","response","data","status","Swal","message","icon","confirmButtonText","text","backgroundColor","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","Footer"],"sourceRoot":""}