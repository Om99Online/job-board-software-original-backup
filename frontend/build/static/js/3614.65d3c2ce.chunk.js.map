{"version":3,"file":"static/js/3614.65d3c2ce.chunk.js","mappings":"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","sources":["Components/element/JobCard.js","Components/element/JobDescription.js","../node_modules/@mui/base/Portal/Portal.js","../node_modules/@mui/base/utils/ClassNameConfigurator.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/transitions/utils.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  LinkedinShareButton,\r\n  PinterestShareButton,\r\n  EmailShareButton,\r\n  InstapaperShareButton,\r\n  TelegramShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  LinkedinIcon,\r\n  EmailIcon,\r\n  PinterestIcon,\r\n  InstapaperIcon,\r\n  TelegramIcon,\r\n} from \"react-share\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nconst JobCard = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null); // Track the selected payment\r\n\r\n  const handleOpen = () => {\r\n    // console.log(\"Clicked payment:\", plan); // Add this line\r\n    // setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const handleClose = () => {\r\n    // setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const curr = Cookies.get(\"curr\");\r\n\r\n  // const handleJobView = () => {\r\n  //   if (!tokenKey) {\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   } else {\r\n  //     if(props.itemSearched) {\r\n  //       navigate(`/jobdescription/${props.slug}/${props.cat_slug}/${props.itemSearched}`);\r\n  //     }\r\n  //     navigate(`/jobdescription/${props.slug}/${props.cat_slug}`);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"card Jcard\" \r\n    // onClick={() => handleJobView()}\r\n    >\r\n      <div className=\"card-body JcardBody\">\r\n        <div className=\"JcardHead d-flex flex-row justify-content-between\">\r\n          {/* <button\r\n            onClick={() => handleJobView()}\r\n            className=\"h5 card-title JcardTitle homeJobs\"\r\n          >\r\n            {props.title}\r\n          </button> */}\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            {props.title}\r\n          </Link>\r\n          {/* <Link className=\"shareNodeJobCard\" onClick={() => handleOpen()}>\r\n            <i\r\n              className=\"fa-solid fa-share-nodes\"\r\n              style={{ color: \"#bdbdbd\" }}\r\n            ></i>\r\n          </Link> */}\r\n          <div>\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box sx={{ ...style, width: 700 }}>\r\n                <Button\r\n                  onClick={handleClose} // Call handleClose when the button is clicked\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                  }} // Position the button\r\n                >\r\n                  {t(\"messageForm.close\")}\r\n                </Button>\r\n\r\n                <Typography\r\n                  id=\"modal-modal-title\"\r\n                  variant=\"h6\"\r\n                  component=\"h2\"\r\n                ></Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 6 }}>\r\n                  <div className=\"modals \">\r\n                    <div className=\"modalHead\">\r\n                      <h3>{t(\"messageForm.shareNow\")}</h3>\r\n                    </div>\r\n                    <div className=\"modalBody mt-4\">\r\n                      <ul className=\"shareIconsList\">\r\n                        <li className=\"shareIconsButtons\">\r\n                          <FacebookShareButton url={props.job_url}>\r\n                            <FacebookIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></FacebookIcon>\r\n                          </FacebookShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TwitterShareButton url={props.job_url}>\r\n                            <TwitterIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TwitterIcon>\r\n                          </TwitterShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <WhatsappShareButton url={props.job_url}>\r\n                            <WhatsappIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></WhatsappIcon>\r\n                          </WhatsappShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <LinkedinShareButton url={props.job_url}>\r\n                            <LinkedinIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></LinkedinIcon>\r\n                          </LinkedinShareButton>\r\n                        </li>\r\n\r\n                        <li className=\"shareIconsButtons\">\r\n                          <EmailShareButton url={props.job_url}>\r\n                            <EmailIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></EmailIcon>\r\n                          </EmailShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <PinterestShareButton url={props.job_url}>\r\n                            <PinterestIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></PinterestIcon>\r\n                          </PinterestShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <InstapaperShareButton url={props.job_url}>\r\n                            <InstapaperIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></InstapaperIcon>\r\n                          </InstapaperShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TelegramShareButton url={props.job_url}>\r\n                            <TelegramIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TelegramIcon>\r\n                          </TelegramShareButton>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </Typography>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection1 float-left\">\r\n          {curr}\r\n          {props.min_salary}-{curr}\r\n          {props.max_salary}/{t(\"messageForm.jobCardYear\")}\r\n        </div>\r\n        <div className=\"JcardBodySection2 flex-row\">\r\n          <div className=\"section2Item1 float-left\">\r\n            {t(\"messageForm.jobCardExperience\")}: {props.min_exp}{\" \"}\r\n            {t(\"messageForm.jobCardYears\")}\r\n          </div>\r\n          <div className=\"section2Item2 text-muted\">\r\n            <i className=\"fa-regular fa-calendar-days\"></i> {props.created}{\" \"}\r\n            {t(\"messageForm.jobCardDaysAgo\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection3\">\r\n          {props.description?HTMLReactParser(props.description.substring(0, 90)):\"\"}\r\n        </div>\r\n        <h6 className=\"card-footer JcardFooter\">\r\n          {props.logo ? (\r\n            <>\r\n              <div className=\"JcardFooterItem1DynamicImage\">\r\n                <img src={props.logo} alt=\"\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"JcardFooterItem1\">\r\n                <img src=\"/Images/dummy-logo.png\" alt=\"\" />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"JcardFooterItem2\">\r\n            <h6>{props.company_name}</h6>\r\n            <p className=\"text-muted\">\r\n              <i\r\n                className=\"fa-solid fa-location-dot\"\r\n                style={{ color: \"#a3a3a3\" }}\r\n              ></i>{\" \"}\r\n              {props.job_city?.substring(0, 20)}\r\n            </p>\r\n          </div>\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            <div className=\"JcardFooterItem3\">{props.work_type}</div>\r\n          </Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport JobCard from \"./JobCard\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  LinkedinShareButton,\r\n  PinterestShareButton,\r\n  EmailShareButton,\r\n  InstapaperShareButton,\r\n  TelegramShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  LinkedinIcon,\r\n  EmailIcon,\r\n  PinterestIcon,\r\n  InstapaperIcon,\r\n  TelegramIcon,\r\n} from \"react-share\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst JobDescription = () => {\r\n  const { slug } = useParams();\r\n  const navigate = useNavigate();\r\n  const [jobDescriptiondata, setJobDescriptionData] = useState([]);\r\n  const [relevantJob, setRelevantJob] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [skillData, setSkillData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [coverLetterData, setCoverLetterData] = useState([]);\r\n  const [coverLetterSelected, setCoverLetterSelected] = useState();\r\n  let jobSearched = sessionStorage.getItem(\"jobSearched\");\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const usertype = Cookies.get(\"usertype\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null); // Track the selected payment\r\n  const [isAgreementChecked, setIsAgreementChecked] = useState(false);\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  // let captchaKey = Cookies.get(\"captchaKey\");\r\n\r\n  const [hoverColor, setHoverColor] = useState(false);\r\n\r\n  const [hoverSearchColor, setHoverSearchColor] = useState(false);\r\n\r\n  const handleSearchMouseEnter = () => {\r\n    setHoverSearchColor(true);\r\n  };\r\n\r\n  const handleSearchMouseLeave = () => {\r\n    setHoverSearchColor(false);\r\n  };\r\n\r\n  const [hoverUploadCVColor, setHoverUploadCVColor] = useState(false);\r\n\r\n  const handleUploadCVMouseEnter = () => {\r\n    setHoverUploadCVColor(true);\r\n  };\r\n\r\n  const handleUploadCVMouseLeave = () => {\r\n    setHoverUploadCVColor(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    // console.log(\"Clicked payment:\", plan); // Add this line\r\n    // setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (tokenKey === null || tokenKey === \"\") {\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   }\r\n  // }, []);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/candidates/apps_jobdetail/${slug}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        \r\n        setJobDescriptionData(response.data.response);\r\n        const userId = response.data.response.user_id\r\n        jobViewCount(userId);\r\n        if(jobSearched === \"1\") {\r\n          console.log(\"inside if\", jobSearched);\r\n          jobSearchViewCount(userId);\r\n        }\r\n        sessionStorage.removeItem(\"jobSearched\");\r\n        setRelevantJob(response.data.response.relevantJobList);\r\n        setSkillData(response.data.response.skills_array);\r\n        setCoverLetterData(response.data.response.coverletter);\r\n        // console.log(relevantJob);\r\n      } else {\r\n        Swal.fire({\r\n          text: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if(error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\r\n        \"Cannot get job description through applied job section at job seeker\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const jobViewCount = async(userId) => {\r\n    try {\r\n      if(userId){\r\n        const response = await axios.post(\r\n          BaseApi + `/job/view/${slug}`,\r\n          {id: userId},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // key: ApiKey,\r\n              // token: tokenKey,\r\n            },\r\n          }\r\n        )\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  const jobSearchViewCount = async(userId) => {\r\n    try {\r\n      if(userId){\r\n        const response = await axios.post(\r\n          BaseApi + `/job/searchView/${slug}`,\r\n          {id: userId},\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // key: ApiKey,\r\n              // token: tokenKey,\r\n            },\r\n          }\r\n        )\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n  const getAppliedData = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/job/applypop/${id}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      // console.log(response);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error at applied button at job description\");\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   // Check if tokenKey is not present\r\n  //   if (!tokenKey) {\r\n  //     // Redirect to the home page\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   } else {\r\n  //     // TokenKey is present, fetch data or perform other actions\r\n  //     getAppliedData();\r\n  //     getData();\r\n  //     window.scrollTo(0, 0);\r\n  //   }\r\n  // }, [tokenKey, navigate]);\r\n  useEffect(() => {\r\n    getAppliedData();\r\n    getData();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const savedJob = async (slug) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/job/JobSave/${slug}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        getData();\r\n        Swal.fire({\r\n          title: t(\"jobDescription.savedJobSuccessTitle\"),\r\n          icon: \"success\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: t(\"jobDescription.savedJobFailedTitle\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"jobDescription.close\"),\r\n      });\r\n      console.log(\"Cannot save job!\");\r\n    }\r\n  };\r\n\r\n  const handleDeclarationSubmit = async (slug) => {\r\n    if (!isAgreementChecked) {\r\n      setValidationError(t(\"jobDescription.declarationValidationError\"));\r\n      setError(false);\r\n    } else {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.post(\r\n          BaseApi + `/job/jobApplyDetail/${slug}`,\r\n          coverLetterSelected,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        setLoading(false);\r\n        if (response.data.status === 200) {\r\n          getData();\r\n          Swal.fire({\r\n            title: t(\"jobDescription.jobAppliedSuccessTitle\"),\r\n            icon: \"success\",\r\n            confirmButtonText: t(\"jobDescription.close\"),\r\n          });\r\n        } else {\r\n          getData();\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"warning\",\r\n            confirmButtonText: t(\"jobDescription.close\"),\r\n          });\r\n        }\r\n        // window.location.reload();\r\n      } catch (error) {\r\n        setLoading(false);\r\n        if(error.message === \"Network Error\") {\r\n          Cookies.remove(\"tokenClient\");\r\n          Cookies.remove(\"user_type\");\r\n          Cookies.remove(\"fname\");\r\n          navigate(\"/\");\r\n          Swal.fire({\r\n            title: t(\"tokenExpired.tokenExpired\"),\r\n            icon: \"warning\",\r\n            confirmButtonText: t(\"jobDescription.close\"),\r\n          });\r\n          setTimeout(function () {\r\n            window.location.reload();\r\n          }, 3000);\r\n        }\r\n        Swal.fire({\r\n          title: t(\"jobDescription.jobAppliedFailedTitle\"),\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        console.log(\"Error on clicking the submit button at apply job modal!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickWithoutLogin = () => {\r\n    navigate(\"/user/jobseekerlogin\");\r\n    const Toast = Swal.mixin({\r\n      toast: true,\r\n      position: \"top-end\",\r\n      showConfirmButton: false,\r\n      timer: 3000,\r\n      timerProgressBar: true,\r\n      didOpen: (toast) => {\r\n        toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n        toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n      },\r\n    });\r\n\r\n    Toast.fire({\r\n      icon: \"warning\",\r\n      title: t(\"jobDescription.pleaseLogin\"),\r\n    });\r\n  };\r\n\r\n  const handleAgreementChange = () => {\r\n    if (validationError) {\r\n      setError(true);\r\n      setValidationError(\"\"); // Clear the validation error when the checkbox is checked\r\n    }\r\n    setIsAgreementChecked(!isAgreementChecked);\r\n    setError(!error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <section className=\"JobDetailTopBx\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-7 col-md-7\">\r\n                  <div className=\"single-job-detail\">\r\n                    <div className=\"logo-detail\">\r\n                      {jobDescriptiondata.logo != \"\" ? (\r\n                        <>\r\n                          <img\r\n                            className=\"JDImage\"\r\n                            src={jobDescriptiondata.logo}\r\n                            alt=\"Company\"\r\n                          />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <img\r\n                            className=\"JDImage\"\r\n                            src=\"/Images/jobseekerSide/dummy-profile.png\"\r\n                            alt=\"Company name\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"job-meta-detail\">\r\n                      <h2>\r\n                        {jobDescriptiondata.title\r\n                          ? HTMLReactParser(jobDescriptiondata.title)\r\n                          : \"\"}\r\n                      </h2>\r\n                      <p>\r\n                        <i className=\"fa-sharp fa-solid fa-briefcase\"></i>{\" \"}\r\n                        {jobDescriptiondata.experience}\r\n                      </p>\r\n                      <p>\r\n                        <i className=\"fa-sharp fa-solid fa-location-dot\"></i>{\" \"}\r\n                        {jobDescriptiondata.location}\r\n                      </p>\r\n                      <p>\r\n                        <i className=\"fa-solid fa-calendar-days\"></i>{\" \"}\r\n                        {jobDescriptiondata.posted_date}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-5 col-md-5\">\r\n                  <div className=\"JobDetailBtnBx\">\r\n                    <div className=\"ShareBtnDetails\">\r\n                      <Link\r\n                        onClick={() => handleOpen()}\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#exampleModal\"\r\n                      >\r\n                        <img src=\"/Images/share.png\" alt=\"\" />\r\n                      </Link>\r\n                    </div>\r\n                    <div\r\n                      className=\"modal fade\"\r\n                      id=\"exampleModal\"\r\n                      tabIndex=\"-1\"\r\n                      aria-labelledby=\"exampleModalLabel\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <div className=\"modal-dialog modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                          <div className=\"modal-header\">\r\n                            <h1\r\n                              className=\"modal-title fs-5\"\r\n                              id=\"exampleModalLabel\"\r\n                            >\r\n                              {t(\"jobDescription.shareNow\")}\r\n                            </h1>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn-close\"\r\n                              data-bs-dismiss=\"modal\"\r\n                              aria-label=\"Close\"\r\n                            ></button>\r\n                          </div>\r\n                          <div className=\"modal-body\">\r\n                            <ul className=\"shareIconsList\">\r\n                              <li className=\"shareIconsButtons\">\r\n                                <FacebookShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <FacebookIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></FacebookIcon>\r\n                                </FacebookShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <TwitterShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <TwitterIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></TwitterIcon>\r\n                                </TwitterShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <WhatsappShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <WhatsappIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></WhatsappIcon>\r\n                                </WhatsappShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <LinkedinShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <LinkedinIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></LinkedinIcon>\r\n                                </LinkedinShareButton>\r\n                              </li>\r\n\r\n                              <li className=\"shareIconsButtons\">\r\n                                <EmailShareButton url=\"www.logicspice.com\">\r\n                                  <EmailIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></EmailIcon>\r\n                                </EmailShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <PinterestShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <PinterestIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></PinterestIcon>\r\n                                </PinterestShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <InstapaperShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <InstapaperIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></InstapaperIcon>\r\n                                </InstapaperShareButton>\r\n                              </li>\r\n                              <li className=\"shareIconsButtons\">\r\n                                <TelegramShareButton\r\n                                  url={jobDescriptiondata.job_url}\r\n                                >\r\n                                  <TelegramIcon\r\n                                    logoFillColor=\"white\"\r\n                                    round={true}\r\n                                  ></TelegramIcon>\r\n                                </TelegramShareButton>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {tokenKey != null ? (\r\n                      <div className=\"ApplyJobBtnBx\">\r\n                        {jobDescriptiondata.is_applied === 1 ? (\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            style={{\r\n                              backgroundColor: `${\r\n                                secondaryColor &&\r\n                                (hoverColor ? secondaryColor : primaryColor)\r\n                              }`,\r\n                              border: `${\r\n                                secondaryColor &&\r\n                                (hoverColor ? secondaryColor : primaryColor)\r\n                              }`,\r\n                              minWidth: \"115px\",\r\n                            }}\r\n                          >\r\n                            {t(\"jobDescription.applied\")}\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-primary\"\r\n                            data-bs-toggle=\"modal\"\r\n                            data-bs-target=\"#applyModal\"\r\n                            style={{\r\n                              backgroundColor: `${\r\n                                secondaryColor &&\r\n                                (hoverColor ? secondaryColor : primaryColor)\r\n                              }`,\r\n                              border: `${\r\n                                secondaryColor &&\r\n                                (hoverColor ? secondaryColor : primaryColor)\r\n                              }`,\r\n                              minWidth: \"115px\",\r\n                            }}\r\n                          >\r\n                            {t(\"jobDescription.applyNow\")}\r\n                          </button>\r\n                        )}\r\n                        {jobDescriptiondata.is_saved === 1 ? (\r\n                          <button className=\"btn btn-secondary\">\r\n                            <i className=\"fa fa-light fa-star-o\"></i> {t(\"jobDescription.saved\")}\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-secondary\"\r\n                            onClick={() => savedJob(slug)}\r\n                            style={{\r\n                              color: secondaryColor,\r\n                              border: `1px solid ${secondaryColor}`,\r\n                              backgroundColor: \"white\",\r\n                              borderRadius: \"4px\",\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-light fa-star-o\"></i> {t(\"jobDescription.saveJob\")}\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"ApplyJobBtnBx\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          style={{\r\n                            backgroundColor: `${\r\n                              secondaryColor &&\r\n                              (hoverColor ? secondaryColor : primaryColor)\r\n                            }`,\r\n                            border: `${\r\n                              secondaryColor &&\r\n                              (hoverColor ? secondaryColor : primaryColor)\r\n                            }`,\r\n                            minWidth: \"115px\",\r\n                          }}\r\n                          onClick={() => handleClickWithoutLogin()}\r\n                        >\r\n                          {t(\"jobDescription.applyNow\")}\r\n                        </button>\r\n\r\n                        <button\r\n                          onClick={() => handleClickWithoutLogin()}\r\n                          className=\"btn btn-secondary\"\r\n                          style={{\r\n                            color: secondaryColor,\r\n                            border: `1px solid ${secondaryColor}`,\r\n                            backgroundColor: \"white\",\r\n                            borderRadius: \"4px\",\r\n                          }}\r\n                        >\r\n                          <i className=\"fa fa-light fa-star-o\"></i> {t(\"jobDescription.saveJob\")}\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"JobDetailsDescriptionSection\">\r\n            <div className=\"container JDSection2\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <div className=\"JobDescriptionBx\">\r\n                    <h2 className=\"mb-4\">{t(\"jobDescription.jobDescription\")}</h2>\r\n                    <p>\r\n                      {jobDescriptiondata.description\r\n                        ? HTMLReactParser(jobDescriptiondata.description)\r\n                        : \"\"}\r\n                    </p>\r\n                    <h2 className=\"mt-5\">{t(\"jobDescription.skillRequired\")}</h2>\r\n                    <div>\r\n                      {skillData.length > 0\r\n                        ? skillData.map((i) => {\r\n                            return (\r\n                              <p className=\"keySkillitem\" key={i.id}>\r\n                                <i class=\"fa-solid fa-arrow-right\"></i> {i.name}\r\n                              </p>\r\n                            );\r\n                          })\r\n                        : t(\"jobDescription.notAvailable\")}\r\n                      {/* <p className=\"keySkillitem\">Computers - Excel</p>\r\n                      <p className=\"keySkillitem\">Computers - iPhone</p>\r\n                      <p className=\"keySkillitem\">Computers - Microsoft</p> */}\r\n                    </div>\r\n                    <h2 className=\"mt-5\">{t(\"jobDescription.workingRelation\")}</h2>\r\n                    <div>\r\n                      <p className=\"keySkillitem\">\r\n                        {jobDescriptiondata.designation\r\n                          ? jobDescriptiondata.designation\r\n                          : t(\"jobDescription.notAvailable\")}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <div className=\"card Jcard JobDetailsCard\">\r\n                    <div className=\"card-title\">\r\n                      <h2>{t(\"jobDescription.jobOverview\")}</h2>\r\n                    </div>\r\n                    <div className=\"card-body JcardBody\">\r\n                      <div className=\"JobDetailsInfo\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-calendar-days\"></i> {t(\"jobDescription.datePosted\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.posted_date}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-sitemap\"></i> {t(\"jobDescription.category\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.category}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-sitemap\"></i> {t(\"jobDescription.subCategory\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.subcategory}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-clock\"></i> {t(\"jobDescription.jobType\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.job_type}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-dollar-sign\"></i>{\" \"}\r\n                              {t(\"jobDescription.salary\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.salary}\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card Jcard JobDetailsCard\">\r\n                    <div className=\"card-title\">\r\n                      <h2>{t(\"jobDescription.contactInfo\")}</h2>\r\n                    </div>\r\n                    <div className=\"card-body JcardBody\">\r\n                      <div className=\"JobDetailsInfo\">\r\n                        <ul>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-users\"></i> {t(\"jobDescription.companyName\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.company_name}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-user\"></i> {t(\"jobDescription.recruiterName\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.contact_name}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-phone\"></i> {t(\"jobDescription.contactCompany\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.contact_number}\r\n                          </li>\r\n                          <li>\r\n                            <span className=\"jobDescriptionKeys\">\r\n                              <i className=\"fa-solid fa-share\"></i> {t(\"jobDescription.website\")}:{\" \"}\r\n                            </span>\r\n                            {jobDescriptiondata.website}\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <iframe\r\n                    src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d57381.72856938326!2d-79.52718056240919!3d43.71126210767677!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x882b33b608ca4a0b%3A0xe1069400ad5da8bf!2sLawrence%20Allen%20Centre!5e0!3m2!1sen!2sin!4v1687851288550!5m2!1sen!2sin\"\r\n                    width=\"415\"\r\n                    height=\"300\"\r\n                    style={{ borderRadius: \"15px\" }}\r\n                    allowFullScreen=\"\"\r\n                    loading=\"lazy\"\r\n                    referrerPolicy=\"no-referrer-when-downgrade\"\r\n                  ></iframe>\r\n                </div>\r\n                {relevantJob.length > 0 && (\r\n                  <div className=\"relatedJobsSection\">\r\n                    <h2 className=\"mt-5\">{t(\"jobDescription.relatedJobs\")}</h2>\r\n                    <div className=\"row\">\r\n                      {relevantJob.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              className=\"mt-4 col-lg-4 col-md-4\"\r\n                              onClick={() => window.location.reload()}\r\n                            >\r\n                              <JobCard\r\n                                title={i.title}\r\n                                min_salary={i.min_salary}\r\n                                max_salary={i.max_salary}\r\n                                min_exp={i.min_exp}\r\n                                created={i.created}\r\n                                logo={i.logo}\r\n                                company_name={i.company_name}\r\n                                work_type={i.work_type}\r\n                                job_city={i.job_city}\r\n                                slug={i.slug}\r\n                                cat_slug={i.cat_slug}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Footer />\r\n          {/* Reply Modal  */}\r\n          <div\r\n            className=\"modal fade  membershipModal\"\r\n            id=\"applyModal\"\r\n            tabIndex=\"-1\"\r\n            aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h1\r\n                    className=\"text-center modal-title fs-5\"\r\n                    id=\"exampleModalLabel\"\r\n                  >\r\n                    {t(\"jobDescription.jobApplicationConfirmation\")}\r\n                  </h1>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body text-center\">\r\n                  <h5 className=\"m-2\">{t(\"jobDescription.declaration\")}:</h5>\r\n                  <p>\r\n                  {t(\"jobDescription.declarationTxt\")}\r\n                  </p>\r\n                  <div className=\"m-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"agreement\"\r\n                      checked={isAgreementChecked}\r\n                      onChange={handleAgreementChange}\r\n                      required\r\n                    />\r\n                    <span className=\"RedStar\">*</span> {t(\"jobDescription.declarationAgreed\")}\r\n                  </div>\r\n                  {validationError && (\r\n                    <p style={{ color: \"red\" }}>{validationError}</p>\r\n                  )}\r\n                  <h5 className=\"m-2\"> {t(\"jobDescription.selectCoverLetter\")}</h5>\r\n                  {coverLetterData &&\r\n                    coverLetterData.map((i) => {\r\n                      return (\r\n                        <>\r\n                          <input\r\n                            type=\"radio\"\r\n                            id={i.id}\r\n                            name=\"coverletter\"\r\n                            value={i.id}\r\n                            onChange={(e) =>\r\n                              setCoverLetterSelected(e.target.value)\r\n                            }\r\n                          />{\" \"}\r\n                          {i.title}\r\n                        </>\r\n                      );\r\n                    })}\r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-evenly\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button1\"\r\n                      style={{\r\n                        backgroundColor: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleSearchMouseEnter}\r\n                      onMouseLeave={handleSearchMouseLeave}\r\n                      data-bs-dismiss={error && `modal`}\r\n                      aria-label={error && `close`}\r\n                      onClick={() => handleDeclarationSubmit(slug)}\r\n                    >\r\n                      {t(\"jobDescription.submitButton\")}\r\n                    </button>\r\n                    <Link\r\n                      to=\"/candidates/editprofile\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button2\"\r\n                      style={{\r\n                        color: hoverUploadCVColor\r\n                          ? primaryColor\r\n                          : secondaryColor,\r\n                        backgroundColor: \"white\",\r\n                        border: hoverUploadCVColor\r\n                          ? `2px solid ${primaryColor}`\r\n                          : `2px solid ${secondaryColor}`,\r\n                      }}\r\n                      onMouseEnter={handleUploadCVMouseEnter}\r\n                      onMouseLeave={handleUploadCVMouseLeave}\r\n                      data-bs-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() => navigate(\"/candidates/editprofile\")}\r\n                    >\r\n                      {t(\"jobDescription.addCoverLetter\")}\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobDescription;\r\n","'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport { Portal };","'use client';\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultContextValue = {\n  disableDefaultClasses: false\n};\nconst ClassNameConfiguratorContext = /*#__PURE__*/React.createContext(defaultContextValue);\n/**\n * @ignore - internal hook.\n *\n * Wraps the `generateUtilityClass` function and controls how the classes are generated.\n * Currently it only affects whether the classes are applied or not.\n *\n * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.\n */\nexport function useClassNamesOverride(generateUtilityClass) {\n  const {\n    disableDefaultClasses\n  } = React.useContext(ClassNameConfiguratorContext);\n  return slot => {\n    if (disableDefaultClasses) {\n      return '';\n    }\n    return generateUtilityClass(slot);\n  };\n}\n\n/**\n * Allows to configure the components within to not apply any built-in classes.\n */\nexport function ClassNameConfigurator(props) {\n  const {\n    disableDefaultClasses,\n    children\n  } = props;\n  const contextValue = React.useMemo(() => ({\n    disableDefaultClasses: disableDefaultClasses != null ? disableDefaultClasses : false\n  }), [disableDefaultClasses]);\n  return /*#__PURE__*/_jsx(ClassNameConfiguratorContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}"],"names":["props","_props$job_city","open","setOpen","useState","selectedPayment","setSelectedPayment","t","i18n","useTranslation","handleClose","curr","useNavigate","Cookies","_jsx","className","children","_jsxs","Link","to","slug","cat_slug","title","Modal","onClose","Box","sx","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","Button","onClick","right","Typography","id","variant","component","mt","FacebookShareButton","url","job_url","FacebookIcon","logoFillColor","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","PinterestShareButton","PinterestIcon","InstapaperShareButton","InstapaperIcon","TelegramShareButton","TelegramIcon","min_salary","max_salary","min_exp","created","description","HTMLReactParser","substring","logo","_Fragment","src","alt","company_name","style","color","job_city","work_type","JobDescription","useParams","navigate","jobDescriptiondata","setJobDescriptionData","relevantJob","setRelevantJob","loading","setLoading","skillData","setSkillData","error","setError","coverLetterData","setCoverLetterData","coverLetterSelected","setCoverLetterSelected","jobSearched","sessionStorage","getItem","tokenKey","isAgreementChecked","setIsAgreementChecked","validationError","setValidationError","primaryColor","secondaryColor","hoverColor","setHoverColor","hoverSearchColor","setHoverSearchColor","hoverUploadCVColor","setHoverUploadCVColor","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","data","status","userId","user_id","jobViewCount","console","log","jobSearchViewCount","removeItem","relevantJobList","skills_array","coverletter","Swal","text","message","icon","confirmButtonText","setTimeout","window","location","reload","useEffect","getAppliedData","scrollTo","handleClickWithoutLogin","toast","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","fire","NavBar","experience","posted_date","tabIndex","type","is_applied","backgroundColor","minWidth","is_saved","savedJob","borderRadius","length","map","i","class","name","designation","category","subcategory","job_type","salary","contact_name","contact_number","website","height","allowFullScreen","referrerPolicy","JobCard","Footer","checked","onChange","handleAgreementChange","required","value","e","target","onMouseEnter","handleSearchMouseEnter","onMouseLeave","handleSearchMouseLeave","handleDeclarationSubmit","handleUploadCVMouseEnter","handleUploadCVMouseLeave","Portal","React","forwardedRef","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","ref","useEnhancedEffect","getContainer","document","body","setRef","newProps","ReactDOM","defaultContextValue","disableDefaultClasses","ClassNameConfiguratorContext","useClassNamesOverride","generateUtilityClass","slot","useTheme","theme","useThemeSystem","defaultTheme","THEME_ID","reflow","node","scrollTop","getTransitionProps","options","_style$transitionDura","_style$transitionTimi","timeout","easing","duration","transitionDuration","mode","transitionTimingFunction","delay","transitionDelay"],"sourceRoot":""}