{"version":3,"file":"static/js/2895.6d63690d.chunk.js","mappings":"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","sources":["Components/element/JobCard.js","Components/searchJob/SearchJobPage.js","../node_modules/@mui/base/Portal/Portal.js","../node_modules/@mui/base/utils/ClassNameConfigurator.js","../node_modules/@mui/icons-material/LocationOn.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/transitions/utils.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport {\r\n  FacebookShareButton,\r\n  TwitterShareButton,\r\n  WhatsappShareButton,\r\n  LinkedinShareButton,\r\n  PinterestShareButton,\r\n  EmailShareButton,\r\n  InstapaperShareButton,\r\n  TelegramShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  WhatsappIcon,\r\n  LinkedinIcon,\r\n  EmailIcon,\r\n  PinterestIcon,\r\n  InstapaperIcon,\r\n  TelegramIcon,\r\n} from \"react-share\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nconst JobCard = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null); // Track the selected payment\r\n\r\n  const handleOpen = () => {\r\n    // console.log(\"Clicked payment:\", plan); // Add this line\r\n    // setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const handleClose = () => {\r\n    // setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n  const navigate = useNavigate();\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const curr = Cookies.get(\"curr\");\r\n\r\n  // const handleJobView = () => {\r\n  //   if (!tokenKey) {\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   } else {\r\n  //     if(props.itemSearched) {\r\n  //       navigate(`/jobdescription/${props.slug}/${props.cat_slug}/${props.itemSearched}`);\r\n  //     }\r\n  //     navigate(`/jobdescription/${props.slug}/${props.cat_slug}`);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"card Jcard\" \r\n    // onClick={() => handleJobView()}\r\n    >\r\n      <div className=\"card-body JcardBody\">\r\n        <div className=\"JcardHead d-flex flex-row justify-content-between\">\r\n          {/* <button\r\n            onClick={() => handleJobView()}\r\n            className=\"h5 card-title JcardTitle homeJobs\"\r\n          >\r\n            {props.title}\r\n          </button> */}\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            {props.title}\r\n          </Link>\r\n          {/* <Link className=\"shareNodeJobCard\" onClick={() => handleOpen()}>\r\n            <i\r\n              className=\"fa-solid fa-share-nodes\"\r\n              style={{ color: \"#bdbdbd\" }}\r\n            ></i>\r\n          </Link> */}\r\n          <div>\r\n            <Modal\r\n              open={open}\r\n              onClose={handleClose}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box sx={{ ...style, width: 700 }}>\r\n                <Button\r\n                  onClick={handleClose} // Call handleClose when the button is clicked\r\n                  sx={{\r\n                    position: \"absolute\",\r\n                    top: 10,\r\n                    right: 10,\r\n                  }} // Position the button\r\n                >\r\n                  {t(\"messageForm.close\")}\r\n                </Button>\r\n\r\n                <Typography\r\n                  id=\"modal-modal-title\"\r\n                  variant=\"h6\"\r\n                  component=\"h2\"\r\n                ></Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{ mt: 6 }}>\r\n                  <div className=\"modals \">\r\n                    <div className=\"modalHead\">\r\n                      <h3>{t(\"messageForm.shareNow\")}</h3>\r\n                    </div>\r\n                    <div className=\"modalBody mt-4\">\r\n                      <ul className=\"shareIconsList\">\r\n                        <li className=\"shareIconsButtons\">\r\n                          <FacebookShareButton url={props.job_url}>\r\n                            <FacebookIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></FacebookIcon>\r\n                          </FacebookShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TwitterShareButton url={props.job_url}>\r\n                            <TwitterIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TwitterIcon>\r\n                          </TwitterShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <WhatsappShareButton url={props.job_url}>\r\n                            <WhatsappIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></WhatsappIcon>\r\n                          </WhatsappShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <LinkedinShareButton url={props.job_url}>\r\n                            <LinkedinIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></LinkedinIcon>\r\n                          </LinkedinShareButton>\r\n                        </li>\r\n\r\n                        <li className=\"shareIconsButtons\">\r\n                          <EmailShareButton url={props.job_url}>\r\n                            <EmailIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></EmailIcon>\r\n                          </EmailShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <PinterestShareButton url={props.job_url}>\r\n                            <PinterestIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></PinterestIcon>\r\n                          </PinterestShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <InstapaperShareButton url={props.job_url}>\r\n                            <InstapaperIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></InstapaperIcon>\r\n                          </InstapaperShareButton>\r\n                        </li>\r\n                        <li className=\"shareIconsButtons\">\r\n                          <TelegramShareButton url={props.job_url}>\r\n                            <TelegramIcon\r\n                              logoFillColor=\"white\"\r\n                              round={true}\r\n                            ></TelegramIcon>\r\n                          </TelegramShareButton>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </Typography>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection1 float-left\">\r\n          {curr}\r\n          {props.min_salary}-{curr}\r\n          {props.max_salary}/{t(\"messageForm.jobCardYear\")}\r\n        </div>\r\n        <div className=\"JcardBodySection2 flex-row\">\r\n          <div className=\"section2Item1 float-left\">\r\n            {t(\"messageForm.jobCardExperience\")}: {props.min_exp}{\" \"}\r\n            {t(\"messageForm.jobCardYears\")}\r\n          </div>\r\n          <div className=\"section2Item2 text-muted\">\r\n            <i className=\"fa-regular fa-calendar-days\"></i> {props.created}{\" \"}\r\n            {t(\"messageForm.jobCardDaysAgo\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"JcardBodySection3\">\r\n          {props.description?HTMLReactParser(props.description.substring(0, 90)):\"\"}\r\n        </div>\r\n        <h6 className=\"card-footer JcardFooter\">\r\n          {props.logo ? (\r\n            <>\r\n              <div className=\"JcardFooterItem1DynamicImage\">\r\n                <img src={props.logo} alt=\"\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"JcardFooterItem1\">\r\n                <img src=\"/Images/dummy-logo.png\" alt=\"\" />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"JcardFooterItem2\">\r\n            <h6>{props.company_name}</h6>\r\n            <p className=\"text-muted\">\r\n              <i\r\n                className=\"fa-solid fa-location-dot\"\r\n                style={{ color: \"#a3a3a3\" }}\r\n              ></i>{\" \"}\r\n              {props.job_city?.substring(0, 20)}\r\n            </p>\r\n          </div>\r\n          <Link\r\n            to={`/jobdescription/${props.slug}/${props.cat_slug}`}\r\n            className=\"h5 card-title JcardTitle\"\r\n          >\r\n            <div className=\"JcardFooterItem3\">{props.work_type}</div>\r\n          </Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Footer from \"../element/Footer\";\r\nimport JobCard from \"../element/JobCard\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SearchJobPage = () => {\r\n  const { slug } = useParams();\r\n  // const initialKeyword = sessionStorage.getItem(\"keywordTitle\") || \"\";\r\n  let keyWord = sessionStorage.getItem(\"keywordTitle\");\r\n\r\n  const initialKeyword = keyWord || slug || \"\";\r\n\r\n  const initialCategory = sessionStorage.getItem(\"catId\") || \"\";\r\n  const [filterItem, setFilterItem] = useState({\r\n    keyword: initialKeyword,\r\n    category_id: initialCategory,\r\n    subcategory_id: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [searchButton, setSearchButton] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [subCatData, setSubCatData] = useState([]);\r\n  // console.log(initialCategory);\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  const [itemSearched, setItemSearched] = useState(false);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let response;\r\n\r\n      if (initialKeyword) {\r\n        // If a keyword is available in the slug, make the API request with the keyword directly.\r\n        response = await axios.post(BaseApi + \"/job/listing\", {\r\n          keyword: initialKeyword,\r\n        });\r\n      } else if (initialCategory) {\r\n        fetchJobListingsByCategory();\r\n        response = await axios.post(BaseApi + \"/job/listing\", {\r\n          category_id: initialCategory,\r\n        });\r\n      } else {\r\n        // If no keyword is available, fetch all job listings.\r\n        response = await axios.post(BaseApi + \"/job/listing\");\r\n      }\r\n\r\n      setCategoryList(response.data.response.category);\r\n      setCategoryData(response.data.response.jobs);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error fetching list of categories\");\r\n    }\r\n  };\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  const mapKey = Cookies.get(\"mapKey\");\r\n\r\n  const [hoverColor, setHoverColor] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setHoverColor(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverColor(false);\r\n  };\r\n\r\n  const [clearColor, setClearColor] = useState(false);\r\n\r\n  const handleClearMouseEnter = () => {\r\n    setClearColor(true);\r\n  };\r\n\r\n  const handleClearMouseLeave = () => {\r\n    setClearColor(false);\r\n  };\r\n\r\n  const [hoverPrevColor, setHoverPrevColor] = useState(false);\r\n  const [hoverNextColor, setHoverNextColor] = useState(false);\r\n\r\n  const handlePrevEnter = () => {\r\n    setHoverPrevColor(true);\r\n    // console.log(hoverColor)\r\n  };\r\n\r\n  const handlePrevLeave = () => {\r\n    setHoverPrevColor(false);\r\n  };\r\n  const handleNextEnter = () => {\r\n    setHoverNextColor(true);\r\n    // console.log(hoverColor)\r\n  };\r\n\r\n  const handleNextLeave = () => {\r\n    setHoverNextColor(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if(!tokenKey){\r\n    //   navigate(\"/user/jobseekerlogin\");\r\n    // }else{\r\n    getData();\r\n    if (initialCategory) {\r\n      fetchJobListingsByCategory(initialCategory);\r\n    }\r\n    // }\r\n  }, [initialKeyword]);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n\r\n    // Check if the category_id is being changed\r\n    setFilterItem((prevFilter) => ({\r\n      ...prevFilter,\r\n      [name]: value,\r\n    }));\r\n    if (name === \"category_id\") {\r\n      // Call the API with the selected category_id\r\n      fetchJobListingsByCategory(value);\r\n    }\r\n    if (filterItem.category_id === \"Any Category\") {\r\n      // Include the category_id in the API request\r\n      setFilterItem({ ...filterItem, category_id: \"\" }); // Convert to the desired data type if needed\r\n    }\r\n    console.log(filterItem);\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      filterItem.keyword === \"\" &&\r\n      filterItem.category_id === \"\" &&\r\n      filterItem.location === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n    sessionStorage.setItem(\"jobSearched\", \"1\");\r\n    setSearchButton(true);\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(BaseApi + \"/job/listing\", filterItem);\r\n      setSearchData(response.data.response.jobs);\r\n      setLoading(false);\r\n      console.log(\"Search filter data sent successfully\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Couldn't send the search filter data!\");\r\n    }\r\n  };\r\n\r\n  const fetchJobListingsByCategory = async (categoryId) => {\r\n    // setLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        BaseApi + `/categories/getSubCategory/${categoryId}`\r\n      );\r\n      setSubCatData(response.data.response);\r\n      setLoading(false);\r\n      console.log(subCatData);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Couldn't get sub category data at listing page\");\r\n    }\r\n  };\r\n\r\n  const handleReset = (e) => {\r\n    e.preventDefault();\r\n    setSearchButton(false);\r\n    setSearchData([]);\r\n    setSubCatData([]);\r\n    setFilterItem({\r\n      keyword: \"\",\r\n      category_id: \"\",\r\n      subcategory_id: \"\",\r\n      location: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      sessionStorage.clear();\r\n    }, 7000);\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const jobsPerPage = 12;\r\n\r\n  // Get current jobs to display based on pagination\r\n  const indexOfLastJob = currentPage * jobsPerPage;\r\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\r\n  const currentJobs = searchButton\r\n    ? searchData.slice(indexOfFirstJob, indexOfLastJob)\r\n    : categoryData.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  // Function to handle pagination page change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${mapKey}&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n\r\n    setFilterItem((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (filterItem.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    console.log(filterItem);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"SJPSection1\">\r\n            <form>\r\n              <div className=\"formItems\">\r\n                <div className=\"searchItems me-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"exampleInputEmail1\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    value={filterItem.keyword}\r\n                    name=\"keyword\"\r\n                    placeholder={t(\"searchJobPage.keyword\")}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"searchItems me-2\">\r\n                  <select\r\n                    className=\"form-select text-muted\"\r\n                    aria-label=\"Default select example\"\r\n                    value={filterItem.category_id}\r\n                    name=\"category_id\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={\"\"}>{t(\"searchJobPage.anyCategory\")}</option>\r\n                    {categoryList.map((i, id) => {\r\n                      return (\r\n                        <option key={i.id} value={i.id}>\r\n                          {i.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"searchItems me-2\">\r\n                  <select\r\n                    className=\"form-select text-muted\"\r\n                    aria-label=\"Default select example\"\r\n                    value={filterItem.subcategory_id}\r\n                    name=\"subcategory_id\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value={\"\"}>{t(\"searchJobPage.subCategory\")}</option>\r\n                    {subCatData.map((i, id) => {\r\n                      return (\r\n                        <option key={i.id} value={i.id}>\r\n                          {i.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"searchItems me-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"exampleInputEmail1\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    placeholder={t(\"searchJobPage.enterLocation\")}\r\n                    name=\"location\"\r\n                    value={filterItem.location}\r\n                    onChange={handleLocationChange}\r\n                  />\r\n                  {suggestions.length > 0 && (\r\n                    <div\r\n                      className=\"suggestionsSmall\"\r\n                      style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                    >\r\n                      <ul className=\"locationDropdown\">\r\n                        {suggestions.map((suggestion, index) => (\r\n                          <div key={index} className=\"suggestion-item\">\r\n                            <li\r\n                              onClick={() => handleSuggestionClick(suggestion)}\r\n                            >\r\n                              <div className=\"eachLocation\">\r\n                                <div className=\"locationIcon\">\r\n                                  <LocationOnIcon fontSize=\"small\" />\r\n                                </div>{\" \"}\r\n                                <div className=\"locationSuggestion\">\r\n                                  {suggestion}\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                          </div>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"searchItems me-2 btn searchButtons\"\r\n                  onClick={handleClick}\r\n                  style={{\r\n                    backgroundColor: `${\r\n                      secondaryColor &&\r\n                      (hoverColor ? secondaryColor : primaryColor)\r\n                    }`,\r\n                  }}\r\n                  onMouseEnter={handleMouseEnter}\r\n                  onMouseLeave={handleMouseLeave}\r\n                >\r\n                  {t(\"searchJobPage.findJobs\")}\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"searchItems me-2 btn searchButtons\"\r\n                  onClick={handleReset}\r\n                  style={{\r\n                    backgroundColor: `${\r\n                      secondaryColor &&\r\n                      (clearColor ? secondaryColor : primaryColor)\r\n                    }`,\r\n                  }}\r\n                  onMouseEnter={handleClearMouseEnter}\r\n                  onMouseLeave={handleClearMouseLeave}\r\n                >\r\n                  {/* {t(\"searchJobPage.findJobs\")} */}\r\n                  {t(\"searchJobPage.clear\")}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"blogPagination\">\r\n            <p className=\"text-muted paginationDetail\">\r\n              {t(\"pagination.NoofRecords\")} {indexOfFirstJob + 1}-\r\n              {Math.min(\r\n                indexOfLastJob,\r\n                searchButton ? searchData.length : categoryData.length\r\n              )}{\" \"}\r\n              of {searchButton ? searchData.length : categoryData.length}\r\n            </p>\r\n            <div className=\"blogPaginationButtons\">\r\n              <button\r\n                className=\"navButton1 me-2\"\r\n                style={{\r\n                  backgroundColor: hoverPrevColor\r\n                    ? secondaryColor\r\n                    : primaryColor,\r\n                  border: hoverPrevColor ? secondaryColor : primaryColor,\r\n                }}\r\n                onMouseEnter={handlePrevEnter}\r\n                onMouseLeave={handlePrevLeave}\r\n                disabled={currentPage === 1}\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n              >\r\n                {t(\"pagination.Prev\")}\r\n              </button>\r\n              <button\r\n                className=\"navButton1\"\r\n                style={{\r\n                  backgroundColor: hoverNextColor\r\n                    ? secondaryColor\r\n                    : primaryColor,\r\n                  border: hoverNextColor ? secondaryColor : primaryColor,\r\n                }}\r\n                onMouseEnter={handleNextEnter}\r\n                onMouseLeave={handleNextLeave}\r\n                disabled={\r\n                  searchButton\r\n                    ? indexOfLastJob >= searchData.length\r\n                    : indexOfLastJob >= categoryData.length\r\n                }\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n              >\r\n                {t(\"pagination.Next\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"SJPSection2 container\">\r\n            <div className=\"FBitem\">\r\n              <div className=\"row\">\r\n                {searchButton ? (\r\n                  currentJobs.length > 0 ? (\r\n                    currentJobs.map((i) => (\r\n                      <div className=\"col-md-6 col-lg-4\">\r\n                        <JobCard\r\n                          title={i.title}\r\n                          min_salary={i.min_salary}\r\n                          max_salary={i.max_salary}\r\n                          min_exp={i.min_exp}\r\n                          created={i.created}\r\n                          logo={i.logo}\r\n                          company_name={i.company_name}\r\n                          work_type={i.work_type}\r\n                          job_city={i.job_city}\r\n                          slug={i.slug}\r\n                          cat_slug={i.cat_slug}\r\n                          desc={i.description}\r\n                        />\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"col-12\">\r\n                      <h3 className=\"text-center\">\r\n                        {t(\"searchJobPage.noJobsTxt1\")}{\" \"}\r\n                      </h3>\r\n                      <h6 className=\"text-muted text-center mb-5 mt-3\">\r\n                        {t(\"searchJobPage.noJobsTxt2\")}\r\n                      </h6>\r\n                    </div>\r\n                  )\r\n                ) : categoryData.length > 0 ? (\r\n                  currentJobs.map((i) => (\r\n                    <div className=\"col-md-6 col-lg-4\">\r\n                      <JobCard\r\n                        title={i.title}\r\n                        min_salary={i.min_salary}\r\n                        max_salary={i.max_salary}\r\n                        min_exp={i.min_exp}\r\n                        created={i.created}\r\n                        logo={i.logo}\r\n                        company_name={i.company_name}\r\n                        work_type={i.work_type}\r\n                        slug={i.slug}\r\n                        cat_slug={i.cat_slug}\r\n                        job_city={i.job_city}\r\n                        desc={i.description}\r\n                      />\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"col-12\">\r\n                    <h3 className=\"text-center\">\r\n                      {t(\"searchJobPage.noJobsTxt1\")}{\" \"}\r\n                    </h3>\r\n                    <h6 className=\"text-muted text-center mb-5 mt-3\">\r\n                      {t(\"searchJobPage.noJobsTxt2\")}{\" \"}\r\n                    </h6>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Custom Pagination */}\r\n          </div>\r\n          <div className=\"blogPagination\">\r\n            <p className=\"text-muted paginationDetail\">\r\n              {t(\"pagination.NoofRecords\")} {indexOfFirstJob + 1}-\r\n              {Math.min(\r\n                indexOfLastJob,\r\n                searchButton ? searchData.length : categoryData.length\r\n              )}{\" \"}\r\n              of {searchButton ? searchData.length : categoryData.length}\r\n            </p>\r\n            <div className=\"blogPaginationButtons\">\r\n              <button\r\n                className=\"navButton1 me-2\"\r\n                style={{\r\n                  backgroundColor: hoverPrevColor\r\n                    ? secondaryColor\r\n                    : primaryColor,\r\n                  border: hoverPrevColor ? secondaryColor : primaryColor,\r\n                }}\r\n                onMouseEnter={handlePrevEnter}\r\n                onMouseLeave={handlePrevLeave}\r\n                disabled={currentPage === 1}\r\n                onClick={() => handlePageChange(currentPage - 1)}\r\n              >\r\n                {t(\"pagination.Prev\")}\r\n              </button>\r\n              <button\r\n                className=\"navButton1\"\r\n                style={{\r\n                  backgroundColor: hoverNextColor\r\n                    ? secondaryColor\r\n                    : primaryColor,\r\n                  border: hoverNextColor ? secondaryColor : primaryColor,\r\n                }}\r\n                onMouseEnter={handleNextEnter}\r\n                onMouseLeave={handleNextLeave}\r\n                disabled={\r\n                  searchButton\r\n                    ? indexOfLastJob >= searchData.length\r\n                    : indexOfLastJob >= categoryData.length\r\n                }\r\n                onClick={() => handlePageChange(currentPage + 1)}\r\n              >\r\n                {t(\"pagination.Next\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchJobPage;\r\n","'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n *\n * Demos:\n *\n * - [Portal](https://mui.com/base-ui/react-portal/)\n *\n * API:\n *\n * - [Portal API](https://mui.com/base-ui/react-portal/components-api/#portal)\n */\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, forwardedRef) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  // @ts-expect-error TODO upstream fix\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, forwardedRef);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(forwardedRef, mountNode);\n      return () => {\n        setRef(forwardedRef, null);\n      };\n    }\n    return undefined;\n  }, [forwardedRef, mountNode, disablePortal]);\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      const newProps = {\n        ref: handleRef\n      };\n      return /*#__PURE__*/React.cloneElement(children, newProps);\n    }\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: children\n    });\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\nexport { Portal };","'use client';\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultContextValue = {\n  disableDefaultClasses: false\n};\nconst ClassNameConfiguratorContext = /*#__PURE__*/React.createContext(defaultContextValue);\n/**\n * @ignore - internal hook.\n *\n * Wraps the `generateUtilityClass` function and controls how the classes are generated.\n * Currently it only affects whether the classes are applied or not.\n *\n * @returns Function to be called with the `generateUtilityClass` function specific to a component to generate the classes.\n */\nexport function useClassNamesOverride(generateUtilityClass) {\n  const {\n    disableDefaultClasses\n  } = React.useContext(ClassNameConfiguratorContext);\n  return slot => {\n    if (disableDefaultClasses) {\n      return '';\n    }\n    return generateUtilityClass(slot);\n  };\n}\n\n/**\n * Allows to configure the components within to not apply any built-in classes.\n */\nexport function ClassNameConfigurator(props) {\n  const {\n    disableDefaultClasses,\n    children\n  } = props;\n  const contextValue = React.useMemo(() => ({\n    disableDefaultClasses: disableDefaultClasses != null ? disableDefaultClasses : false\n  }), [disableDefaultClasses]);\n  return /*#__PURE__*/_jsx(ClassNameConfiguratorContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}"],"names":["props","_props$job_city","open","setOpen","useState","selectedPayment","setSelectedPayment","t","i18n","useTranslation","handleClose","curr","useNavigate","Cookies","_jsx","className","children","_jsxs","Link","to","slug","cat_slug","title","Modal","onClose","Box","sx","position","top","left","transform","width","maxWidth","bgcolor","border","boxShadow","p","Button","onClick","right","Typography","id","variant","component","mt","FacebookShareButton","url","job_url","FacebookIcon","logoFillColor","round","TwitterShareButton","TwitterIcon","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","PinterestShareButton","PinterestIcon","InstapaperShareButton","InstapaperIcon","TelegramShareButton","TelegramIcon","min_salary","max_salary","min_exp","created","description","HTMLReactParser","substring","logo","_Fragment","src","alt","company_name","style","color","job_city","work_type","SearchJobPage","useParams","initialKeyword","sessionStorage","getItem","initialCategory","filterItem","setFilterItem","keyword","category_id","subcategory_id","location","searchData","setSearchData","categoryList","setCategoryList","categoryData","setCategoryData","searchButton","setSearchButton","loading","setLoading","subCatData","setSubCatData","itemSearched","setItemSearched","primaryColor","secondaryColor","mapKey","hoverColor","setHoverColor","clearColor","setClearColor","hoverPrevColor","setHoverPrevColor","hoverNextColor","setHoverNextColor","handlePrevEnter","handlePrevLeave","handleNextEnter","handleNextLeave","useEffect","async","response","axios","BaseApi","fetchJobListingsByCategory","data","category","jobs","error","console","log","getData","handleChange","e","preventDefault","name","value","target","prevFilter","categoryId","setTimeout","clear","window","scrollTo","currentPage","setCurrentPage","indexOfLastJob","indexOfFirstJob","currentJobs","slice","handlePageChange","pageNumber","autocompleteService","setAutocompleteService","suggestions","setSuggestions","script","document","createElement","onload","google","maps","places","AutocompleteService","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","getPlacePredictions","input","types","predictions","status","map","prediction","suggestionTaken","NavBar","type","placeholder","onChange","i","length","display","suggestion","index","handleSuggestionClick","LocationOnIcon","fontSize","setItem","backgroundColor","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","handleClearMouseEnter","handleClearMouseLeave","Math","min","disabled","JobCard","desc","Footer","Portal","React","forwardedRef","container","disablePortal","mountNode","setMountNode","handleRef","useForkRef","ref","useEnhancedEffect","getContainer","setRef","newProps","ReactDOM","defaultContextValue","disableDefaultClasses","ClassNameConfiguratorContext","useClassNamesOverride","generateUtilityClass","slot","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","useTheme","theme","useThemeSystem","defaultTheme","THEME_ID","reflow","node","scrollTop","getTransitionProps","options","_style$transitionDura","_style$transitionTimi","timeout","easing","duration","transitionDuration","mode","transitionTimingFunction","delay","transitionDelay"],"sourceRoot":""}