{"version":3,"file":"static/js/6443.900cedac.chunk.js","mappings":"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","sources":["Components/adminpanel/Currency/APAddCurrency.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APAddCurrency = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    symbol: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    code: \"\",\r\n    symbol: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  // const getData = async () => {\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       BaseApi + \"/admin/changeusername\",\r\n  //       null,\r\n  //       {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //           key: ApiKey,\r\n  //           token: tokenKey,\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     setUserData(response.data.response);\r\n  //   } catch (error) {\r\n  //     console.log(\"Error at chnage username at Admin panel\");\r\n  //   }\r\n  // };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.name === \"\") {\r\n        newErrors.name = \"Currency Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.code === \"\") {\r\n        newErrors.code = \"Currency Code is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.symbol === \"\") {\r\n        newErrors.symbol = \"Currency Symbol is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Add Currency?\",\r\n          text: \"Do you want to Add Currency?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/currency/admin_add\",\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Currency added successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0)\r\n            navigate(\"/admin/currencies\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not add currency. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserData({\r\n      name: \"\",\r\n      code: \"\",\r\n      symbol: \"\",\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/currencies\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Currency List\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Add Currency</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Add Currency</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Currency Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.name && \"input-error\"}`}\r\n                      name=\"name\"\r\n                      placeholder=\"Currency Name\"\r\n                      value={userData.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Currency Code<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.code && \"input-error\"}`}\r\n                      name=\"code\"\r\n                      placeholder=\"Currency Code\"\r\n                      value={userData.code}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.code && (\r\n                      <div className=\"text-danger\">{errors.code}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Currency Symbol<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.symbol && \"input-error\"\r\n                      }`}\r\n                      name=\"symbol\"\r\n                      placeholder=\"Currency Symbol\"\r\n                      value={userData.symbol}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.symbol && (\r\n                      <div className=\"text-danger\">{errors.symbol}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => handleReset()}\r\n                  >\r\n                    RESET\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddCurrency;\r\n"],"names":["APAddCurrency","userData","setUserData","useState","name","code","symbol","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","value","target","prev","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","type","id","placeholder","onChange","onClick","async","newErrors","Object","keys","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","status","message","error","console","log","location","reload","APFooter"],"sourceRoot":""}