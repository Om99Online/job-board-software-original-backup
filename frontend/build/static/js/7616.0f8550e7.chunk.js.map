{"version":3,"file":"static/js/7616.0f8550e7.chunk.js","mappings":"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","sources":["Components/adminpanel/Banner Advertisement/APBannerList.js","../node_modules/@mui/icons-material/Block.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APBannerList = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n  // const [open, setOpen] = useState(false);\r\n  // const [selectedPlan, setSelectedPlan] = useState(null);\r\n  // const handleOpen = (plan) => {\r\n  //   setSelectedPlan(plan);\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setSelectedPlan(null);\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  // const style = {\r\n  //   position: \"absolute\",\r\n  //   top: \"50%\",\r\n  //   left: \"50%\",\r\n  //   transform: \"translate(-50%, -50%)\",\r\n  //   width: 400,\r\n  //   bgcolor: \"background.paper\",\r\n  //   border: \"2px solid #000\",\r\n  //   boxShadow: 24,\r\n  //   p: 4,\r\n  // };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/banner/index\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response);\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  const handleActivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Banner?\",\r\n        text: \"Do you want to Activate this Banner?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/banner/admin_activate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banner Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Banner\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDeactivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Banner?\",\r\n        text: \"Do you want to Deactivate this Banner?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/banner/admin_deactivate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banner Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Banner\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Banner?\",\r\n        text: \"Do you want to Delete this Banner?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/banner/admin_delete/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banner deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Banner\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const [selectAll, setSelectAll] = useState(true);\r\n\r\n  const handleCheck = (id) => {\r\n    // Check if the id is 'selectAll', indicating the \"Select All\" checkbox\r\n    if (id === \"selectAll\") {\r\n      // If it's \"Select All\", toggle the selectAll state\r\n      setSelectAll(!selectAll);\r\n\r\n      // If selectAll is true, select all checkboxes, else unselect all\r\n      const updatedCheckedData = selectAll\r\n        ? listData.map((item) => item.id)\r\n        : [];\r\n      setCheckedData(updatedCheckedData);\r\n    } else {\r\n      // Individual checkbox handling remains the same\r\n      if (checkedData.includes(id)) {\r\n        // If the ID is already in the array, remove it\r\n        setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n      } else {\r\n        // If the ID is not in the array, add it\r\n        setCheckedData([...checkedData, id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n\r\n  const handleMultipleDeactivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Banners?\",\r\n        text: \"Do you want to Deactivate Banners?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const ids = checkedData.join(\",\");\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/banner/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"deactivate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banners Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Deactivate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Banners\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleActivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Banners?\",\r\n        text: \"Do you want to Activate Banners?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/banner/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"activate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banners Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Activate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Banners\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleDelete = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Banners?\",\r\n        text: \"Do you want to Delete Banners?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/banner/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"delete\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Banners Delete successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Delete!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Banners\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't Delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter(\r\n        (item) =>\r\n          item.title?.toLowerCase().includes(query) ||\r\n          item.url?.toLowerCase().includes(query) ||\r\n          item.place?.toLowerCase().includes(query) ||\r\n          item.posteddate?.toLowerCase().includes(query)\r\n      )\r\n      .sort((a, b) => {\r\n        if (key === \"posteddate\") {\r\n          // Convert date strings to Date objects for sorting\r\n          const dateA = new Date(a[key]);\r\n          const dateB = new Date(b[key]);\r\n\r\n          if (dateA < dateB) {\r\n            return direction === \"ascending\" ? -1 : 1;\r\n          }\r\n          if (dateA > dateB) {\r\n            return direction === \"ascending\" ? 1 : -1;\r\n          }\r\n          return 0;\r\n        } else {\r\n          // For other columns, use the default sorting logic\r\n          if (a[key] < b[key]) {\r\n            return direction === \"ascending\" ? -1 : 1;\r\n          }\r\n          if (a[key] > b[key]) {\r\n            return direction === \"ascending\" ? 1 : -1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return (\r\n      item.title?.toLowerCase().includes(searchString) ||\r\n      item.url?.toLowerCase().includes(searchString) ||\r\n      item.place?.toLowerCase().includes(searchString) ||\r\n      item.posteddate?.toLowerCase().includes(searchString)\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset currentPage to 1 when searchQuery changes\r\n  }, [searchQuery]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    const newQuery = e.target.value.toLowerCase();\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin BannerList\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"\")}\r\n                  >\r\n                    Banner Advertisements\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Banner Advertisements List\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Banner Advertisements List</h2>\r\n\r\n                <button\r\n                  className=\"btn navButton1 APMSbutton\"\r\n                  onClick={() =>\r\n                    navigate(\r\n                      \"/admin/banneradvertisements/addBanneradvertisement\"\r\n                    )\r\n                  }\r\n                >\r\n                  Add Banner\r\n                </button>\r\n              </div>\r\n              {listData != \"\" ? (\r\n                <>\r\n                  <div className=\"manageSubadminPart1\">\r\n                    <form>\r\n                      <div className=\"manageSubadminPart1Sec1\">\r\n                        <h4>\r\n                          Search Banner Advertisements by typing title or\r\n                          Created date\r\n                        </h4>\r\n                        <div class=\"APDashboardSearchBx \">\r\n                          {/* <label for=\"formFile\" class=\"form-label\">\r\n                          Search By Keyword\r\n                        </label> */}\r\n\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className=\"form-control\"\r\n                            name=\"searchQuery\"\r\n                            placeholder=\"Search..\"\r\n                            value={searchQuery}\r\n                            onChange={handleSearchChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                    <h4>\r\n                      No. of Results {indexOfFirstItem + 1}-\r\n                      {Math.min(\r\n                        indexOfLastItem,\r\n                        filteredData.length || listData.length\r\n                      )}{\" \"}\r\n                      of {listData.length}\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <div className=\"manageSubadminPart2\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td className=\"checkBoxCol checkBxHead\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"tableCheckBox\"\r\n                              // checked={selectAll}\r\n\r\n                              onClick={() => handleCheck(\"selectAll\")}\r\n                            />\r\n                          </td>\r\n                          <th onClick={() => handleColumnClick(\"title\")}>\r\n                            AD Title{symbol}\r\n                          </th>\r\n                          <th onClick={() => handleColumnClick(\"url\")}>\r\n                            URL{symbol}\r\n                          </th>\r\n                          <th onClick={() => handleColumnClick(\"place\")}>\r\n                            AD Place{symbol}\r\n                          </th>\r\n                          <th>Image Adverts/Google Adverts</th>\r\n                          <th onClick={() => handleColumnClick(\"posteddate\")}>\r\n                            Posted Date{symbol}\r\n                          </th>\r\n                          <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {currentItems.map((i) => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td className=\"checkBoxCol\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"tableCheckBox\"\r\n                                    checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                    onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                                  />\r\n                                </td>\r\n                                <td>{i.title}</td>\r\n                                <td>{i.url}</td>\r\n                                <td>{i.advertisement_place}</td>\r\n                                <td>\r\n                                  <img\r\n                                    className=\"BLAdvertisementImage\"\r\n                                    src={i.image}\r\n                                    alt=\"advertisement\"\r\n                                  />\r\n                                </td>\r\n                                <td>{i.created}</td>\r\n\r\n                                <td className=\"APActionButton\">\r\n                                  {i.status === 1 ? (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleDeactivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Deactivate\">\r\n                                        <CheckIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleActivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Activate\">\r\n                                        <BlockIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  )}\r\n                                  <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() =>\r\n                                      navigate(\r\n                                        `/admin/banneradvertisements/editBanneradvertisement/${i.slug}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip title=\"Edit\">\r\n                                      <CreateIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    onClick={() => handleDelete(i.slug)}\r\n                                  >\r\n                                    <Tooltip title=\"Delete\">\r\n                                      <DeleteIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <div className=\"manageSubadminpart3\">\r\n                    <div className=\"functionalityButton\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleActivate()}\r\n                      >\r\n                        ACTIVATE\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleDeactivate()}\r\n                      >\r\n                        DEACTIVATE\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton4\"\r\n                        onClick={() => handleMultipleDelete()}\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"pagination\">\r\n                      <Stack spacing={2}>\r\n                        <Pagination\r\n                          count={totalPages}\r\n                          color=\"primary\"\r\n                          page={currentPage}\r\n                          onChange={(event, page) => setCurrentPage(page)}\r\n                        />\r\n                      </Stack>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"appliedJobListNoData mt-5\">\r\n                  No Records Found\r\n                </div>\r\n              )}\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APBannerList;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["APBannerList","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","currentPage","setCurrentPage","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","selectAll","setSelectAll","handleCheck","id","updatedCheckedData","map","item","includes","filter","checkedId","sortConfig","setSortConfig","direction","symbol","setSymbol","sortedAndFilteredData","array","query","_item$title","_item$url","_item$place","_item$posteddate","title","toLowerCase","url","place","posteddate","sort","a","b","dateA","Date","dateB","sortAndFilterData","filteredData","_item$title2","_item$url2","_item$place2","_item$posteddate2","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","window","scrollTo","handleColumnClick","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","type","name","placeholder","value","onChange","e","newQuery","target","min","scope","checked","advertisement_place","src","image","alt","created","status","Swal","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","slug","message","handleDeactivate","Tooltip","CheckIcon","handleActivate","BlockIcon","CreateIcon","handleDelete","DeleteIcon","ids","toString","idList","action","handleMultipleActivate","join","handleMultipleDeactivate","handleMultipleDelete","Stack","spacing","Pagination","count","page","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}