{"version":3,"file":"static/js/6399.5b120890.chunk.js","mappings":"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","sources":["Components/employersSide/CopyJob.js","Components/employersSide/Sidebar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Footer from \"../element/Footer\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Select from \"react-select\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import styles\r\nconst CopyJob = () => {\r\n  const editor = useRef(null);\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    console.log(plan);\r\n    setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n\r\n  const [hoverSearchColor, setHoverSearchColor] = useState(false);\r\n\r\n  const handleSearchMouseEnter = () => {\r\n    setHoverSearchColor(true);\r\n  };\r\n\r\n  const handleSearchMouseLeave = () => {\r\n    setHoverSearchColor(false);\r\n  };\r\n\r\n  const [hoverUploadCVColor, setHoverUploadCVColor] = useState(false);\r\n\r\n  const handleUploadCVMouseEnter = () => {\r\n    setHoverUploadCVColor(true);\r\n  };\r\n\r\n  const handleUploadCVMouseLeave = () => {\r\n    setHoverUploadCVColor(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/employerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const [jobData, setJobData] = useState({\r\n    job_title: \"\",\r\n    category: \"\",\r\n    subCategory: [],\r\n    jobDescription: \"\",\r\n    company_name: \"\",\r\n    companyProfile: \"\",\r\n    work_type: \"\",\r\n    contact_name: \"\",\r\n    contact_number: \"\",\r\n    company_website: \"\",\r\n    skill: \"\",\r\n    designation: \"\",\r\n    location: \"\",\r\n    experience: \"\",\r\n    annual_salary: \"\",\r\n    logo: \"\",\r\n    last_date: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    job_title: \"\",\r\n    category: \"\",\r\n    subCategory: [],\r\n    jobDescription: \"\",\r\n    company_name: \"\",\r\n    companyProfile: \"\",\r\n    work_type: \"\",\r\n    contact_name: \"\",\r\n    contact_number: \"\",\r\n    skill: \"\",\r\n    designation: \"\",\r\n    location: \"\",\r\n    experience: \"\",\r\n    annual_salary: \"\",\r\n    last_date: \"\",\r\n  });\r\n\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [jobCategories, setJobCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [designationList, setDesignationList] = useState([]);\r\n  const [skillList, setSkillList] = useState([]);\r\n  const [experience, setExperience] = useState([]);\r\n  const [salary, setSalary] = useState([]);\r\n  const [workType, setWorkType] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [selectedSkills, setSelectedSkills] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  // const [selectedSkills, setSelectedSkills] = useState([]);\r\n\r\n  const [skillValidationError, setSkillValidationError] = useState(\"\");\r\n\r\n  const handleSkillChange = (selectedOptions) => {\r\n    setSelectedSkills(selectedOptions); // Update selected skills\r\n\r\n    // console.log(selectedOptions);\r\n\r\n    // Check if selectedOptions is not empty\r\n    // if (selectedOptions.length > 0) {\r\n    //   setSkillValidationError(\"\"); // Clear the error message\r\n    // } else {\r\n    //   setSkillValidationError(\"Skill is required\");\r\n    // }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"skill\") {\r\n      setJobData((prevJobData) => ({\r\n        ...prevJobData,\r\n        skill: [...prevJobData.skill, value],\r\n      }));\r\n    } else if (name === \"subCategory\") {\r\n      setJobData((prevJobData) => ({\r\n        ...prevJobData,\r\n        subCategory: [...prevJobData.subCategory, value],\r\n      }));\r\n    } else {\r\n      setJobData((prevJobData) => ({\r\n        ...prevJobData,\r\n        [name]: value,\r\n      }));\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        [name]: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/job/createJob/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        // console.log(response);\r\n\r\n        var skillList = response.data.response.skillList;\r\n        var selectedSkillsName = response.data.response.job_details.skill;\r\n        var SelectSkills = [];\r\n\r\n        skillList.forEach((element) => {\r\n          for (let i = 0; i < selectedSkillsName.length; i++) {\r\n            if (parseInt(selectedSkillsName[i]) == element.id) {\r\n              let obj = {\r\n                value: element.id,\r\n                label: element.name,\r\n              };\r\n              SelectSkills.push(obj);\r\n            }\r\n          }\r\n        });\r\n        // console.log(SelectSkills);\r\n        setSelectedSkills(SelectSkills);\r\n        setJobData(response.data.response.job_details);\r\n        setTotalData(response.data);\r\n        setJobCategories(response.data.response.categories);\r\n        setDesignationList(response.data.response.designationlList);\r\n        setSkillList(response.data.response.skillList);\r\n        setExperience(response.data.response.experience);\r\n        setSalary(response.data.response.sallery);\r\n        setWorkType(response.data.response.worktype);\r\n        // console.log(totalData);\r\n      } else if (response.data.status === 400) {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"employerCreateJob.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"employerCreateJob.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"No data received\");\r\n    }\r\n  };\r\n\r\n  const getSubCategories = async (id) => {\r\n    try {\r\n      const subCatData = await axios.post(\r\n        BaseApi + `/categories/getSubCategory/${id}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setSubCategories(subCatData.data.response);\r\n    } catch (error) {\r\n      console.log(\"Couldn't get Sub category data!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getSubCategories();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    var skills = document.getElementsByName(\"skill\");\r\n    var skillArray = [];\r\n\r\n    skills.forEach((element) => {\r\n      skillList.forEach((skill) => {\r\n        if (skill.id == element.value) {\r\n          skillArray.push(skill.id);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Check initial skill validation\r\n    // if (selectedSkills.length === 0) {\r\n    //   setSkillValidationError(\"Skill is required\");\r\n    // }\r\n\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (jobData.annual_salary === \"\") {\r\n        newErrors.annual_salary = t(\"employerCreateJob.annualSalaryRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (jobData.category === \"\") {\r\n        newErrors.category = t(\"employerCreateJob.categoryRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.companyProfile === \"\") {\r\n        newErrors.companyProfile = t(\r\n          \"employerCreateJob.companyProfileRequired\"\r\n        );\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.company_name === \"\") {\r\n        newErrors.company_name = t(\"employerCreateJob.companyNameRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.contact_name === \"\") {\r\n        newErrors.contact_name = t(\"employerCreateJob.contactNameRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (jobData.contact_number === \"\") {\r\n        newErrors.contact_number = t(\"employerCreateJob.contactNumberRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      // else if (!/^\\+?\\d{1,3}-?\\d{9,15}$/.test(jobData.company_contact)) {\r\n      //   newErrors.contact_number =\r\n      //     \"Contact Number under 15 digits and contain only digits.\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n\r\n      if (jobData.designation === \"\") {\r\n        newErrors.designation = t(\"employerCreateJob.workingRelationRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.experience === \"\") {\r\n        newErrors.experience = t(\"employerCreateJob.experienceRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.jobDescription === \"\") {\r\n        newErrors.jobDescription = t(\r\n          \"employerCreateJob.jobDescriptionRequired\"\r\n        );\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.job_title === \"\") {\r\n        newErrors.job_title = t(\"employerCreateJob.jobTitleRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.last_date === \"\") {\r\n        newErrors.last_date = t(\"employerCreateJob.lastDateRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (jobData.location === \"\") {\r\n        newErrors.location = t(\"employerCreateJob.locationRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      // if (jobData.skill === \"\") {\r\n      //   newErrors.skill = \"Skill is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      // if (jobData.subCategory === \"\") {\r\n      //   newErrors.subCategory = \"Sub Category is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n      if (jobData.work_type === \"\") {\r\n        newErrors.work_type = t(\"employerCreateJob.workTypeRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (jobData.company_website) {\r\n        const urlFormat = /^https:\\/\\/(www\\.)?[\\w.-]+\\.[a-z]{2,5}$/i;\r\n        if (\r\n          jobData.company_website &&\r\n          !urlFormat.test(jobData.company_website)\r\n        ) {\r\n          newErrors.company_website = t(\"employerCreateJob.urlInvalid\");\r\n          window.scrollTo(0, 0);\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (skillValidationError) {\r\n        return;\r\n      }\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: t(\"employerCreateJob.copyJobConfirmTitle\"),\r\n          text: t(\"employerCreateJob.copyJobConfirmTxt\"),\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: t(\"employerCreateJob.yes\"),\r\n          cancelButtonText: t(\"employerCreateJob.no\"),\r\n        });\r\n        if (confirmationResult.isConfirmed) {\r\n          console.log(jobData);\r\n\r\n          const updatedProfile = {\r\n            ...jobData,\r\n            skill: skillArray,\r\n          };\r\n\r\n          setLoading(true);\r\n          const response = await axios.post(\r\n            BaseApi + \"/job/createJob\",\r\n            updatedProfile,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n              },\r\n            }\r\n          );\r\n          if (response.data.status === 200) {\r\n            setLoading(false);\r\n            Swal.fire({\r\n              title: t(\"employerCreateJob.copyJobSuccessTitle\"),\r\n              icon: \"success\",\r\n              confirmButtonText: t(\"employerCreateJob.close\"),\r\n            });\r\n            navigate(\"/user/managejob\");\r\n          } else if (response.data.status === 400) {\r\n            Cookies.remove(\"tokenClient\");\r\n            Cookies.remove(\"user_type\");\r\n            Cookies.remove(\"fname\");\r\n            navigate(\"/\");\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"warning\",\r\n              confirmButtonText: t(\"employerCreateJob.close\"),\r\n            });\r\n          } else {\r\n            setLoading(false);\r\n            Swal.fire({\r\n              title: t(\"employerCreateJob.copyJobFailedTitle\"),\r\n              text: HTMLReactParser(response.data.message),\r\n              icon: \"error\",\r\n              confirmButtonText: t(\"employerCreateJob.close\"),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      Swal.fire({\r\n        title: t(\"employerCreateJob.copyJobFailedTxt\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"employerCreateJob.close\"),\r\n      });\r\n      console.log(jobData);\r\n      console.log(\"Could not submit job data\");\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    // console.log(base64);\r\n    setJobData({ ...jobData, logo: base64 });\r\n  };\r\n\r\n  const getWorkType = (id) => {\r\n    // console.log(id, \"work\");\r\n    if (id == 1) {\r\n      return \"Full Time\";\r\n    }\r\n    if (id == 2) {\r\n      return \"Part Time\";\r\n    }\r\n    if (id == 3) {\r\n      return \"Casual\";\r\n    }\r\n    if (id == 4) {\r\n      return \"Seasonal\";\r\n    }\r\n    if (id == 5) {\r\n      return \"Fixed Term\";\r\n    }\r\n  };\r\n\r\n  const getCategoryName = (catId) => {\r\n    for (let i = 0; i < jobCategories.length; i++) {\r\n      if (jobCategories[i].id == catId) {\r\n        return jobCategories[i].name;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDesignationName = (designationId) => {\r\n    for (let i = 0; i < designationList.length; i++) {\r\n      if (designationList[i].id == designationId) {\r\n        return designationList[i].name;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Code for loading Location\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAfLv-IdHZm0Xy3kYlAm3TypjjqeUjra9Q&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      // console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n    if (value != \"\") {\r\n      setErrors({\r\n        location: \"\",\r\n      });\r\n    }\r\n\r\n    setJobData((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (jobData.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    // console.log(filterItem);\r\n  };\r\n\r\n  function handleLastDateChange(event) {\r\n    const { name, value } = event.target;\r\n    let currentDate = new Date();\r\n    let selectedDate = new Date(value);\r\n\r\n    if (name === \"last_date\" && selectedDate < currentDate) {\r\n      // If the selected date is older than the current date, reset the value to current date\r\n      const formattedCurrentDate = currentDate.toISOString().split(\"T\")[0];\r\n      // Update the state with the current date\r\n      setJobData({ ...jobData, [name]: formattedCurrentDate });\r\n    } else {\r\n      // Update the state with the selected value\r\n      setJobData({ ...jobData, [name]: value });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"container createJob\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Sidebar />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-lg-9 mb-5 CLPanelRight\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"d-flex PageHeader\">\r\n                  <img src=\"/Images/employerSide/icon1color.png\" alt=\"\" />\r\n                  <h3 className=\"mx-2\">{t(\"employerCreateJob.copyJob\")}</h3>\r\n                </div>\r\n                <form>\r\n                  <div className=\"mb-5 mt-4\">\r\n                    <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                        {t(\"employerCreateJob.jobTitle\")}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"form3Example1\"\r\n                        className={`form-control ${\r\n                          errors.job_title && \"input-error\"\r\n                        }`}\r\n                        name=\"job_title\"\r\n                        value={jobData.job_title}\r\n                        placeholder={t(\"employerCreateJob.jobTitle\")}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.job_title && (\r\n                        <div className=\"text-danger\">{errors.job_title}</div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                        {t(\"employerCreateJob.category\")}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <select\r\n                        className={`form-select ${\r\n                          errors.category && \"input-error\"\r\n                        }`}\r\n                        aria-label=\"Default select example\"\r\n                        name=\"category\"\r\n                        value={jobData.category}\r\n                        onChange={(e) => {\r\n                          handleChange(e);\r\n                          getSubCategories(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">\r\n                          {t(\"employerCreateJob.selectJobCategory\")}\r\n                        </option>\r\n                        {jobCategories.map((i, index) => (\r\n                          <option value={i.id} key={index}>\r\n                            {i.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.category && (\r\n                        <div className=\"text-danger\">{errors.category}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {jobData.category && subCategories ? (\r\n                    <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                        {t(\"employerCreateJob.subCategory\")}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <select\r\n                        className={`form-select ${\r\n                          errors.subCategory && \"input-error\"\r\n                        }`}\r\n                        aria-label=\"Default select example\"\r\n                        name=\"subCategory\"\r\n                        value={jobData.subCategory}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <option selected value=\"\">\r\n                          {t(\"employerCreateJob.selectSubCategory\")}\r\n                        </option>\r\n                        {subCategories?.map((i, index) => {\r\n                          return (\r\n                            <option key={index} value={i.id}>\r\n                              {i.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      {errors.subCategory && (\r\n                        <div className=\"text-danger\">{errors.subCategory}</div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.jobDescription\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    {/* <JoditEditor\r\n                      ref={editor}\r\n                      name=\"jobDescription\"\r\n                      value={jobData.jobDescription}\r\n                      onChange={(jobDescription) =>\r\n                        handleChange({\r\n                          target: {\r\n                            value: jobDescription,\r\n                            name: \"jobDescription\",\r\n                          },\r\n                        })\r\n                      }\r\n                    /> */}\r\n\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      value={jobData.jobDescription}\r\n                      onChange={(value) =>\r\n                        handleChange({\r\n                          target: { name: \"jobDescription\", value },\r\n                        })\r\n                      }\r\n                      style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder={t(\"reactQuill.placeholder\")}\r\n                    />\r\n                    {errors.jobDescription && (\r\n                      <div className=\"text-danger\">{errors.jobDescription}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.companyName\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example3\"\r\n                      className={`form-control ${\r\n                        errors.company_name && \"input-error\"\r\n                      }`}\r\n                      name=\"company_name\"\r\n                      value={jobData.company_name}\r\n                      placeholder={t(\"employerCreateJob.companyName\")}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_name && (\r\n                      <div className=\"text-danger\">{errors.company_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.companyProfile\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    {/* <JoditEditor\r\n                      ref={editor}\r\n                      name=\"companyProfile\"\r\n                      value={jobData.companyProfile}\r\n                      onChange={(companyProfile) =>\r\n                        handleChange({\r\n                          target: {\r\n                            value: companyProfile,\r\n                            name: \"companyProfile\",\r\n                          },\r\n                        })\r\n                      }\r\n                    /> */}\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      value={jobData.companyProfile}\r\n                      onChange={(companyProfile) =>\r\n                        handleChange({\r\n                          target: {\r\n                            name: \"companyProfile\",\r\n                            value: companyProfile,\r\n                          },\r\n                        })\r\n                      }\r\n                      style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder={t(\"reactQuill.placeholder\")}\r\n                    />\r\n                    {errors.companyProfile && (\r\n                      <div className=\"text-danger\">{errors.companyProfile}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      {t(\"employerCreateJob.workType\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.work_type && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"work_type\"\r\n                      value={jobData.work_type}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        {t(\"employerCreateJob.selectWorkType\")}\r\n                      </option>\r\n                      {Object.entries(workType).map(([key, value]) => {\r\n                        return (\r\n                          <>\r\n                            <option key={key} value={key}>\r\n                              {value}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.work_type && (\r\n                      <div className=\"text-danger\">{errors.work_type}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.contactName\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example3\"\r\n                      className={`form-control ${\r\n                        errors.contact_name && \"input-error\"\r\n                      }`}\r\n                      name=\"contact_name\"\r\n                      value={jobData.contact_name}\r\n                      placeholder={t(\"employerCreateJob.contactName\")}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact_name && (\r\n                      <div className=\"text-danger\">{errors.contact_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.contactNumber\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example3\"\r\n                      className={`form-control ${\r\n                        errors.contact_number && \"input-error\"\r\n                      }`}\r\n                      name=\"contact_number\"\r\n                      value={jobData.contact_number}\r\n                      placeholder={t(\"employerCreateJob.contactNumber\")}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact_number && (\r\n                      <div className=\"text-danger\">{errors.contact_number}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.companyWebsite\")}\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example3\"\r\n                      className=\"form-control\"\r\n                      name=\"company_website\"\r\n                      value={jobData.company_website}\r\n                      placeholder={t(\"employerCreateJob.companyWebsite\")}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_website && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.company_website}\r\n                      </div>\r\n                    )}\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Eg: https://www.google.com or http://google.com\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx skillPackage\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      {t(\"employerCreateJob.skills\")}\r\n                    </label>\r\n                    <Select\r\n                      defaultValue={selectedSkills}\r\n                      isMulti\r\n                      isSearchable\r\n                      name=\"skill\"\r\n                      options={skillList.map((i) => ({\r\n                        value: i.id,\r\n                        label: i.name,\r\n                      }))}\r\n                      className=\"basic-multi-select\"\r\n                      classNamePrefix={t(\"employerCreateJob.selectSkills\")}\r\n                      value={selectedSkills}\r\n                      onChange={handleSkillChange}\r\n                    />\r\n                    {skillValidationError && (\r\n                      <div className=\"text-danger\">{skillValidationError}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      {t(\"employerCreateJob.workingRelation\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.designation && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"designation\"\r\n                      value={jobData.designation}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        {t(\"employerCreateJob.chooseWorkingRelation\")}\r\n                      </option>\r\n                      {designationList.map((i, index) => {\r\n                        return (\r\n                          <>\r\n                            <option value={i.id} key={index}>\r\n                              {i.name}\r\n                            </option>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.designation && (\r\n                      <div className=\"text-danger\">{errors.designation}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.location\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example3\"\r\n                      className={`form-control ${\r\n                        errors.location && \"input-error\"\r\n                      }`}\r\n                      name=\"location\"\r\n                      value={jobData.location}\r\n                      placeholder={t(\"employerCreateJob.location\")}\r\n                      onChange={handleLocationChange}\r\n                    />\r\n                    {suggestions.length > 0 && (\r\n                      <div\r\n                        className=\"suggestions\"\r\n                        style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                      >\r\n                        <ul className=\"locationDropdown\">\r\n                          {suggestions.map((suggestion, index) => (\r\n                            <div key={index} className=\"suggestion-item\">\r\n                              <li\r\n                                onClick={() =>\r\n                                  handleSuggestionClick(suggestion)\r\n                                }\r\n                              >\r\n                                <div className=\"eachLocation\">\r\n                                  <div className=\"locationIcon\">\r\n                                    <LocationOnIcon fontSize=\"small\" />\r\n                                  </div>{\" \"}\r\n                                  <div className=\"locationSuggestion\">\r\n                                    {suggestion}\r\n                                  </div>\r\n                                </div>{\" \"}\r\n                              </li>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {errors.location && (\r\n                      <div className=\"text-danger\">{errors.location}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      {t(\"employerCreateJob.experience(inYears)\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.experience && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"experience\"\r\n                      value={jobData.experience}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        {t(\"employerCreateJob.chooseExp\")}\r\n                      </option>\r\n                      {Object.entries(experience).map(([key, value]) => {\r\n                        return (\r\n                          <option key={key} value={key}>\r\n                            {value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.experience && (\r\n                      <div className=\"text-danger\">{errors.experience}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example1\">\r\n                      {t(\"employerCreateJob.annualSalary\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.annual_salary && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"annual_salary\"\r\n                      value={jobData.annual_salary}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        {t(\"employerCreateJob.selectSalary\")}\r\n                      </option>\r\n                      {Object.entries(salary).map(([key, value]) => {\r\n                        return (\r\n                          <option key={key} value={key}>\r\n                            {value}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                    {errors.annual_salary && (\r\n                      <div className=\"text-danger\">{errors.annual_salary}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">\r\n                      {t(\"employerCreateJob.companyLogo\")}\r\n                    </label>\r\n                    <input\r\n                      className=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      type=\"file\"\r\n                      lable=\"Image\"\r\n                      name=\"logo\"\r\n                      id=\"file-upload\"\r\n                      accept=\".jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload(e)}\r\n                    />\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      {t(\"employerCreateJob.belowTxt1\")}\r\n                    </div>\r\n                    <div className=\"EPEJimageViewer\">\r\n                      <img\r\n                        src={\r\n                          jobData.logo_path\r\n                            ? jobData.logo_path\r\n                            : \"/Images/jobseekerSide/dummy-profile.png\"\r\n                        }\r\n                        alt=\"\"\r\n                        \r\n                      />\r\n                      {jobData.logo ? (\r\n                        <button\r\n                          className=\"btn-sm btn-outline-dark button1 ml-3\"\r\n                          style={{}}\r\n                          onClick={() => setJobData({ ...jobData, logo: \"\" })}\r\n                        >\r\n                          {t(\"employerCreateJob.deleteButton\")}\r\n                        </button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-outline mb-5 DashBoardInputBx DashBoardCreatBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      {t(\"employerCreateJob.lastDate\")}\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"form3Example3\"\r\n                      className={`form-control ${\r\n                        errors.last_date && \"input-error\"\r\n                      }`}\r\n                      name=\"last_date\"\r\n                      value={jobData.last_date}\r\n                      placeholder={t(\"employerCreateJob.lastDate\")}\r\n                      onChange={handleLastDateChange}\r\n                    />\r\n                    {errors.last_date && (\r\n                      <div className=\"text-danger\">{errors.last_date}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"bottomButtons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button1\"\r\n                      onClick={handleClick}\r\n                      style={{\r\n                        backgroundColor: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleSearchMouseEnter}\r\n                      onMouseLeave={handleSearchMouseLeave}\r\n                    >\r\n                      {t(\"employerCreateJob.copyJobButton\")}\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button2\"\r\n                      onClick={() => handleOpen(jobData)}\r\n                      style={{\r\n                        color: hoverUploadCVColor\r\n                          ? primaryColor\r\n                          : secondaryColor,\r\n                        backgroundColor: \"white\",\r\n                        border: hoverUploadCVColor\r\n                          ? `2px solid ${primaryColor}`\r\n                          : `2px solid ${secondaryColor}`,\r\n                      }}\r\n                      onMouseEnter={handleUploadCVMouseEnter}\r\n                      onMouseLeave={handleUploadCVMouseLeave}\r\n                    >\r\n                      {t(\"employerCreateJob.previewButton\")}\r\n                    </button>\r\n                    <div>\r\n                      <Modal\r\n                        className=\"modalMain\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box className=\"modal adminModal modal-content\">\r\n                          <IconButton\r\n                            onClick={handleClose}\r\n                            className=\"close-button\"\r\n                            style={{\r\n                              position: \"absolute\",\r\n                              top: 10,\r\n                              right: 10,\r\n                            }}\r\n                          >\r\n                            &times;\r\n                          </IconButton>\r\n\r\n                          <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h6\"\r\n                            component=\"h2\"\r\n                          ></Typography>\r\n                          <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          >\r\n                            {selectedPayment && (\r\n                              <div className=\"modals \">\r\n                                <div className=\"modalHead\">\r\n                                  <h1\r\n                                    style={{\r\n                                      color: secondaryColor,\r\n                                    }}\r\n                                  >\r\n                                    {selectedPayment.job_title}\r\n                                  </h1>\r\n                                </div>\r\n                                <div className=\"modalBody mt-4\">\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.workType\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {getWorkType(selectedPayment.work_type)}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.location\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {selectedPayment.location}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.companyName\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {jobData.company_name}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.companyWebsite\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {selectedPayment.company_website}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.jobType\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {getWorkType(selectedPayment.work_type)}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.category\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {getCategoryName(\r\n                                        selectedPayment.category\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\r\n                                        \"employerCreateJob.experience(inYears)\"\r\n                                      )}\r\n                                      :{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {Object.entries(experience).map(\r\n                                        ([key, value]) => {\r\n                                          if (\r\n                                            key == selectedPayment.experience\r\n                                          ) {\r\n                                            return value;\r\n                                          }\r\n                                        }\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.annualSalary\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {Object.entries(salary).map(\r\n                                        ([key, value]) => {\r\n                                          if (\r\n                                            key == selectedPayment.annual_salary\r\n                                          ) {\r\n                                            return value;\r\n                                          }\r\n                                        }\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.skills\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {selectedSkills.map((i) => {\r\n                                        return i.label + \" \";\r\n                                      })}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.workingRelation\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {getDesignationName(\r\n                                        selectedPayment.designation\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"modalParent\">\r\n                                    <div className=\"modalLeft\">\r\n                                      {t(\"employerCreateJob.jobDescription\")}:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"modalRight\">\r\n                                      {selectedPayment.jobDescription\r\n                                        ? HTMLReactParser(\r\n                                            selectedPayment.jobDescription\r\n                                          )\r\n                                        : \"\"}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Modal>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CopyJob;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Sidebar = () => {\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const navigate = useNavigate();\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [isQuickLinksVisible, setIsQuickLinksVisible] = useState(false);\r\n  const [isDashboardLinksVisible, setIsDashboardLinksVisible] = useState(false);\r\n\r\n  const toggle1 = () => {\r\n    setIsQuickLinksVisible(!isQuickLinksVisible);\r\n  };\r\n  const toggle2 = () => {\r\n    setIsDashboardLinksVisible(!isDashboardLinksVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const handleWindowResize = () => {\r\n    //   if (window.innerWidth < 768) {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(false);\r\n    //   } else {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(true);\r\n    //   }\r\n    // };\r\n\r\n    const handleWindowResize = () => {\r\n      if (window.innerWidth > 768) {\r\n        // Reload the page when the screen size is less than 768\r\n        window.location.reload();\r\n      }\r\n    };\r\n\r\n    // Call the function on component mount\r\n    // handleWindowResize();\r\n\r\n    // Attach event listener for window resize\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Clean up event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  let screenWidth = window.innerWidth;\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: t(\"employerSidebar.confirmTitle\"),\r\n        text: t(\"employerSidebar.confirmTxt\"),\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: t(\"employerSidebar.yes\"),\r\n        cancelButtonText: t(\"employerSidebar.no\"),\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(BaseApi + \"/users/logout\", null, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        });\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        // sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: t(\"employerSidebar.successTitle\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: t(\"employerSidebar.failedTitle\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"employerSidebar.close\"),\r\n      });\r\n      console.log(\"Cannot logout!\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAc = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Account\",\r\n        text: \"Do you want to delete this account?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(\r\n          BaseApi + \"/users/deleteAccount\",\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Account deleted successfully!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Could not delete account!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Cannot delete account!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {screenWidth > 768 ? (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"SBBody\">\r\n              <Link to=\"/user/createjob\" className=\"bodyItem SidebarCreatJob\">\r\n                <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon1color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/managejob\" className=\"bodyItem SidebarManageJob\">\r\n                <div className=\"SidebarImages SidebarManageJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon2color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/paymenthistory\"\r\n                className=\"bodyItem SidebarPaymentJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon3color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/favouritelist\"\r\n                className=\"bodyItem SidebarFavouriteJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon4color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/importjobseekers\"\r\n                className=\"bodyItem SidebarImportJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarImportJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon5color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-5\">\r\n              <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"body\">\r\n              <Link\r\n                to=\"/user/mailhistory\"\r\n                className=\"bodyItem SidebarMailHistory\"\r\n              >\r\n                <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon6color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/myprofile\" className=\"bodyItem SidebarMyProfile\">\r\n                <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon7color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/editprofile\"\r\n                className=\"bodyItem SidebarEditProfile\"\r\n              >\r\n                <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon8color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changepassword\"\r\n                className=\"bodyItem SidebarChangePass\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangePassBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon9color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changelogo\"\r\n                className=\"bodyItem SidebarChangeLogo\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon10color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n              </Link>\r\n              <Link className=\"bodyItem SidebarLogOut\">\r\n                <div className=\"SidebarImages SidebarLogOutBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon11color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                {t(\"employerSidebar.logout\")}\r\n                </div>\r\n              </Link>\r\n              <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon12color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.deleteAccount\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle1}>\r\n                  {isQuickLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isQuickLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isQuickLinksVisible ? \"block\" : \"none\",\r\n                  \r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/createjob\"\r\n                    className=\"bodyItem SidebarCreatJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon1color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/managejob\"\r\n                    className=\"bodyItem SidebarManageJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarManageJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon2color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/paymenthistory\"\r\n                    className=\"bodyItem SidebarPaymentJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon3color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/favouritelist\"\r\n                    className=\"bodyItem SidebarFavouriteJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon4color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/importjobseekers\"\r\n                    className=\"bodyItem SidebarImportJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarImportJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon5color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-3\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle2}>\r\n                  {isDashboardLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isDashboardLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isDashboardLinksVisible ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/mailhistory\"\r\n                    className=\"bodyItem SidebarMailHistory\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon6color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/myprofile\"\r\n                    className=\"bodyItem SidebarMyProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon7color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/editprofile\"\r\n                    className=\"bodyItem SidebarEditProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon8color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changepassword\"\r\n                    className=\"bodyItem SidebarChangePass\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangePassBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon9color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changelogo\"\r\n                    className=\"bodyItem SidebarChangeLogo\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon10color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"bodyItem SidebarLogOut\">\r\n                    <div className=\"SidebarImages SidebarLogOutBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon11color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                    {t(\"employerSidebar.logout\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                    <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon12color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">\r\n                    {t(\"employerSidebar.deleteAccount\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["CopyJob","useRef","tokenKey","Cookies","navigate","useNavigate","slug","useParams","t","i18n","useTranslation","open","setOpen","useState","selectedPayment","setSelectedPayment","handleClose","primaryColor","secondaryColor","hoverSearchColor","setHoverSearchColor","hoverUploadCVColor","setHoverUploadCVColor","useEffect","window","scrollTo","jobData","setJobData","job_title","category","subCategory","jobDescription","company_name","companyProfile","work_type","contact_name","contact_number","company_website","skill","designation","location","experience","annual_salary","logo","last_date","errors","setErrors","totalData","setTotalData","jobCategories","setJobCategories","subCategories","setSubCategories","designationList","setDesignationList","skillList","setSkillList","setExperience","salary","setSalary","workType","setWorkType","loading","setLoading","selectedSkills","setSelectedSkills","selectedImage","setSelectedImage","skillValidationError","setSkillValidationError","handleChange","e","name","value","target","prevJobData","prev","getSubCategories","async","subCatData","axios","BaseApi","id","headers","key","ApiKey","token","data","response","error","console","log","status","selectedSkillsName","job_details","SelectSkills","forEach","element","i","length","parseInt","obj","label","push","categories","designationlList","sallery","worktype","Swal","title","message","icon","confirmButtonText","setTimeout","reload","getData","handleFileUpload","file","files","base64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","convertToBase64","getWorkType","autocompleteService","setAutocompleteService","suggestions","setSuggestions","script","document","createElement","src","google","maps","places","AutocompleteService","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","prevFilter","getPlacePredictions","input","types","predictions","map","prediction","description","suggestionTaken","_jsxs","_Fragment","children","_jsx","NavBar","className","Sidebar","style","borderLeft","borderRight","alt","htmlFor","type","placeholder","onChange","index","selected","ReactQuill","theme","minHeight","height","Object","entries","_ref","Select","defaultValue","isMulti","isSearchable","options","classNamePrefix","selectedOptions","display","suggestion","onClick","handleSuggestionClick","LocationOnIcon","fontSize","_ref2","_ref3","lable","accept","logo_path","event","currentDate","Date","selectedDate","formattedCurrentDate","toISOString","split","skills","getElementsByName","skillArray","newErrors","urlFormat","test","keys","text","showCancelButton","cancelButtonText","isConfirmed","updatedProfile","HTMLReactParser","backgroundColor","border","onMouseEnter","handleSearchMouseEnter","onMouseLeave","handleSearchMouseLeave","handleOpen","plan","color","handleUploadCVMouseEnter","handleUploadCVMouseLeave","Modal","onClose","Box","IconButton","position","top","right","Typography","variant","component","sx","mt","catId","getCategoryName","_ref4","_ref5","designationId","getDesignationName","Footer","isQuickLinksVisible","setIsQuickLinksVisible","isDashboardLinksVisible","setIsDashboardLinksVisible","handleWindowResize","innerWidth","addEventListener","removeEventListener","screenWidth","handleLogOut","toast","showConfirmButton","timer","timerProgressBar","didOpen","fire","Link","to","toggle1","class","toggle2"],"sourceRoot":""}