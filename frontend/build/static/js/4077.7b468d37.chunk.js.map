{"version":3,"file":"static/js/4077.7b468d37.chunk.js","mappings":"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","sources":["Components/faq/Faq.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Footer from \"../element/Footer\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Cookies from \"js-cookie\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Faq = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  // *******************************\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  // ***********************************\r\n\r\n  const recaptchaLanguage = Cookies.get(\"selectedLanguage\");\r\n  const currentLanguage = Cookies.get(\"selectedLanguage\") || \"en\";\r\n  const navigate = useNavigate();\r\n  const userType = Cookies.get(\"user_type\");\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n\r\n  const [isCaptchaVerified, setIsCaptchaVerified] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  let captchaKey = Cookies.get(\"captchaKey\");\r\n\r\n  const [hoverColor, setHoverColor] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setHoverColor(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverColor(false);\r\n  };\r\n\r\n  const [pageContent, setPageContent] = useState([]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(BaseApi + `/page/staticpage/faq`,{language: currentLanguage});\r\n      setLoading(false);\r\n      setPageContent(response.data.response);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get data of faq page\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (\r\n  //     (!tokenKey && userType != \"recruiter\") ||\r\n  //     (!tokenKey && userType != \"candidate\")\r\n  //   ) {\r\n  //     navigate(\"/user/jobseekerlogin\");\r\n  //   } else {\r\n  //     getData();\r\n      \r\n  //   }\r\n  // }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (formData.name === \"\") {\r\n        newErrors.name = t(\"messageForm.nameRequired\");\r\n      }\r\n      if (formData.email === \"\") {\r\n        newErrors.email = t(\"messageForm.emailRequired\");\r\n      } else if (!isValidEmail(formData.email)) {\r\n        newErrors.email = \"Invalid email format\";\r\n      }\r\n      if (formData.subject === \"\") {\r\n        newErrors.subject = t(\"messageForm.subjectRequired\");\r\n      }\r\n      if (formData.message === \"\") {\r\n        newErrors.message = t(\"messageForm.messageRequired\");\r\n      }\r\n      if (!isCaptchaVerified) {\r\n        newErrors.captcha = t(\"messageForm.captchaRequired\");\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      // Function to validate email format\r\n      function isValidEmail(email) {\r\n        // Use a regular expression to validate email format\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        return emailPattern.test(email);\r\n      }\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        if (isCaptchaVerified) {\r\n          setLoading(true);\r\n          const response = await axios.post(\r\n            BaseApi + `/page/staticpage/faq.html`,\r\n            formData\r\n          );\r\n          setLoading(false);\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: t(\"messageForm.messageSuccessTitle\"),\r\n              icon: \"success\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n            window.location.reload();\r\n          } else if (response.data.status === 500) {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: t(\"messageForm.messageFailedTitle\"),\r\n        text: t(\"messageForm.messageFailedTxt\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"messageForm.close\"),\r\n      });\r\n    }\r\n    console.log(formData);\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"\">\r\n            <div className=\"faqSection1\">\r\n              <div className=\"section1Faq text-center\">\r\n                <h1 className=\"\">{pageContent.page_title}</h1>\r\n                <h6 className=\"text-muted fw-normal\">\r\n                  {\" \"}\r\n                  <Link to=\"/\" style={{ color: \"grey\" }}>\r\n                    {t(\"navHeaders.home\")}\r\n                  </Link>{\" \"}\r\n                  /{pageContent.page_title}\r\n                </h6>\r\n              </div>\r\n              <div className=\"container section2Faq\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-5\">\r\n                    <div className=\"faqBodySection1\">\r\n                      <h3>\r\n                        {t(\"faq.header1.1\")} <br /> {t(\"faq.header1.2\")}{\" \"}\r\n                        <span className=\"textGradient\">\r\n                          {\" \"}\r\n                          <span className=\"SubHaddingTxt\">\r\n                            {t(\"faq.header1.3\")}\r\n                          </span>\r\n                        </span>\r\n                      </h3>\r\n                    </div>\r\n\r\n                    <img className=\"mt-3\" src=\"/Images/Faq.png\" alt=\"\" />\r\n                  </div>\r\n                  <div className=\"col-lg-7\">\r\n                    <div className=\"upperPart\">\r\n                      {pageContent.page_description &&\r\n                        HTMLReactParser(pageContent.page_description)}\r\n                      {/* <h4>Download and Installation</h4>\r\n                      <p>\r\n                        You can download the app from Apple App store on your\r\n                        device. Apple is available only on Apple App store for\r\n                        both iPhone and iPad devices.\r\n                      </p>\r\n                      <h4 className=\"mt-4\">Login and Registering</h4>\r\n                      <p>\r\n                        You can login into the app by registering and by\r\n                        providing your basic informations. This informations\r\n                        will never be used without your permission.\r\n                      </p> */}\r\n                    </div>\r\n                    {/* <div className=\"lowerPart\">\r\n                      <div className=\"accordion\" id=\"accordionExample\">\r\n                        <div className=\"accordion-item\">\r\n                          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button\r\n                              className=\"accordion-button collapsed\"\r\n                              type=\"button\"\r\n                              data-bs-toggle=\"collapse\"\r\n                              data-bs-target=\"#collapseTwo\"\r\n                              aria-expanded=\"false\"\r\n                              aria-controls=\"collapseTwo\"\r\n                            >\r\n                              <p>\r\n                                What can I do so that multiple employers will\r\n                                contact me?\r\n                              </p>\r\n                            </button>\r\n                          </h2>\r\n                          <div\r\n                            id=\"collapseTwo\"\r\n                            className=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingTwo\"\r\n                            data-bs-parent=\"#accordionExample\"\r\n                          >\r\n                            <div className=\"accordion-body\">\r\n                              <p>\r\n                                Ensure that you complete and update your online\r\n                                CV profileYou should also upload your in ms word\r\n                                and pdf format.\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"accordion-item\">\r\n                          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button\r\n                              className=\"accordion-button collapsed\"\r\n                              type=\"button\"\r\n                              data-bs-toggle=\"collapse\"\r\n                              data-bs-target=\"#collapseThree\"\r\n                              aria-expanded=\"false\"\r\n                              aria-controls=\"collapseThree\"\r\n                            >\r\n                              <p>\r\n                                How do I search for job adverts on the jobs\r\n                                portal?\r\n                              </p>\r\n                            </button>\r\n                          </h2>\r\n                          <div\r\n                            id=\"collapseThree\"\r\n                            className=\"accordion-collapse collapse\"\r\n                            aria-labelledby=\"headingThree\"\r\n                            data-bs-parent=\"#accordionExample\"\r\n                          >\r\n                            <div className=\"accordion-body\">\r\n                              <p>\r\n                                Use our job search filter on the nav bar of the\r\n                                page .This option lets you filter the job\r\n                                adverts by location,category/subcategory .after\r\n                                selecting your preferences click on the \"Find\r\n                                Jobs \" button. The other option is to type the\r\n                                keyword yoy want to search by into the text box\r\n                                under job keyword search click on \"Find jobs\"\r\n                                after you have typed in your keywordes\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card container faqSection2\">\r\n                <div className=\"card-body\">\r\n                  <h2 className=\"pb-4 pt-2 text-center\">\r\n                    {t(\"faq.header2.1\")}\r\n                    <span className=\"textGradient\">\r\n                      {\" \"}\r\n                      <span className=\"SubHaddingTxt\">\r\n                        {t(\"faq.header2.2\")}\r\n                      </span>\r\n                    </span>\r\n                  </h2>\r\n                  <form>\r\n                    <div className=\"mb-4\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                          errors.name && \"input-error\"\r\n                        }`}\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        placeholder={t(\"faq.namePlaceholder\")}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.name && (\r\n                        <div className=\"text-danger\">{errors.name}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className={`form-control ${\r\n                          errors.email && \"input-error\"\r\n                        }`}\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        placeholder={t(\"faq.emailPlaceholder\")}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.email && (\r\n                        <div className=\"text-danger\">{errors.email}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                      <select\r\n                        className={`form-select ${\r\n                          errors.subject && \"input-error\"\r\n                        }`}\r\n                        aria-label=\"Default select example\"\r\n                        value={formData.subject}\r\n                        name=\"subject\"\r\n                        onChange={handleChange}\r\n                      >\r\n                        <option>{t(\"faq.selectPlaceholder\")}</option>\r\n                        <option value=\"1\">\r\n                          {t(\"faq.messageFormSelectOption1\")}\r\n                        </option>\r\n                        <option value=\"2\">\r\n                          {t(\"faq.messageFormSelectOption2\")}\r\n                        </option>\r\n                        <option value=\"3\">\r\n                          {t(\"faq.messageFormSelectOption3\")}\r\n                        </option>\r\n                        <option value=\"3\">\r\n                          {t(\"faq.messageFormSelectOption4\")}\r\n                        </option>\r\n                        <option value=\"3\">\r\n                          {t(\"faq.messageFormSelectOption5\")}\r\n                        </option>\r\n                      </select>\r\n                      {errors.subject && (\r\n                        <div className=\"text-danger\">{errors.subject}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                      <textarea\r\n                        className={`form-control ${\r\n                          errors.message && \"input-error\"\r\n                        }`}\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        rows=\"5\"\r\n                        name=\"message\"\r\n                        value={formData.message}\r\n                        placeholder={t(\"faq.descPlaceholder\")}\r\n                        onChange={handleChange}\r\n                      ></textarea>\r\n                      {errors.message && (\r\n                        <div className=\"text-danger\">{errors.message}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"reCaptchaLogin mb-4\">\r\n                      <ReCAPTCHA\r\n                        sitekey={captchaKey}\r\n                        hl={recaptchaLanguage}\r\n                        // sitekey=\"6Ld8bV8nAAAAAEp24xWlKsVFhVDYlBctFF50MI1x\"\r\n                        onChange={(value) => setIsCaptchaVerified(value)}\r\n                      />\r\n                      {errors.captcha && (\r\n                        <div className=\"text-danger\">{errors.captcha}</div>\r\n                      )}\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn w-100\"\r\n                      onClick={handleClick}\r\n                      style={{\r\n                        backgroundColor: `${\r\n                          secondaryColor &&\r\n                          (hoverColor ? secondaryColor : primaryColor)\r\n                        }`,\r\n                      }}\r\n                      onMouseEnter={handleMouseEnter}\r\n                      onMouseLeave={handleMouseLeave}\r\n                    >\r\n                      {/* SEND MESSAGE */}\r\n                      {t(\"faq.sendMessageButton\")}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n"],"names":["Faq","formData","setFormData","useState","name","email","subject","message","errors","setErrors","t","i18n","useTranslation","recaptchaLanguage","Cookies","currentLanguage","isCaptchaVerified","setIsCaptchaVerified","useNavigate","loading","setLoading","primaryColor","secondaryColor","captchaKey","hoverColor","setHoverColor","pageContent","setPageContent","useEffect","async","response","axios","BaseApi","language","data","error","console","log","getData","handleChange","e","value","target","prevData","prev","window","scrollTo","_jsxs","_Fragment","children","_jsx","NavBar","className","page_title","Link","to","style","color","src","alt","page_description","HTMLReactParser","type","id","placeholder","onChange","rows","ReCAPTCHA","sitekey","hl","captcha","onClick","preventDefault","newErrors","isValidEmail","test","Object","keys","length","status","Swal","title","icon","confirmButtonText","location","reload","text","backgroundColor","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","Footer"],"sourceRoot":""}