{"version":3,"file":"static/js/6998.902535bc.chunk.js","mappings":"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","sources":["Components/adminpanel/Announcements/APEditAnnouncement.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditAnnouncement = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    url: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    url: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/announcement/admin_edit/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.name === \"\") {\r\n        newErrors.name = \"Announcement Name is required\";\r\n      }\r\n\r\n      if (userData.url === \"\") {\r\n        newErrors.url = \"URL is required\";\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        // Regular expression pattern to match a valid URL\r\n        // const urlPattern = /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n        const urlFormat = /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n\r\n\r\n        if (!urlFormat.test(userData.url)) {\r\n          newErrors.url = \"Invalid URL format\";\r\n          window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Edit Announcement?\",\r\n          text: \"Do you want to Edit this Announcement?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/announcement/admin_edit/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Announcement updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            navigate(\"/admin/announcements\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update announcement. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not update announcement!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/announcements\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Announcement List\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Edit Announcement\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Announcement</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Announcement Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.name && \"input-error\"}`}\r\n                      name=\"name\"\r\n                      placeholder=\"Announcement Name\"\r\n                      value={userData.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      URL<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"url\"\r\n                      placeholder=\"URL\"\r\n                      value={userData.url}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.url && (\r\n                      <div className=\"text-danger\">{errors.url}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      (Enter URL Like https://www.google.com)\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/announcements\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditAnnouncement;\r\n"],"names":["APEditAnnouncement","userData","setUserData","useState","name","url","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","handleChange","e","value","target","prev","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","type","id","placeholder","onChange","onClick","newErrors","test","Object","keys","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}