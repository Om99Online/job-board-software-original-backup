{"version":3,"file":"static/js/7228.419d9fb5.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APChangePaymentDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangePaymentDetail = () => {\r\n  const [userData, setUserData] = useState({\r\n    paypal_email: \"\",\r\n    stripe_secret_key: \"\",\r\n    paypal_url: \"\",\r\n    stripe_pk: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    paypal_email: \"\",\r\n    stripe_secret_key: \"\",\r\n    paypal_url: \"\",\r\n    stripe_pk: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  let paypalMethod = \"\";\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/changePaymentdetail\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      paypalMethod = response.data.response.paypal_url;\r\n      console.log(paypalMethod);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error at change payment details at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const { paypal_email, stripe_secret_key, stripe_pk } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (!paypal_email || !stripe_secret_key || !stripe_pk) {\r\n        setErrors({\r\n          paypal_email: paypal_email ? \"\" : \"Email is required\",\r\n          stripe_secret_key: stripe_secret_key\r\n            ? \"\"\r\n            : \"Stripe Secret key is required\",\r\n          stripe_pk: stripe_pk ? \"\" : \"Stripe Private key is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check for valid email format\r\n      const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailFormat.test(paypal_email)) {\r\n        setErrors({\r\n          paypal_email: \"Invalid Email Address\",\r\n        });\r\n        return;\r\n      }\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update?\",\r\n        text: \"Do you want to update Payment Details?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/changePaymentdetail\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Payment Details updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update Payment Details. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not update Payment Details\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Change Payment Details\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Update Payment Details</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Paypal Email<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.paypal_email && \"input-error\"\r\n                      }`}\r\n                      name=\"paypal_email\"\r\n                      value={userData.paypal_email}\r\n                      placeholder=\"Paypal Email\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.paypal_email && (\r\n                      <div className=\"text-danger\">{errors.paypal_email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"APRadioInput mb-5 DashBoardInputBx\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      Paypal Method<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <div className=\"APPaymentDetailsRadio\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"production\"\r\n                        name=\"paypal_url\"\r\n                        value=\"https://www.paypal.com/cgi-bin/webscr\"\r\n                        checked={\r\n                          userData.paypal_url ===\r\n                          \"https://www.paypal.com/cgi-bin/webscr\"\r\n                        }\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label\r\n                        className=\"labelProduction\"\r\n                        htmlFor=\"https://www.paypal.com/cgi-bin/webscr\"\r\n                      >\r\n                        Production\r\n                      </label>\r\n                      <input\r\n                        type=\"radio\"\r\n                        id=\"development\"\r\n                        name=\"paypal_url\"\r\n                        value=\"https://www.sandbox.paypal.com/cgi-bin/webscr\"\r\n                        checked={\r\n                          userData.paypal_url ===\r\n                          \"https://www.sandbox.paypal.com/cgi-bin/webscr\"\r\n                        }\r\n                        onChange={handleChange}\r\n                      />\r\n                      <label htmlFor=\"https://www.sandbox.paypal.com/cgi-bin/webscr\">\r\n                        Development\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Stripe Secret Key<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.stripe_secret_key && \"input-error\"\r\n                      }`}\r\n                      name=\"stripe_secret_key\"\r\n                      value={userData.stripe_secret_key}\r\n                      placeholder=\"Stripe Secret Key\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.stripe_secret_key && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.stripe_secret_key}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Stripe Publishable Key<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.stripe_pk && \"input-error\"\r\n                      }`}\r\n                      name=\"stripe_pk\"\r\n                      value={userData.stripe_pk}\r\n                      placeholder=\"Stripe Publishable Key\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.stripe_pk && (\r\n                      <div className=\"text-danger\">{errors.stripe_pk}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangePaymentDetail;\r\n"],"names":["APChangePaymentDetail","userData","setUserData","useState","paypal_email","stripe_secret_key","paypal_url","stripe_pk","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","paypalMethod","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","console","log","error","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","htmlFor","checked","test","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}