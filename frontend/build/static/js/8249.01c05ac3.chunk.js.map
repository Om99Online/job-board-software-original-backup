{"version":3,"file":"static/js/8249.01c05ac3.chunk.js","mappings":"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","sources":["Components/adminpanel/Contents/APTextPages.js","../node_modules/@mui/icons-material/Block.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\n\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\n// import CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\n// import DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\n// import ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n// import AddIcon from \"@mui/icons-material/Add\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\n// import VerifiedIcon from \"@mui/icons-material/Verified\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APTextPages = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = parseInt(Cookies.get(\"adminID\"));\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    setSelectedPlan(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPlan(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const [userAccess , setUserAccess] = useState({})\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"1500px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/page/index\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  const handleActivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Page?\",\r\n        text: \"Do you want to Activate this Page?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/page/admin_activate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Page Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDeactivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Page?\",\r\n        text: \"Do you want to Deactivate this Page?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/page/admin_deactivate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Page Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Page?\",\r\n        text: \"Do you want to Delete this Page?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/page/admin_delete/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Page Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleCheck = (id) => {\r\n    if (checkedData.includes(id)) {\r\n      // If the ID is already in the array, remove it\r\n      setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n    } else {\r\n      // If the ID is not in the array, add it\r\n      setCheckedData([...checkedData, id]);\r\n    }\r\n  };\r\n\r\n  const handleMultipleDeactivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Pages?\",\r\n        text: \"Do you want to Deactivate Pages?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const ids = checkedData.join(\",\");\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/page/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"deactivate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Pages Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Deactivate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Pages\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleActivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Pages?\",\r\n        text: \"Do you want to Activate Pages?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/page/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"activate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Pages Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Activate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Pages\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleDelete = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Pages?\",\r\n        text: \"Do you want to Delete Pages?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/page/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"delete\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Pages Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Delete!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Pages\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't Delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter((item) => item.static_page_title?.toLowerCase().includes(query))\r\n      .sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n          return direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n          return direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return item.static_page_title?.toLowerCase().includes(searchString);\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    const newQuery = e.target.value.toLowerCase();\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const access = Cookies.get(\"access\")\r\n\r\n    if(typeof(access) !== null  || access !==  \"\" || access !==  undefined){\r\n\r\n        console.log(JSON.parse(access))\r\n\r\n        setUserAccess(JSON.parse(access))\r\n    }else{\r\n        setUserAccess({})\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin APTextPages\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link underline=\"hover\" color=\"inherit\">\r\n                    Content\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Pages List</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Text Pages</h2>\r\n              </div>\r\n              <div className=\"manageSubadminPart1 APTPSec1\">\r\n                <h4>\r\n                  No. of Results {indexOfFirstItem + 1}-\r\n                  {Math.min(\r\n                    indexOfLastItem,\r\n                    filteredData.length || listData.length\r\n                  )}{\" \"}\r\n                  of {listData.length}\r\n                </h4>\r\n              </div>\r\n\r\n              <div className=\"manageSubadminPart2\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        onClick={() => handleColumnClick(\"static_page_title\")}\r\n                      >\r\n                        Title{symbol}\r\n                      </th>\r\n\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentItems.map((i) => {\r\n                      return (\r\n                        <>\r\n                          <tr>\r\n                            <td>{i.static_page_title}</td>\r\n\r\n                            <td className=\"APActionButton\">\r\n                              {i.status === 1 ? (\r\n                                <button\r\n                                  className=\"btn-secondary\"\r\n                                  onClick={() => handleDeactivate(i.slug)}\r\n                                >\r\n                                  <Tooltip title=\"Deactivate\">\r\n                                    <CheckIcon />\r\n                                  </Tooltip>\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  className=\"btn-secondary\"\r\n                                  onClick={() => handleActivate(i.slug)}\r\n                                >\r\n                                  <Tooltip title=\"Activate\">\r\n                                    <BlockIcon />\r\n                                  </Tooltip>\r\n                                </button>\r\n                              )}\r\n\r\n                              {(userAccess[9]?.Edit === 1 || adminID === 1)&& <>\r\n                              <button\r\n                                className=\"btn-primary\"\r\n                                onClick={() =>\r\n                                  navigate(`/admin/pages/editPage/${i.slug}`)\r\n                                }\r\n                              >\r\n                                <Tooltip title=\"Edit\">\r\n                                  <CreateIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                              </>}\r\n                              <button\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => handleOpen(i)}\r\n                              >\r\n                                <Tooltip title=\"Delete\">\r\n                                  <RemoveRedEyeIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                              {/* <div\r\n                                class=\"modal fade\"\r\n                                id=\"exampleModal\"\r\n                                tabindex=\"-1\"\r\n                                aria-labelledby=\"exampleModalLabel\"\r\n                                aria-hidden=\"true\"\r\n                              >\r\n                                <div class=\"modal-dialog modal-dialog-centered\">\r\n                                  <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"btn-close\"\r\n                                        data-bs-dismiss=\"modal\"\r\n                                        aria-label=\"Close\"\r\n                                      ></button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                      {selectedPlan &&\r\n                                        HTMLReactParser(\r\n                                          selectedPlan.static_page_description\r\n                                        )}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div> */}\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <div>\r\n                      <Modal\r\n                        className=\"modalMain\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box className=\"modal adminModal modal-content\">\r\n                          <IconButton\r\n                            onClick={handleClose}\r\n                            className=\"close-button\"\r\n                            style={{ position: \"absolute\", top: 10, right: 10 }}\r\n                          >\r\n                            &times;\r\n                          </IconButton>\r\n\r\n                          <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h6\"\r\n                            component=\"h2\"\r\n                            style={{ color: \"#f3734c\", fontSize: \"30px\" }}\r\n                          >\r\n                            {selectedPlan &&\r\n                              HTMLReactParser(selectedPlan.static_page_title)}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          >\r\n                            {selectedPlan &&\r\n                              HTMLReactParser(\r\n                                selectedPlan.static_page_description\r\n                              )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Modal>\r\n                    </div>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"manageSubadminpart3\">\r\n                <div className=\"pagination\">\r\n                  <Stack spacing={2}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      color=\"primary\"\r\n                      page={currentPage}\r\n                      onChange={(event, page) => setCurrentPage(page)}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APTextPages;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["APTextPages","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","parseInt","currentPage","setCurrentPage","open","setOpen","selectedPlan","setSelectedPlan","handleClose","userAccess","setUserAccess","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","sortConfig","setSortConfig","direction","symbol","setSymbol","sortedAndFilteredData","array","query","filter","item","_item$static_page_tit","static_page_title","toLowerCase","includes","sort","a","b","sortAndFilterData","filteredData","_item$static_page_tit2","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","window","scrollTo","access","undefined","JSON","parse","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","min","class","onClick","handleColumnClick","scope","map","_userAccess$","status","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","slug","message","handleDeactivate","Tooltip","CheckIcon","handleActivate","BlockIcon","Edit","CreateIcon","RemoveRedEyeIcon","Modal","onClose","Box","IconButton","style","position","top","right","id","variant","component","HTMLReactParser","sx","mt","static_page_description","Stack","spacing","Pagination","count","page","onChange","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}