{"version":3,"file":"static/js/5736.caa205a3.chunk.js","mappings":"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","sources":["Components/jobseekersSide/JSChangePassword.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../element/Footer\";\r\nimport JSSidebar from \"./JSSidebar\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport PasswordStrengthBar from \"react-password-strength-bar\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst JSChangePassword = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [password, setPassword] = useState({\r\n    old_password: \"\",\r\n    new_password: \"\",\r\n    conf_password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    old_password: \"\",\r\n    new_password: \"\",\r\n    conf_password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n  const currentLanguage = Cookies.get(\"selectedLanguage\") || \"en\";\r\n\r\n  const [hoverFirstButtonColor, setHoverFirstButtonColor] = useState(false);\r\n\r\n  const handleFirstButtonMouseEnter = () => {\r\n    setHoverFirstButtonColor(true);\r\n  };\r\n\r\n  const handleFirstButtonMouseLeave = () => {\r\n    setHoverFirstButtonColor(false);\r\n  };\r\n\r\n  const [hoverSecondButtonColor, setHoverSecondButtonColor] = useState(false);\r\n\r\n  const handleSecondButtonMouseEnter = () => {\r\n    setHoverSecondButtonColor(true);\r\n  };\r\n\r\n  const handleSecondButtonMouseLeave = () => {\r\n    setHoverSecondButtonColor(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/jobseekerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (password.old_password === \"\") {\r\n        newErrors.old_password = t(\"jobseekerChangePassword.oldPassRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (password.new_password === \"\") {\r\n        newErrors.new_password = t(\"jobseekerChangePassword.newPassRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (password.conf_password === \"\") {\r\n        newErrors.conf_password = t(\"jobseekerChangePassword.confPassRequired\");\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (password.new_password) {\r\n        if (password.new_password.length < 8) {\r\n          newErrors.new_password = t(\"jobseekerChangePassword.passLengthError\");\r\n        }\r\n      }\r\n      if (password.conf_password) {\r\n        if (password.conf_password.length < 8) {\r\n          newErrors.conf_password = t(\r\n            \"jobseekerChangePassword.passLengthError\"\r\n          );\r\n        }\r\n      }\r\n      if (password.new_password && password.conf_password) {\r\n        if (password.new_password !== password.conf_password) {\r\n          newErrors.conf_password = t(\"jobseekerChangePassword.passMatchError\");\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: t(\"jobseekerChangePassword.confirmTitle\"),\r\n          text: t(\"jobseekerChangePassword.confirmTxt\"),\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: t(\"jobseekerChangePassword.yes\"),\r\n          cancelButtonText: t(\"jobseekerChangePassword.no\"),\r\n        });\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const updatedData = {\r\n            ...password,\r\n            language: currentLanguage,\r\n          };\r\n          const response = await axios.post(\r\n            BaseApi + \"/candidates/changePassword\",\r\n            updatedData, // Pass null as the request body if not required\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n              },\r\n            }\r\n          );\r\n          setLoading(false);\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: t(\"jobseekerChangePassword.successTxt\"),\r\n              icon: \"success\",\r\n              confirmButtonText: t(\"jobseekerChangePassword.close\"),\r\n            });\r\n            navigate(\"/candidates/myaccount\");\r\n          } else if (response.data.status === 400) {\r\n            // setLoading(false);\r\n            Cookies.remove(\"tokenClient\");\r\n            Cookies.remove(\"user_type\");\r\n            Cookies.remove(\"fname\");\r\n            navigate(\"/\");\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"warning\",\r\n              confirmButtonText: t(\"searchJobPage.close\"),\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"warning\",\r\n              confirmButtonText: t(\"searchJobPage.close\"),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      Swal.fire({\r\n        title: t(\"jobseekerChangePassword.failedTxt\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"jobseekerChangePassword.close\"),\r\n      });\r\n      console.log(\"Couldn't change jobseeker password\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPassword((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"container changePassword editProfile\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <JSSidebar />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-lg-9 mb-5\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"d-flex mx-3\">\r\n                  <img src=\"/Images/employerSide/icon9color.png\" alt=\"\" />\r\n                  <h3 className=\"mx-2\">\r\n                    {t(\"jobseekerChangePassword.changeYourPassword\")}\r\n                  </h3>\r\n                </div>\r\n                <form>\r\n                  <div className=\"mb-5 mt-5\">\r\n                    <div class=\"form-outline mb-5 DashBoardInputBx\">\r\n                      <label class=\"form-label\" for=\"form3Example1\">\r\n                        {t(\"jobseekerChangePassword.oldPassword\")}{\" \"}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"form3Example1\"\r\n                        className={`form-control ${\r\n                          errors.old_password && \"input-error\"\r\n                        }`}\r\n                        placeholder={t(\"jobseekerChangePassword.oldPassword\")}\r\n                        value={password.old_password}\r\n                        name=\"old_password\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.old_password && (\r\n                        <div className=\"text-danger\">{errors.old_password}</div>\r\n                      )}\r\n                    </div>\r\n                    <div class=\"form-outline mb-5 DashBoardInputBx\">\r\n                      <label class=\"form-label\" for=\"form3Example3\">\r\n                        {t(\"jobseekerChangePassword.newPassword\")}{\" \"}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"form3Example3\"\r\n                        className={`form-control ${\r\n                          errors.new_password && \"input-error\"\r\n                        }`}\r\n                        placeholder={t(\"jobseekerChangePassword.newPassword\")}\r\n                        value={password.new_password}\r\n                        name=\"new_password\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.new_password && (\r\n                        <div className=\"text-danger\">{errors.new_password}</div>\r\n                      )}\r\n                      {password.new_password && (\r\n                        <PasswordStrengthBar password={password.new_password} />\r\n                      )}{\" \"}\r\n                    </div>\r\n                    <div class=\"form-outline mb-5 DashBoardInputBx\">\r\n                      <label class=\"form-label\" for=\"form3Example3\">\r\n                        {t(\"jobseekerChangePassword.confirmPassword\")}{\" \"}\r\n                        <span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"form3Example3\"\r\n                        className={`form-control ${\r\n                          errors.conf_password && \"input-error\"\r\n                        }`}\r\n                        placeholder={t(\r\n                          \"jobseekerChangePassword.confirmPassword\"\r\n                        )}\r\n                        value={password.conf_password}\r\n                        name=\"conf_password\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.conf_password && (\r\n                        <div className=\"text-danger\">\r\n                          {errors.conf_password}\r\n                        </div>\r\n                      )}\r\n                      {password.conf_password && (\r\n                        <PasswordStrengthBar\r\n                          password={password.conf_password}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1 mx-3\"\r\n                    onClick={handleClick}\r\n                    style={{\r\n                      backgroundColor: hoverFirstButtonColor\r\n                        ? secondaryColor\r\n                        : primaryColor,\r\n                      border: hoverFirstButtonColor\r\n                        ? secondaryColor\r\n                        : primaryColor,\r\n                    }}\r\n                    onMouseEnter={handleFirstButtonMouseEnter}\r\n                    onMouseLeave={handleFirstButtonMouseLeave}\r\n                  >\r\n                    {t(\"jobseekerChangePassword.updateButton\")}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    style={{\r\n                      color: hoverSecondButtonColor\r\n                        ? primaryColor\r\n                        : secondaryColor,\r\n                      backgroundColor: \"white\",\r\n                      border: hoverSecondButtonColor\r\n                        ? `2px solid ${primaryColor}`\r\n                        : `2px solid ${secondaryColor}`,\r\n                    }}\r\n                    onMouseEnter={handleSecondButtonMouseEnter}\r\n                    onMouseLeave={handleSecondButtonMouseLeave}\r\n                    onClick={() => navigate(\"/candidates/myaccount\")}\r\n                  >\r\n                    {t(\"jobseekerChangePassword.cancelButton\")}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSChangePassword;\r\n"],"names":["JSChangePassword","loading","setLoading","useState","password","setPassword","old_password","new_password","conf_password","errors","setErrors","navigate","useNavigate","tokenKey","Cookies","primaryColor","secondaryColor","t","i18n","useTranslation","currentLanguage","hoverFirstButtonColor","setHoverFirstButtonColor","hoverSecondButtonColor","setHoverSecondButtonColor","useEffect","window","scrollTo","handleChange","e","name","value","target","prev","_jsxs","_Fragment","children","_jsx","NavBar","className","JSSidebar","style","borderLeft","borderRight","src","alt","class","for","type","id","placeholder","onChange","PasswordStrengthBar","onClick","async","newErrors","length","Object","keys","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","updatedData","language","response","axios","BaseApi","headers","key","ApiKey","token","data","status","message","error","setTimeout","location","reload","console","log","backgroundColor","border","onMouseEnter","handleFirstButtonMouseEnter","onMouseLeave","handleFirstButtonMouseLeave","color","handleSecondButtonMouseEnter","handleSecondButtonMouseLeave","Footer"],"sourceRoot":""}