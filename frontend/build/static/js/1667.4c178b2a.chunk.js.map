{"version":3,"file":"static/js/1667.4c178b2a.chunk.js","mappings":"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","sources":["Components/jobseekersSide/JSVideoCV.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../element/Footer\";\r\nimport JSSidebar from \"./JSSidebar\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst JSVideoCV = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [video, setVideo] = useState(\"\");\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/addVideoCv\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setVideo(response.data.response.path);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get video data\");\r\n    }\r\n  };\r\n\r\n  const handleVideoRemove = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: t(\"jobseekerVideoCV.confirmTitleVideoRemove\"),\r\n        text: t(\"jobseekerVideoCV.confirmTxtVideoRemove\"),\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: t(\"jobseekerVideoCV.yes\"),\r\n        cancelButtonText: t(\"jobseekerVideoCV.no\"),\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/candidates/deleteVideo\",\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        setLoading(false);\r\n        getData();\r\n        Swal.fire({\r\n          title: t(\"jobseekerVideoCV.successTxtVideoRemove\"),\r\n          icon: \"success\",\r\n          confirmButtonText: t(\"jobseekerVideoCV.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      Swal.fire({\r\n        title: t(\"jobseekerVideoCV.failedTxtVideoRemove\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"jobseekerVideoCV.close\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    // Check if the file size is greater than 20MB\r\n    if (file.size > 20 * 1024 * 1024) {\r\n      // Convert MB to bytes\r\n      Swal.fire({\r\n        title: t(\"jobseekerVideoCV.fileSizeExceeded\"),\r\n        icon: \"warning\",\r\n        confirmButtonText: t(\"jobseekerVideoCV.close\"),\r\n      });\r\n      e.target.value = \"\";\r\n      return; // Stop execution\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"video\", file);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/addVideoCv\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setVideo(response.data.response.path);\r\n      Swal.fire({\r\n        title: t(\"jobseekerVideoCV.successTxtVideoUpload\"),\r\n        icon: \"success\",\r\n        confirmButtonText: t(\"jobseekerVideoCV.close\"),\r\n      });\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      Swal.fire({\r\n        title: t(\"jobseekerVideoCV.failedTxtVideoUpload\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"jobseekerVideoCV.close\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/jobseekerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"container editProfile\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <JSSidebar />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-lg-9 mb-5\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"mx-3 d-flex PageHeader\">\r\n                  <img src=\"/Images/employerSide/icon8color.png\" alt=\"\" />\r\n                  <h3 className=\"\">{t(\"jobseekerVideoCV.videoCV\")}</h3>\r\n                </div>\r\n                <form>\r\n                  <div className=\"mb-5 mt-5 mx-4\">\r\n                    <div className=\"form-outline mb-4 DashBoardInputBx\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                        {t(\"jobseekerVideoCV.addVideoFile\")}\r\n                      </label>\r\n                      <input\r\n                        type=\"file\"\r\n                        className=\"form-control\"\r\n                        id=\"formFile\"\r\n                        name=\"video\"\r\n                        accept=\".mp4, .3gp, .avi, .mov\"\r\n                        onChange={(e) => handleFileUpload(e)}\r\n                      />\r\n                      <div id=\"emailHelp\" className=\"form-text\">\r\n                        {t(\"jobseekerVideoCV.belowTxt\")}\r\n                      </div>\r\n                    </div>\r\n                    {video && (\r\n                      <div className=\"form-outline mb-5 DashBoardInputBx\">\r\n                        <label htmlFor=\"formFile\" className=\"form-label\">\r\n                          {t(\"jobseekerVideoCV.uploadedVideo\")}\r\n                        </label>\r\n                        <div className=\"ChoosPlanBx checkCertificate\">\r\n                          <div className=\"EPJobseekerCertificatesDetails EPJobseekerVidio\">\r\n                            <ul>\r\n                              <li>\r\n                                <i\r\n                                  className=\"fa-regular fa-circle-xmark jsprofileCross\"\r\n                                  onClick={handleVideoRemove}\r\n                                ></i>\r\n                                <i>\r\n                                  <ReactPlayer\r\n                                    url={video}\r\n                                    controls={true}\r\n                                    width={250}\r\n                                    height={250}\r\n                                    allowfullscreen={true}\r\n                                  />\r\n                                </i>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSVideoCV;\r\n"],"names":["JSVideoCV","loading","setLoading","useState","video","setVideo","tokenKey","Cookies","t","i18n","useTranslation","navigate","useNavigate","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","data","path","error","message","Swal","title","icon","confirmButtonText","setTimeout","window","location","reload","console","log","useEffect","scrollTo","_jsxs","_Fragment","children","_jsx","NavBar","className","JSSidebar","style","borderLeft","borderRight","src","alt","htmlFor","type","id","name","accept","onChange","e","file","target","files","size","value","formData","FormData","append","handleFileUpload","onClick","text","showCancelButton","cancelButtonText","isConfirmed","ReactPlayer","url","controls","width","height","allowfullscreen","Footer"],"sourceRoot":""}