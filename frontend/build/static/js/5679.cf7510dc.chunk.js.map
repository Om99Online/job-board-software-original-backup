{"version":3,"file":"static/js/5679.cf7510dc.chunk.js","mappings":"yUAeA,MA+NA,EA/NyBA,KACvB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,MAEDC,EAAQC,IAAaH,EAAAA,EAAAA,UAAS,CACnCC,KAAM,MAEDG,EAASC,IAAcL,EAAAA,EAAAA,WAAS,GACjCM,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WAEtBE,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,MAsHjB,OAZAC,EAAAA,EAAAA,YAAU,KAEHP,GA9FSQ,WACd,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,gCAA+BN,IAC1C,KACA,CACEO,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOf,EACPgB,QAASd,KAIfT,EAAYgB,EAASQ,KAAKR,SAC5B,CAAE,MAAOS,GACPC,QAAQC,IAAI,0CACd,GAkFEC,GACAC,OAAOC,SAAS,EAAG,IAJnBpB,EAAS,SAKX,GACC,CAACH,EAAUG,KAGZqB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAEThC,GACC6B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYE,KAAK,eAAcL,UAC5CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMpC,EAAS,2BAA2BuB,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMpC,EAAS,qBAAqBuB,SAC9C,gBAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IACPpC,EAAU,8BAA6BE,KACxCqB,SAEAlC,EAASgD,kBAGZb,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACH,MAAM,eAAcZ,SAAC,2BAIrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,sBACjCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAWH,UACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKkB,MAAM,wBAAuBhB,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOmB,IAAI,WAAWD,MAAM,aAAYhB,SAAA,CAAC,qBACtBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE7CC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBAAejC,EAAOD,MAAQ,gBAC1CA,KAAK,OACLmD,YAAY,mBACZC,MAAOvD,EAASG,KAChBqD,SAhLEC,IACpB,MAAM,KAAEtD,EAAI,MAAEoD,GAAUE,EAAEC,OAC1BzD,GAAa0D,IAAI,IACZA,EACH,CAACxD,GAAOoD,MAEVlD,GAAWsD,IAAI,IACVA,EACH,CAACxD,GAAO,MACP,IAyKcC,EAAOD,OACNgC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAE9B,EAAOD,WAIzCgC,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLf,UAAU,0BACVU,QA1JE/B,UAClB,IACE,MAAM,KAAEb,GAASH,EAEjB,IAAKG,EAIH,YAHAE,EAAU,CACRF,KAAMA,EAAO,GAAK,kCActB,UATiCyD,IAAAA,KAAU,CACzCC,MAAO,mBACPC,KAAM,mCACNC,KAAM,WACNC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,QAGGC,YAAa,CAClC5D,GAAW,GAEX,MAAMU,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,gCAA+BN,IAC1Cb,EACA,CACEoB,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOf,EACPgB,QAASd,KAKfH,GAAW,GAEkB,MAAzBU,EAASQ,KAAK2C,QAChBR,IAAAA,KAAU,CACRC,MAAO,6BACPE,KAAM,UACNE,kBAAmB,UASrBtD,EAAU,8BAA6BE,MAEvC+C,IAAAA,KAAU,CACRC,MAAO5C,EAASQ,KAAK4C,QACrBN,KAAM,QACNE,kBAAmB,SAGzB,CACF,CAAE,MAAOvC,GACPnB,GAAW,GACXqD,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAM,qDACNC,KAAM,QACNE,kBAAmB,UAErBtC,QAAQC,IAAI,6BAA8BF,EAC5C,GAqFqCQ,SACtB,UAGDC,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLf,UAAU,0BACVU,QAASA,IAAM9C,EAAY,IAAID,EAAUG,KAAM,KAAK+B,SACrD,mBAMPC,EAAAA,EAAAA,KAACmC,EAAAA,EAAQ,YAKd,C","sources":["Components/adminpanel/Categories/APAddSubCategory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangeUsername = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/subcategory/admin_add/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const { name } = userData;\r\n\r\n      if (!name) {\r\n        setErrors({\r\n          name: name ? \"\" : \"Sub Category Name is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Add Sub-Category\",\r\n        text: \"Do you want to add Sub-Category?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/subcategory/admin_add/${slug}`,\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Sub-Category successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // getData();\r\n          // setUserData({\r\n          //   ...userData,\r\n          //   new_username: \"\",\r\n          //   conf_username: \"\",\r\n          // });\r\n          // window.scrollTo(0, 0)\r\n          navigate(`/admin/categories/subindex/${slug}`);\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update username. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/categories\")}\r\n                  >\r\n                    Categories\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() =>\r\n                      navigate(`/admin/categories/subindex/${slug}`)\r\n                    }\r\n                  >\r\n                    {userData.cateogory_name}\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Add Sub Category</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Add Sub Category</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Sub Category Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.name && \"input-error\"}`}\r\n                      name=\"name\"\r\n                      placeholder=\"Add Sub Category\"\r\n                      value={userData.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => setUserData({...userData, name: \"\"})}\r\n                  >\r\n                    RESET\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangeUsername;\r\n"],"names":["APChangeUsername","userData","setUserData","useState","name","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","cateogory_name","Typography","class","for","type","id","placeholder","value","onChange","e","target","prev","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}