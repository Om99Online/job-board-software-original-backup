{"version":3,"file":"static/js/2958.433b9368.chunk.js","mappings":"8VAkBA,MA2jBA,EA3jB4BA,KAC1B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,KAC9CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,KAC9CK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,CACnDO,QAAS,GACTC,eAAgB,MAEXC,EAAkBC,IAAuBV,EAAAA,EAAAA,UAAS,KAClDW,EAAoBC,IAAyBZ,EAAAA,EAAAA,UAAS,KACtDa,EAAYC,IAAiBd,EAAAA,EAAAA,UAAS,IACvCe,EAAWC,EAAAA,EAAAA,IAAY,eACvBC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAAA,EAAAA,IAAY,aAC7B,IAAII,EAAeJ,EAAAA,EAAAA,IAAY,gBAC3BK,EAAiBL,EAAAA,EAAAA,IAAY,kBAC7BM,EAAeN,EAAAA,EAAAA,IAAY,YAC3BO,EAAOP,EAAAA,EAAAA,IAAY,QAGnBQ,EAAiB,GAErB,MAKOC,EAASC,IAAc1B,EAAAA,EAAAA,WAAS,IAChC2B,EAAOC,IAAY5B,EAAAA,EAAAA,UAAS,MAc/ByB,IAIFI,IAAAA,KAAU,CACRC,MAAO,+BACPC,KAAM,wEACNC,KAAM,UACNC,kBAAmB,UAEJ,cAAbd,GACFF,EAAS,yBAEM,cAAbE,GACFF,EAAS,mBAEXiB,YAAW,WACTC,OAAOC,SAASC,QAClB,GAAG,KACHX,GAAW,IAGTC,GAEFE,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAMJ,EACNK,KAAM,QACNC,kBAAmB,UA0BvB,IAAIK,EAAc,CAChB/B,QAAS,GACTC,eAAgB,IA4ClB,MAAM+B,EAAmBC,UAEvBC,QAAQC,IAAIC,EAAS,6BACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAU,yBACVH,EACA,CACEI,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnC,KAIb,GAA6B,MAAzB6B,EAASO,KAAKC,OAAgB,CAChC5B,EAAiBoB,EAASO,KAAKP,SAASS,KACxC,MAAMC,EA/BZ,WACE,MAAMC,EACJ,iEAEF,IAAIC,EAAW,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAHC,GAGaA,IAAK,CACjC,MAAMC,EAAcC,KAAKC,MAAsBL,GAAhBI,KAAKE,UACpCL,GAAYD,EAAWO,OAAOJ,EAChC,CAEA,OAAOF,CACT,CAmBkCO,GAC5BtB,QAAQC,IAAIY,GACZU,EAAiBV,GACjBzB,IAAAA,KAAU,CACRC,MAAO,YACPC,KAAM,wEACNC,KAAM,UACNC,kBAAmB,UAEJ,cAAbd,GACFF,EAAS,yBAEM,cAAbE,GACFF,EAAS,kBAEb,CACAwB,QAAQC,IAAIlB,EAId,CAAE,MAAOG,GACPc,QAAQC,IAAIf,EACd,GAGF,IAAIsC,EACJ,MAmBOC,EAAmBC,IAAwBnE,EAAAA,EAAAA,UAAS,CACzDoE,eAAgB,KAElB,IAAIC,EAAgB,CAClBD,eAAgB,IAElB,MAAOE,EAAqBC,IAA0BvE,EAAAA,EAAAA,UAAS,IACzDgE,EAAmBxB,UACvB,IAEE,GAAIgC,EAAS,CACX,IAAIC,EAAcjD,EAClB6C,EAAcD,eAAiBI,EAE/B,MAAM5B,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,6BAA4B2B,IACvCJ,EACA,CACEtB,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnC,KAIbwD,EAAuB3B,EAASO,KAAKP,SACvC,MACEH,QAAQC,IAAI,8BAEhB,CAAE,MAAOf,GACPc,QAAQC,IAAI,8BACd,GAGIgC,EAAmBlC,UACvBC,QAAQC,IAAI,oBAAoB,EAelC,OAZAiC,EAAAA,EAAAA,YAAU,KAEH5D,GA1KSyB,WACd,IACEzC,GAAW,GACX,MAAM6C,QAAiBC,EAAAA,EAAAA,KAAWC,EAAAA,EAAU,kBAAmB,KAAM,CACnEC,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnC,KAGXhB,GAAW,GACXG,EAAkB0C,EAASO,KAAKP,SAASgC,MACzCxE,EAAkBwC,EAASO,KAAKP,SAASgC,MACzChE,EAAsBT,GACtBW,EAAc8B,EAASO,KAAKP,SAASiC,OAEvC,CAAE,MAAOlD,GACP5B,GAAW,GACX0C,QAAQC,IAAI,sCACd,GA4JEoC,GACA3C,OAAO4C,SAAS,EAAG,IAJnB9D,EAAS,sBAKX,GACC,CAACF,EAAUE,KAGZ+D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,2BAA0BH,SAAA,EAGvCC,EAAAA,EAAAA,KAAA,OACEG,MAAM,6BACNC,GAAG,eACHC,SAAS,KACT,kBAAgB,oBAChB,cAAY,OAAMN,UAElBC,EAAAA,EAAAA,KAAA,OAAKG,MAAM,eAAcJ,UACvBF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,gBAAeJ,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKM,MAAM,eAAcJ,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAIG,MAAM,mBAAmBC,GAAG,oBAAmBL,SAAC,2BAGpDC,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLH,MAAM,YACN,kBAAgB,QAChB,aAAW,cAGfN,EAAAA,EAAAA,MAAA,OAAKM,MAAM,aAAYJ,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,2GAI5BF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qDAAoDH,SAAA,EACjEF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,aAAaK,QAAQ,gBAAeR,SAAA,CAAC,kBACtCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE1CF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,0BAAyBH,SAAA,EACtCC,EAAAA,EAAAA,KAAA,UACEE,UAAU,0BACV,kBAAgB,QAChB,aAAW,QACXM,QAASA,IACP1E,EAAU,0BAAyBgD,KACpCiB,SACF,YAGDC,EAAAA,EAAAA,KAAA,UACEI,GAAG,gBACHE,KAAK,SACLJ,UAAU,0BAAyBH,UAEnCC,EAAAA,EAAAA,KAACS,EAAAA,GAAoB,CACnBC,QAAS,CACP,YAAaC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,2BACzBC,SAAU1E,GACV4D,UAEFC,EAAAA,EAAAA,KAACc,EAAAA,GAAa,CACZC,MAAO,CACLC,MAAO,SACPC,OAAQ,aACRC,OAAQ,GACRC,SAAS,EACTC,MAAO,QAETZ,QAASA,CAACxC,EAAMqD,KACdlE,EAAY/B,QACVkG,eAAeC,QAAQ,UACzBpE,EAAY9B,eAAiB,SA9N5BgC,WAEzBC,QAAQC,IAAIC,EAAS,6BACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAU,yBACVH,EACA,CACEI,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnC,KAIgB,MAAzB6B,EAASO,KAAKC,SAChB5B,EAAiBoB,EAASO,KAAKP,SAASS,MAE1CZ,QAAQC,IAAIlB,EAId,CAAE,MAAOG,GACPc,QAAQC,IAAIf,EACd,GAuMwBgF,CAAmBrE,GAUjB,OAAOkE,EAAQI,SACjB,EAEFC,YAAaA,CAAC1D,EAAMqD,IACXA,EAAQM,MAAMC,OAAO,CAC1BC,eAAgB,CACd,CACEC,YACER,eAAeC,QAAQ,YACzBQ,OAAQ,CACNC,cAAe7F,EACf8F,MAAOX,eAAeC,QAAQ,mBAMxCW,UAAW7E,MAAOW,EAAMqD,KACtB,MAAMM,QAAcN,EAAQM,MAAMQ,UAClC7E,QAAQC,IAAIoE,EAAO,SACE,cAAjBA,EAAM1D,OACRY,EAAiB8C,EAAMvB,IAEvBb,IAGYvB,EAAKqB,QAtU3C9C,GAAW,EAsUwC,EAE7B6F,SAAUA,KAERC,MAAM,sBACN9C,GAAkB,EAEpB+C,QAAUC,IACR9F,EAAS8F,GACTjF,QAAQd,MAAM,wBAAyB+F,EAAI,eAOvDvC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,2BAQvBL,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,SACV,aAAZ/D,GAA0BgE,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,KAAMxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAO,MAEpD9H,GACCqF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAEfF,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,OACEK,UAAU,6BACVa,MAAO,CACL2B,WAAY,oBACZC,YAAa,qBACb5C,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,oBAAmBH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAK4C,IAAI,sCAAsCC,IAAI,MACnD7C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,iCAGvBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,MAAKH,SACjBjF,EAAegI,KAAKxE,IAEjB0B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAeH,UAC5BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sCAAqCH,UAClDC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMH,UACnBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qBAAoBH,SAAA,EACjCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,8BAA6BH,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAKzB,EAAEyE,aACPlD,EAAAA,EAAAA,MAAA,MACEkB,MAAO,CACLC,MAAO/E,GACP8D,SAAA,CAED3D,EAAK,IAAEkC,EAAEyD,WAEZ/B,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAEzB,EAAE0E,eAGJ,IAArB1E,EAAE2E,iBACDjD,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CACHhD,UAAU,oBACVa,MAAO,CACLoC,gBAAiBjH,EACjBkH,OAAQlH,GAIV6D,SACD,iBAKoB,IAArBzB,EAAE2E,iBACC3E,EAAEyD,QAAU,GACX/B,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CACHhD,UAAU,kBACVa,MAAO,CACLoC,gBAAiBlH,EACjBmH,OAAQnH,GAIVuE,QAASA,KACP6C,OA7PhBjD,EA8PkB9B,EAAElD,QACFkD,EAAEyD,OACFzD,EAAEuC,SACFvC,EAAEyE,UAhQ5C5F,EAAY/B,QAAUgF,EACtBjD,EAAY9B,eAAiB,cAC7B+B,EAAiBD,GAHMkG,IAACjD,CAmQe,EAAAL,SACF,qBAKHC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CACHhD,UAAU,kBACV,iBAAe,QACf,iBAAe,gBACfa,MAAO,CACLoC,gBAAiBlH,EACjBmH,OAAQnH,GAEVuE,QAASA,KACP8C,OAhSvBlD,EAiSyB9B,EAAElD,QAjSvB2G,EAkSqBzD,EAAEyD,OAlSflB,EAmSavC,EAAEuC,SAnSLkC,EAoSGzE,EAAEyE,UAnS5CzB,eAAeiC,QAAQ,SAAUnD,GACjCkB,eAAeiC,QAAQ,aAAcxB,GACrCT,eAAeiC,QAAQ,eAAgB1C,GACvCS,eAAeiC,QAAQ,WAAYR,GACnCjE,EAASsB,OAGT9C,QAAQC,IAAI+D,eAAeC,QAAQ,UAAW,mBAR9B+B,IAAClD,EAAI2B,EAAQlB,EAAUkC,CAsSA,EAAAhD,SACF,sBAeTF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gCAA+BH,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,SACEM,KAAK,WACLJ,UAAU,mBACVE,GAAG,sBAELJ,EAAAA,EAAAA,KAAA,SACEE,UAAU,mBACVsD,IAAI,mBAAkBzD,SACvB,uBAGDC,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CACNC,UAAU,MACVC,SACE9D,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,sCACgC,KACpCC,EAAAA,EAAAA,KAAA,SAAM,iCAENA,EAAAA,EAAAA,KAAA,SAAM,sCACNA,EAAAA,EAAAA,KAAA,SAAM,wCAETD,UAEDC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGG,MAAM,yCAIfH,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIE,UAAU,kBAAiBH,SAC5BzB,EAAEsF,SAASd,KAAKe,IAEb7D,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACG8D,EAAEC,OACCC,EAAAA,EAAAA,IAAgBF,EAAEC,OAClB,IACJ9D,EAAAA,EAAAA,KAACyD,EAAAA,EAAO,CACNC,UAAU,MACVC,SACE3D,EAAAA,EAAAA,KAAA,QAAAD,SACG8D,EAAEG,OACCD,EAAAA,EAAAA,IAAgBF,EAAEG,OAClB,KAEPjE,UAEDC,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGG,MAAM,yEAsBjDH,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,MACN,C,8JChkBP,MAgiBA,EAhiBgBxB,KACd,MAAM7G,EAAWC,EAAAA,EAAAA,IAAY,eACvBC,GAAWC,EAAAA,EAAAA,OACVmI,EAAGC,IAAQC,EAAAA,EAAAA,IAAe,WAE1BC,EAAqBC,IAA0BzJ,EAAAA,EAAAA,WAAS,IACxD0J,EAAyBC,IAA8B3J,EAAAA,EAAAA,WAAS,IASvE2E,EAAAA,EAAAA,YAAU,KAWR,MAAMiF,EAAqBA,KACrBzH,OAAO0H,WAAa,KAEtB1H,OAAOC,SAASC,QAClB,EAUF,OAHAF,OAAO2H,iBAAiB,SAAUF,GAG3B,KACLzH,OAAO4H,oBAAoB,SAAUH,EAAmB,CACzD,GACA,IAEH,IAAII,EAAc7H,OAAO0H,WAEzB,MAAMI,EAAezH,UACnB,IASE,UARiCX,IAAAA,KAAU,CACzCC,MAAOuH,EAAE,gCACTtH,KAAMsH,EAAE,8BACRrH,KAAM,WACNkI,kBAAkB,EAClBjI,kBAAmBoH,EAAE,uBACrBc,iBAAkBd,EAAE,yBAECe,YAAa,OACXvH,EAAAA,EAAAA,KAAWC,EAAAA,EAAU,gBAAiB,KAAM,CACjEC,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnC,KAGXC,EAAAA,EAAAA,OAAe,eACfA,EAAAA,EAAAA,OAAe,aACfA,EAAAA,EAAAA,OAAe,SAEfC,EAAS,KACKY,IAAAA,MAAW,CACvBwI,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAUL,IACRA,EAAMP,iBAAiB,aAAcjI,IAAAA,WACrCwI,EAAMP,iBAAiB,aAAcjI,IAAAA,YAAiB,IAIpD8I,KAAK,CACT3I,KAAM,UACNF,MAAOuH,EAAE,iCAEb,CACF,CAAE,MAAO1H,GACPE,IAAAA,KAAU,CACRC,MAAOuH,EAAE,+BACTrH,KAAM,QACNC,kBAAmBoH,EAAE,2BAEvB5G,QAAQC,IAAI,iBACd,GAqDF,OACEyC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,SACG8E,EAAc,KACbhF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uBAAsBH,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKmE,EAAE,iCACPlE,EAAAA,EAAAA,KAAA,MAAIe,MAAO,CAAEqC,OAAQ,oCAEvBvD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,SAAQH,SAAA,EACrBF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAACuC,GAAG,kBAAkBvF,UAAU,2BAA0BH,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kCAAiCH,UAC9CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,mCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAACuC,GAAG,kBAAkBvF,UAAU,4BAA2BH,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,oCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,uBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,wCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,sBACHvF,UAAU,+BAA8BH,SAAA,EAExCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sCAAqCH,UAClDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,uCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,yBACHvF,UAAU,4BAA2BH,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,gDAIpCrE,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uBAAsBH,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gBAAeH,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKmE,EAAE,kCACPlE,EAAAA,EAAAA,KAAA,MAAIe,MAAO,CAAEqC,OAAQ,oCAEvBvD,EAAAA,EAAAA,MAAA,OAAKK,UAAU,OAAMH,SAAA,EACnBF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,oBACHvF,UAAU,8BAA6BH,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,qCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAACuC,GAAG,kBAAkBvF,UAAU,4BAA2BH,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,mCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,oBACHvF,UAAU,8BAA6BH,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,qCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,uBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,wCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,mBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,oCAEhCrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAAChD,UAAU,yBAAwBH,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gCAA+BH,UAC5CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYM,QAASsE,EAAa/E,SAChDmE,EAAE,gCAGLrE,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAACuC,GAAG,sBAAsBvF,UAAU,4BAA2BH,SAAA,EAClEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,gDAMtCrE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uBAAsBH,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUH,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,oBAAmBH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAKmE,EAAE,iCACPlE,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAAChD,UAAU,kBAAkBM,QArThCkF,KACdpB,GAAwBD,EAAoB,EAoTmBtE,SAChDsE,GACCrE,EAAAA,EAAAA,KAAA,KAAGG,MAAM,8BAETH,EAAAA,EAAAA,KAAA,KAAGG,MAAM,kCAIfH,EAAAA,EAAAA,KAAA,MAAIe,MAAO,CAAEqC,OAAQ,oCAEvBpD,EAAAA,EAAAA,KAAA,OAAKE,UAAY,WAASmE,EAAsB,OAAS,IAAKtE,UAC5DF,EAAAA,EAAAA,MAAA,MACEkB,MAAO,CACL4E,QAAStB,EAAsB,QAAU,QAEzCtE,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,kBACHvF,UAAU,2BAA0BH,SAAA,EAEpCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kCAAiCH,UAC9CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,qCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,kBACHvF,UAAU,4BAA2BH,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,sCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,uBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,0CAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,sBACHvF,UAAU,+BAA8BH,SAAA,EAExCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sCAAqCH,UAClDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,yCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,yBACHvF,UAAU,4BAA2BH,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,oDAMxCrE,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uBAAsBH,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,gBAAeH,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,oBAAmBH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAKmE,EAAE,kCACPlE,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAAChD,UAAU,kBAAkBM,QArZhCoF,KACdpB,GAA4BD,EAAwB,EAoZWxE,SAChDwE,GACCvE,EAAAA,EAAAA,KAAA,KAAGG,MAAM,8BAETH,EAAAA,EAAAA,KAAA,KAAGG,MAAM,kCAIfH,EAAAA,EAAAA,KAAA,MAAIe,MAAO,CAAEqC,OAAQ,oCAEvBpD,EAAAA,EAAAA,KAAA,OAAKE,UAAY,WAASqE,EAA0B,OAAS,IAAKxE,UAChEF,EAAAA,EAAAA,MAAA,MACEkB,MAAO,CACL4E,QAASpB,EAA0B,QAAU,QAC7CxE,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,oBACHvF,UAAU,8BAA6BH,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,uCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,kBACHvF,UAAU,4BAA2BH,SAAA,EAErCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,qCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,oBACHvF,UAAU,8BAA6BH,SAAA,EAEvCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qCAAoCH,UACjDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,uCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,uBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,sCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,0CAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CACHuC,GAAG,mBACHvF,UAAU,6BAA4BH,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,oCAAmCH,UAChDC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SAAEmE,EAAE,sCAGlClE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAAChD,UAAU,yBAAwBH,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gCAA+BH,UAC5CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAYM,QAASsE,EAAa/E,SAChDmE,EAAE,kCAIPlE,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACqD,EAAAA,GAAI,CAACuC,GAAG,sBAAsBvF,UAAU,4BAA2BH,SAAA,EAClEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,mCAAkCH,UAC/CC,EAAAA,EAAAA,KAAA,OACEE,UAAU,GACV0C,IAAI,uCACJC,IAAI,QAGR7C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,SACzBmE,EAAE,oDAShB,C","sources":["Components/employersSide/InnerMembershipPlan.js","Components/employersSide/Sidebar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Footer from \"../element/Footer\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\nimport Tooltip from \"rc-tooltip\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport JSSidebar from \"../jobseekersSide/JSSidebar\";\r\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport Cookies from \"js-cookie\";\r\nimport Paypalcheckout from \"../element/Paypalcheckout\";\r\nimport Swal from \"sweetalert2\";\r\nimport { PayPalScriptProvider } from \"@paypal/react-paypal-js\";\r\n\r\nconst InnerMembershipPlan = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [membershipData, setMembershipData] = useState([]);\r\n  const [membershipPlan, setMembershipPlan] = useState([]);\r\n  const [sendPlanDetail, setSendPlanDetail] = useState({\r\n    plan_id: \"\",\r\n    payment_option: \"\",\r\n  });\r\n  const [prePaymentDetail, setPrePaymentDetail] = useState([]);\r\n  const [membershipFeatures, setMembershipFeatures] = useState([]);\r\n  const [paypalData, setPaypalData] = useState([]);\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const navigate = useNavigate();\r\n  const userType = Cookies.get(\"user_type\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  let currencyCode = Cookies.get(\"currency\");\r\n  let curr = Cookies.get(\"curr\");\r\n\r\n  let paymentMethod = \"\";\r\n  let PrePaymentSlug = \"\";\r\n\r\n  const product = {\r\n    description: \"Testing purchase\",\r\n    price: 20.0,\r\n  };\r\n\r\n  const [paidFor, setPaidFor] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleApprove = (orderID) => {\r\n    // call backend to fulfill the order\r\n\r\n    // if response is success\r\n    setPaidFor(true);\r\n\r\n    // Refresh the users account for subscription status. Below\r\n\r\n    // If the response is error\r\n    // setError(\"your payment was processed successfully, however we are unable to fulfill your order. Please contact the support@domain.com\");\r\n  };\r\n\r\n  if (paidFor) {\r\n    // console.log(\"paid true\");\r\n\r\n    // display success message, modal or redirect user to success page.\r\n    Swal.fire({\r\n      title: \"Thank you for your purchase!\",\r\n      text: \"Your plan is activated and you can check it's details in your profle.\",\r\n      icon: \"success\",\r\n      confirmButtonText: \"Close\",\r\n    });\r\n    if (userType === \"candidate\") {\r\n      navigate(\"/candidates/myaccount\");\r\n    }\r\n    if (userType === \"recruiter\") {\r\n      navigate(\"/user/myprofile\");\r\n    }\r\n    setTimeout(function () {\r\n      window.location.reload();\r\n    }, 3000);\r\n    setPaidFor(false);\r\n  }\r\n\r\n  if (error) {\r\n    // display an error message, modal or redirewct the user to a error page.\r\n    Swal.fire({\r\n      title: \"Failed\",\r\n      text: error,\r\n      icon: \"error\",\r\n      confirmButtonText: \"Close\",\r\n    });\r\n  }\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(BaseApi + \"/plans/purchase\", null, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n          token: tokenKey,\r\n        },\r\n      });\r\n      setLoading(false);\r\n      setMembershipData(response.data.response.plan);\r\n      setMembershipPlan(response.data.response.plan);\r\n      setMembershipFeatures(membershipPlan);\r\n      setPaypalData(response.data.response.paypal);\r\n      // console.log(membershipFeatures);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Could not get membership plan data!\");\r\n    }\r\n  };\r\n\r\n  let planDetails = {\r\n    plan_id: \"\",\r\n    payment_option: \"\",\r\n  };\r\n\r\n  const paymentButtonClick = async (details) => {\r\n    // console.log(details);\r\n    console.log(details, \"From payment Button Click\");\r\n    try {\r\n      const response = await axios.post(\r\n        BaseApi + \"/payments/planpurchase\",\r\n        details,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      if (response.data.status === 200) {\r\n        PrePaymentSlug = response.data.response.slug;\r\n      }\r\n      console.log(PrePaymentSlug);\r\n      // console.log(response,\"resp\");\r\n      // console.log(response.data.status,\"status\");\r\n      // console.log(response.data.response.slug,\"slug\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  function generateRandomID() {\r\n    const characters =\r\n      \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    const idLength = 17;\r\n    let randomID = \"\";\r\n\r\n    for (let i = 0; i < idLength; i++) {\r\n      const randomIndex = Math.floor(Math.random() * characters.length);\r\n      randomID += characters.charAt(randomIndex);\r\n    }\r\n\r\n    return randomID;\r\n  }\r\n\r\n  const freePlanPurchase = async (details) => {\r\n    // console.log(details);\r\n    console.log(details, \"From payment Button Click\");\r\n    try {\r\n      const response = await axios.post(\r\n        BaseApi + \"/payments/planpurchase\",\r\n        details,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      if (response.data.status === 200) {\r\n        PrePaymentSlug = response.data.response.slug;\r\n        const randomTransactionID = generateRandomID();\r\n        console.log(randomTransactionID);\r\n        handleSuccessApi(randomTransactionID);\r\n        Swal.fire({\r\n          title: \"Activated\",\r\n          text: \"Your plan is activated and you can check it's details in your profle.\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        if (userType === \"candidate\") {\r\n          navigate(\"/candidates/myaccount\");\r\n        }\r\n        if (userType === \"recruiter\") {\r\n          navigate(\"/user/myprofile\");\r\n        }\r\n      }\r\n      console.log(PrePaymentSlug);\r\n      // console.log(response,\"resp\");\r\n      // console.log(response.data.status,\"status\");\r\n      // console.log(response.data.response.slug,\"slug\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  let planId;\r\n  const getPlanId = (id, amount, currency, plan_name) => {\r\n    sessionStorage.setItem(\"planid\", id);\r\n    sessionStorage.setItem(\"planAmount\", amount);\r\n    sessionStorage.setItem(\"planCurrency\", currency);\r\n    sessionStorage.setItem(\"planName\", plan_name);\r\n    planId = id;\r\n    // console.log(sessionStorage.getItem(\"planAmount\"),\"session storage\")\r\n\r\n    console.log(sessionStorage.getItem(\"planid\"), \"session storage\");\r\n    // console.log(sessionStorage.getItem(\"planCurrency\"),\"session storage\")\r\n    // console.log(sessionStorage.getItem(\"planName\"),\"session storage\")\r\n  };\r\n\r\n  const activateFreePlan = (id, amount, currency, plan_name) => {\r\n    planDetails.plan_id = id;\r\n    planDetails.payment_option = \"paypal\";\r\n    freePlanPurchase(planDetails);\r\n  };\r\n\r\n  const [postPaymentDetail, setPostPaymentDetail] = useState({\r\n    transaction_id: \"\",\r\n  });\r\n  let transactionID = {\r\n    transaction_id: \"\",\r\n  };\r\n  const [postPaymentResponse, setPostpaymentResponse] = useState([]);\r\n  const handleSuccessApi = async (orderID) => {\r\n    try {\r\n      // console.log(orderID);\r\n      if (orderID) {\r\n        var currentSlug = PrePaymentSlug;\r\n        transactionID.transaction_id = orderID;\r\n        // setPostPaymentDetail({ ...postPaymentDetail, transaction_id: orderID });\r\n        const response = await axios.post(\r\n          BaseApi + `/payments/checkoutSuccess/${currentSlug}`,\r\n          transactionID,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        setPostpaymentResponse(response.data.response);\r\n      } else {\r\n        console.log(\"Failed to generate order ID\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Error in handle success api\");\r\n    }\r\n  };\r\n\r\n  const handleFailureApi = async () => {\r\n    console.log(\"handleFailure api\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/employerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n\r\n      <div className=\"container membershipPlan\">\r\n        {/* Payment modal */}\r\n\r\n        <div\r\n          class=\"modal fade membershipModal\"\r\n          id=\"PaymentModal\"\r\n          tabindex=\"-1\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">\r\n                  Select Payment Method\r\n                </h1>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <h6 className=\"text-center\">\r\n                  This plan will apply from today and any remaining feature of\r\n                  the current plan will not carry forward.\r\n                </h6>\r\n                <div className=\"radioInput form-outline mb-5 DashBoardInputBx mt-5\">\r\n                  <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                    Payment Method<span className=\"RedStar\">*</span>\r\n                  </label>\r\n                  <div className=\"paymentOptionsAvailable\">\r\n                    <button\r\n                      className=\"btn stripePaymentButton\"\r\n                      data-bs-dismiss=\"modal\"\r\n                      aria-label=\"Close\"\r\n                      onClick={() =>\r\n                        navigate(`/payment/paymentoption/${planId}`)\r\n                      }\r\n                    >\r\n                      Stripe\r\n                    </button>\r\n                    <button\r\n                      id=\"paypal-button\"\r\n                      type=\"submit\"\r\n                      className=\"paypal-button-container\"\r\n                    >\r\n                      <PayPalScriptProvider\r\n                        options={{\r\n                          \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID,\r\n                          currency: currencyCode,\r\n                        }}\r\n                      >\r\n                        <PayPalButtons\r\n                          style={{\r\n                            color: \"silver\",\r\n                            layout: \"horizontal\",\r\n                            height: 48,\r\n                            tagline: false,\r\n                            shape: \"pill\",\r\n                          }}\r\n                          onClick={(data, actions) => {\r\n                            planDetails.plan_id =\r\n                              sessionStorage.getItem(\"planid\");\r\n                            planDetails.payment_option = \"paypal\";\r\n                            paymentButtonClick(planDetails);\r\n                            // Validate on button click, either on client or server side.\r\n                            const hasAlreadyBoughtPlan = false;\r\n\r\n                            if (hasAlreadyBoughtPlan) {\r\n                              setError(\r\n                                \"You already have this plan, Go to your profile to view the active plan.\"\r\n                              );\r\n                              return actions.reject();\r\n                            } else {\r\n                              return actions.resolve();\r\n                            }\r\n                          }}\r\n                          createOrder={(data, actions) => {\r\n                            return actions.order.create({\r\n                              purchase_units: [\r\n                                {\r\n                                  description:\r\n                                    sessionStorage.getItem(\"planName\"),\r\n                                  amount: {\r\n                                    currency_code: currencyCode,\r\n                                    value: sessionStorage.getItem(\"planAmount\"),\r\n                                  },\r\n                                },\r\n                              ],\r\n                            });\r\n                          }}\r\n                          onApprove={async (data, actions) => {\r\n                            const order = await actions.order.capture();\r\n                            console.log(order, \"Order\");\r\n                            if (order.status === \"COMPLETED\") {\r\n                              handleSuccessApi(order.id);\r\n                            } else {\r\n                              handleFailureApi();\r\n                            }\r\n\r\n                            handleApprove(data.orderID);\r\n                          }}\r\n                          onCancel={() => {\r\n                            // Display the cancel message, modal or redirect the user to the cancel page or back to the cart.\r\n                            alert(\"Payment cancelled.\");\r\n                            handleFailureApi();\r\n                          }}\r\n                          onError={(err) => {\r\n                            setError(err);\r\n                            console.error(\"Paypal checkout error\", err);\r\n                          }}\r\n                        />\r\n                      </PayPalScriptProvider>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            {userType == \"candidate\" ? <JSSidebar /> : <Sidebar />}\r\n          </div>\r\n          {loading ? (\r\n            <div className=\"loader-container\"></div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className=\"col-lg-9 mb-5 CLPanelRight\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"d-flex PageHeader\">\r\n                  <img src=\"/Images/employerSide/icon3color.png\" alt=\"\" />\r\n                  <h3 className=\"mx-2\">Purchase Membership Plan</h3>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  {membershipData.map((i) => {\r\n                    return (\r\n                      <>\r\n                        <div className=\"col-md-4 mt-5\">\r\n                          <div className=\"card text-center membershipCardMain\">\r\n                            <div className=\"item\">\r\n                              <div className=\"MembershipCardAuth\">\r\n                                <div className=\"membershipCardAuthUpperPart\">\r\n                                  <h4>{i.plan_name}</h4>\r\n                                  <h2\r\n                                    style={{\r\n                                      color: primaryColor,\r\n                                    }}\r\n                                  >\r\n                                    {curr} {i.amount}\r\n                                  </h2>\r\n                                  <h6 className=\"mt-3\">{i.plan_type}</h6>\r\n                                </div>\r\n\r\n                                {i.is_plan_active === 1 && (\r\n                                  <Link\r\n                                    className=\"btn btn-secondary\"\r\n                                    style={{\r\n                                      backgroundColor: secondaryColor,\r\n                                      border: secondaryColor,\r\n                                    }}\r\n                                    // data-bs-toggle=\"modal\"\r\n                                    // data-bs-target=\"#PaymentModal\"\r\n                                    // onClick={() => getPlanId(i.plan_id)}\r\n                                  >\r\n                                    CURRENT PLAN\r\n                                  </Link>\r\n                                )}\r\n                                {\r\n                                  i.is_plan_active === 0 &&\r\n                                    (i.amount <= 0 ? (\r\n                                      <>\r\n                                        <Link\r\n                                          className=\"btn btn-primary\"\r\n                                          style={{\r\n                                            backgroundColor: primaryColor,\r\n                                            border: primaryColor,\r\n                                          }}\r\n                                          // data-bs-toggle=\"modal\"\r\n                                          // data-bs-target=\"#PaymentModal\"\r\n                                          onClick={() =>\r\n                                            activateFreePlan(\r\n                                              i.plan_id,\r\n                                              i.amount,\r\n                                              i.currency,\r\n                                              i.plan_name\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          BUY THIS PLAN\r\n                                        </Link>\r\n                                      </>\r\n                                    ) : (\r\n                                      <>\r\n                                        <Link\r\n                                          className=\"btn btn-primary\"\r\n                                          data-bs-toggle=\"modal\"\r\n                                          data-bs-target=\"#PaymentModal\"\r\n                                          style={{\r\n                                            backgroundColor: primaryColor,\r\n                                            border: primaryColor,\r\n                                          }}\r\n                                          onClick={() =>\r\n                                            getPlanId(\r\n                                              i.plan_id,\r\n                                              i.amount,\r\n                                              i.currency,\r\n                                              i.plan_name\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          BUY THIS PLAN\r\n                                        </Link>\r\n                                      </>\r\n                                    ))\r\n                                  // <Link\r\n                                  //   className=\"btn btn-primary\"\r\n                                  //   data-bs-toggle=\"modal\"\r\n                                  //   data-bs-target=\"#PaymentModal\"\r\n                                  //   onClick={() => getPlanId(i.plan_id,i.amount,i.currency,i.plan_name)}\r\n                                  // >\r\n                                  //   BUY THIS PLAN\r\n                                  // </Link>\r\n                                }\r\n\r\n                                <div className=\"ApplyAllAuth text-center mb-4\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    id=\"applyimmediately\"\r\n                                  />\r\n                                  <label\r\n                                    className=\"form-check-label\"\r\n                                    for=\"applyimmediately\"\r\n                                  >\r\n                                    Apply Immediately\r\n                                  </label>\r\n                                  <Tooltip\r\n                                    placement=\"top\"\r\n                                    overlay={\r\n                                      <span>\r\n                                        If you select this option plan will{\" \"}\r\n                                        <br />\r\n                                        be applied from today and any\r\n                                        <br /> remaining feature of your current\r\n                                        <br /> plan will not be carry forwarded.\r\n                                      </span>\r\n                                    }\r\n                                  >\r\n                                    <span>\r\n                                      <i class=\"fa-solid fa-circle-info ms-2\"></i>\r\n                                    </span>\r\n                                  </Tooltip>\r\n                                </div>\r\n                                <hr />\r\n                                <ul className=\"applyoptionAuth\">\r\n                                  {i.features.map((j) => {\r\n                                    return (\r\n                                      <>\r\n                                        <li>\r\n                                          {j.outer\r\n                                            ? HTMLReactParser(j.outer)\r\n                                            : \"\"}\r\n                                          <Tooltip\r\n                                            placement=\"top\"\r\n                                            overlay={\r\n                                              <span>\r\n                                                {j.inner\r\n                                                  ? HTMLReactParser(j.inner)\r\n                                                  : \"\"}\r\n                                              </span>\r\n                                            }\r\n                                          >\r\n                                            <span>\r\n                                              <i class=\"fa-solid fa-circle-info ms-2\"></i>\r\n                                            </span>\r\n                                          </Tooltip>\r\n                                        </li>\r\n                                      </>\r\n                                    );\r\n                                  })}\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InnerMembershipPlan;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Sidebar = () => {\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const navigate = useNavigate();\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [isQuickLinksVisible, setIsQuickLinksVisible] = useState(false);\r\n  const [isDashboardLinksVisible, setIsDashboardLinksVisible] = useState(false);\r\n\r\n  const toggle1 = () => {\r\n    setIsQuickLinksVisible(!isQuickLinksVisible);\r\n  };\r\n  const toggle2 = () => {\r\n    setIsDashboardLinksVisible(!isDashboardLinksVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const handleWindowResize = () => {\r\n    //   if (window.innerWidth < 768) {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(false);\r\n    //   } else {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(true);\r\n    //   }\r\n    // };\r\n\r\n    const handleWindowResize = () => {\r\n      if (window.innerWidth > 768) {\r\n        // Reload the page when the screen size is less than 768\r\n        window.location.reload();\r\n      }\r\n    };\r\n\r\n    // Call the function on component mount\r\n    // handleWindowResize();\r\n\r\n    // Attach event listener for window resize\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Clean up event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  let screenWidth = window.innerWidth;\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: t(\"employerSidebar.confirmTitle\"),\r\n        text: t(\"employerSidebar.confirmTxt\"),\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: t(\"employerSidebar.yes\"),\r\n        cancelButtonText: t(\"employerSidebar.no\"),\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(BaseApi + \"/users/logout\", null, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        });\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        // sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: t(\"employerSidebar.successTitle\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: t(\"employerSidebar.failedTitle\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"employerSidebar.close\"),\r\n      });\r\n      console.log(\"Cannot logout!\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAc = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Account\",\r\n        text: \"Do you want to delete this account?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(\r\n          BaseApi + \"/users/deleteAccount\",\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Account deleted successfully!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Could not delete account!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Cannot delete account!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {screenWidth > 768 ? (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"SBBody\">\r\n              <Link to=\"/user/createjob\" className=\"bodyItem SidebarCreatJob\">\r\n                <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon1color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/managejob\" className=\"bodyItem SidebarManageJob\">\r\n                <div className=\"SidebarImages SidebarManageJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon2color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/paymenthistory\"\r\n                className=\"bodyItem SidebarPaymentJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon3color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/favouritelist\"\r\n                className=\"bodyItem SidebarFavouriteJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon4color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/importjobseekers\"\r\n                className=\"bodyItem SidebarImportJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarImportJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon5color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-5\">\r\n              <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"body\">\r\n              <Link\r\n                to=\"/user/mailhistory\"\r\n                className=\"bodyItem SidebarMailHistory\"\r\n              >\r\n                <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon6color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/myprofile\" className=\"bodyItem SidebarMyProfile\">\r\n                <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon7color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/editprofile\"\r\n                className=\"bodyItem SidebarEditProfile\"\r\n              >\r\n                <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon8color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changepassword\"\r\n                className=\"bodyItem SidebarChangePass\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangePassBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon9color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changelogo\"\r\n                className=\"bodyItem SidebarChangeLogo\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon10color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n              </Link>\r\n              <Link className=\"bodyItem SidebarLogOut\">\r\n                <div className=\"SidebarImages SidebarLogOutBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon11color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                {t(\"employerSidebar.logout\")}\r\n                </div>\r\n              </Link>\r\n              <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon12color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.deleteAccount\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle1}>\r\n                  {isQuickLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isQuickLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isQuickLinksVisible ? \"block\" : \"none\",\r\n                  \r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/createjob\"\r\n                    className=\"bodyItem SidebarCreatJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon1color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/managejob\"\r\n                    className=\"bodyItem SidebarManageJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarManageJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon2color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/paymenthistory\"\r\n                    className=\"bodyItem SidebarPaymentJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon3color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/favouritelist\"\r\n                    className=\"bodyItem SidebarFavouriteJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon4color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/importjobseekers\"\r\n                    className=\"bodyItem SidebarImportJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarImportJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon5color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-3\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle2}>\r\n                  {isDashboardLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isDashboardLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isDashboardLinksVisible ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/mailhistory\"\r\n                    className=\"bodyItem SidebarMailHistory\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon6color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/myprofile\"\r\n                    className=\"bodyItem SidebarMyProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon7color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/editprofile\"\r\n                    className=\"bodyItem SidebarEditProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon8color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changepassword\"\r\n                    className=\"bodyItem SidebarChangePass\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangePassBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon9color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changelogo\"\r\n                    className=\"bodyItem SidebarChangeLogo\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon10color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"bodyItem SidebarLogOut\">\r\n                    <div className=\"SidebarImages SidebarLogOutBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon11color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                    {t(\"employerSidebar.logout\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                    <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon12color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">\r\n                    {t(\"employerSidebar.deleteAccount\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["InnerMembershipPlan","loading","setLoading","useState","membershipData","setMembershipData","membershipPlan","setMembershipPlan","sendPlanDetail","setSendPlanDetail","plan_id","payment_option","prePaymentDetail","setPrePaymentDetail","membershipFeatures","setMembershipFeatures","paypalData","setPaypalData","tokenKey","Cookies","navigate","useNavigate","userType","primaryColor","secondaryColor","currencyCode","curr","PrePaymentSlug","paidFor","setPaidFor","error","setError","Swal","title","text","icon","confirmButtonText","setTimeout","window","location","reload","planDetails","freePlanPurchase","async","console","log","details","response","axios","BaseApi","headers","key","ApiKey","token","data","status","slug","randomTransactionID","characters","randomID","i","randomIndex","Math","floor","random","charAt","generateRandomID","handleSuccessApi","planId","postPaymentDetail","setPostPaymentDetail","transaction_id","transactionID","postPaymentResponse","setPostpaymentResponse","orderID","currentSlug","handleFailureApi","useEffect","plan","paypal","getData","scrollTo","_jsxs","_Fragment","children","_jsx","NavBar","className","class","id","tabindex","type","htmlFor","onClick","PayPalScriptProvider","options","process","REACT_APP_PAYPAL_CLIENT_ID","currency","PayPalButtons","style","color","layout","height","tagline","shape","actions","sessionStorage","getItem","paymentButtonClick","resolve","createOrder","order","create","purchase_units","description","amount","currency_code","value","onApprove","capture","onCancel","alert","onError","err","JSSidebar","Sidebar","borderLeft","borderRight","src","alt","map","plan_name","plan_type","is_plan_active","Link","backgroundColor","border","activateFreePlan","getPlanId","setItem","for","Tooltip","placement","overlay","features","j","outer","HTMLReactParser","inner","Footer","t","i18n","useTranslation","isQuickLinksVisible","setIsQuickLinksVisible","isDashboardLinksVisible","setIsDashboardLinksVisible","handleWindowResize","innerWidth","addEventListener","removeEventListener","screenWidth","handleLogOut","showCancelButton","cancelButtonText","isConfirmed","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","fire","to","toggle1","display","toggle2"],"sourceRoot":""}