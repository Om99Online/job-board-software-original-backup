{"version":3,"file":"static/js/8992.23cf3c25.chunk.js","mappings":"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","sources":["Components/adminpanel/Setting/APManageEmailSetting.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APManageEmailSetting = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // const [userData, setUserData] = useState([]);\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    setSelectedPlan(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPlan(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/settings/manageMails\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response.email);\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  // const handleActivate = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Activate Sub-Admin\",\r\n  //       text: \"Do you want to Activate this Sub-Admin?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/activateuser/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Sub-Admin Activated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Activate Sub-Admin\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't activate the record!\", error.message);\r\n  //   }\r\n  // };\r\n  // const handleDeactivate = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Deactivate Sub-Admin\",\r\n  //       text: \"Do you want to Deactivate this Sub-Admin?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/deactivateuser/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Sub-Admin Deactivated successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Deactivate Sub-Admin\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't deactivate the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  // const handleDelete = async (slug) => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Delete Sub-Admin\",\r\n  //       text: \"Do you want to Delete this Sub-Admin?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + `/admin/deleteadmins/${slug}`,\r\n  //         null, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Sub-Admin deleted successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Delete Sub-Admin\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't delete the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n\r\n  const [selectAll, setSelectAll] = useState(true);\r\n\r\n  const handleCheck = (id) => {\r\n    // Check if the id is 'selectAll', indicating the \"Select All\" checkbox\r\n    if (id === \"selectAll\") {\r\n      // If it's \"Select All\", toggle the selectAll state\r\n      setSelectAll(!selectAll);\r\n\r\n      // If selectAll is true, select all checkboxes, else unselect all\r\n      const updatedCheckedData = selectAll\r\n        ? listData.map((item) => item.id)\r\n        : [];\r\n      setCheckedData(updatedCheckedData);\r\n    } else {\r\n      // Individual checkbox handling remains the same\r\n      if (checkedData.includes(id)) {\r\n        // If the ID is already in the array, remove it\r\n        setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n      } else {\r\n        // If the ID is not in the array, add it\r\n        setCheckedData([...checkedData, id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMultipleDeactivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Sub-Admins\",\r\n        text: \"Do you want to Deactivate Sub-Admins?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const ids = checkedData.join(\",\");\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/manage\",\r\n          {\r\n            idList: ids,\r\n            action: \"deactivate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Sub-Admins Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Deactivate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Sub-Admins\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleActivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Sub-Admins\",\r\n        text: \"Do you want to Activate Sub-Admins?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/manage\",\r\n          {\r\n            idList: ids,\r\n            action: \"activate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Sub-Admins Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Activate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Sub-Admins\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  // const handleMultipleDelete = async () => {\r\n  //   try {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Delete Sub-Admins\",\r\n  //       text: \"Do you want to Delete Sub-Admins?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       let ids = checkedData.toString();\r\n  //       console.log(ids);\r\n  //       // setLoading(true);\r\n  //       const response = await axios.post(\r\n  //         BaseApi + \"/admin/manage\",\r\n  //         {\r\n  //           idList: ids,\r\n  //           action: \"delete\",\r\n  //         }, // Pass null as the request body if not required\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //           },\r\n  //         }\r\n  //       );\r\n  //       // setLoading(false);\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Sub-Admins Delete successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: \"Couldn't Delete!\",\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //       getData();\r\n  //     }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed. Please try after some time!\",\r\n  //       text: \"Could not Delete Sub-Admins\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Couldn't Delete the record!\", error.message);\r\n  //   }\r\n  // };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter(\r\n        (item) =>\r\n          item.email_name?.toLowerCase().includes(query) ||\r\n          item.mail_value?.toLowerCase().includes(query)\r\n      )\r\n      .sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n          return direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n          return direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return (\r\n      item.email_name?.toLowerCase().includes(searchString) ||\r\n      item.mail_value?.toLowerCase().includes(searchString)\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset currentPage to 1 when searchQuery changes\r\n  }, [searchQuery]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    const newQuery = e.target.value.toLowerCase();\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb1\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"\")}\r\n                  >\r\n                    Settings\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Manage Email Settings\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Email List</h2>\r\n              </div>\r\n              <div className=\"manageSubadminPart1\">\r\n                <form>\r\n                  <div className=\"manageSubadminPart1Sec1\">\r\n                    <h4>Search Mail by typing email type, email address</h4>\r\n                    <div class=\"APDashboardSearchBx \">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"form3Example1\"\r\n                        className=\"form-control\"\r\n                        name=\"searchQuery\"\r\n                        placeholder=\"Search..\"\r\n                        value={searchQuery}\r\n                        onChange={handleSearchChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <h4>\r\n                  No. of Results {indexOfFirstItem + 1}-\r\n                  {Math.min(\r\n                    indexOfLastItem,\r\n                    filteredData.length || listData.length\r\n                  )}{\" \"}\r\n                  of {listData.length}\r\n                </h4>\r\n              </div>\r\n\r\n              <div className=\"manageSubadminPart2\">\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <td className=\"checkBoxCol checkBxHead\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"tableCheckBox\"\r\n                          // checked={selectAll}\r\n\r\n                          onClick={() => handleCheck(\"selectAll\")}\r\n                        />\r\n                      </td>\r\n                      <th onClick={() => handleColumnClick(\"email_name\")}>\r\n                        Email Name {symbol}\r\n                      </th>\r\n                      <th onClick={() => handleColumnClick(\"mail_value\")}>\r\n                        Email Address {symbol}\r\n                      </th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentItems.map((i) => {\r\n                      return (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"checkBoxCol\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"tableCheckBox\"\r\n                                checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                              />\r\n                            </td>\r\n                            <td>{i.email_name}</td>\r\n                            <td>{i.mail_value}</td>\r\n                            <td className=\"APActionButton\">\r\n                              <button\r\n                                className=\"btn-primary\"\r\n                                onClick={() =>\r\n                                  navigate(\r\n                                    `/admin/settings/editMails/${i.slug}`\r\n                                  )\r\n                                }\r\n                              >\r\n                                <Tooltip title=\"Edit\">\r\n                                  <CreateIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                              <button\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => handleOpen(i)}\r\n                              >\r\n                                <Tooltip title=\"Read\">\r\n                                  <RemoveRedEyeIcon />\r\n                                </Tooltip>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <div>\r\n                      <Modal\r\n                        className=\"modalMain\"\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box className=\"modal adminModal modal-content\">\r\n                          <IconButton\r\n                            onClick={handleClose}\r\n                            className=\"close-button\"\r\n                            style={{ position: \"absolute\", top: 10, right: 10 }}\r\n                          >\r\n                            &times;\r\n                          </IconButton>\r\n\r\n                          <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h4\"\r\n                            component=\"h2\"\r\n                          >\r\n                            {/* Email Details */}\r\n                          </Typography>\r\n                          {/* <hr /> */}\r\n                          {/* <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          >\r\n                            <span className=\"fw-bold\">Email Name:</span>{\" \"}\r\n                            {selectedPlan &&\r\n                              HTMLReactParser(selectedPlan.email_name)}\r\n                          </Typography> */}\r\n                          <Typography\r\n                            id=\"modal-modal-description\"\r\n                            sx={{ mt: 3 }}\r\n                          >\r\n                            {/* <span className=\"fw-bold\">Email Address:</span>{\" \"}\r\n                            {selectedPlan &&\r\n                              HTMLReactParser(selectedPlan.mail_value)} */}\r\n\r\n                            {selectedPlan && (\r\n                              <div className=\"modals \">\r\n                                <div className=\"modalHead\">\r\n                                  <h1>Email Details</h1>\r\n                                </div>\r\n                                <div className=\"modalBody mt-4\">\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-4 fw-bold m-2 leftData\">\r\n                                      Email Name:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"col-md-4 m-2 rightData\">\r\n                                      {selectedPlan.email_name}\r\n                                    </div>\r\n                                  </div>\r\n\r\n                                  <div className=\"row\">\r\n                                    <div className=\"col-md-4 fw-bold m-2 leftData\">\r\n                                      Email Address:{\" \"}\r\n                                    </div>\r\n                                    <div className=\"col-md-4 m-2 rightData\">\r\n                                      {selectedPlan.mail_value}\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Modal>\r\n                    </div>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"manageSubadminpart3\">\r\n                {/* <div className=\"functionalityButton\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary APButton3\"\r\n                      onClick={() => handleMultipleActivate()}\r\n                    >\r\n                      ACTIVATE\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary APButton3\"\r\n                      onClick={() => handleMultipleDeactivate()}\r\n                    >\r\n                      DEACTIVATE\r\n                    </button>\r\n                  </div> */}\r\n                <div className=\"pagination\">\r\n                  <Stack spacing={2}>\r\n                    <Pagination\r\n                      count={totalPages}\r\n                      color=\"primary\"\r\n                      page={currentPage}\r\n                      onChange={(event, page) => setCurrentPage(page)}\r\n                    />\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APManageEmailSetting;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["APManageEmailSetting","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","currentPage","setCurrentPage","open","setOpen","selectedPlan","setSelectedPlan","handleClose","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","email","error","console","log","selectAll","setSelectAll","handleCheck","id","updatedCheckedData","map","item","includes","filter","checkedId","sortConfig","setSortConfig","direction","symbol","setSymbol","sortedAndFilteredData","array","query","_item$email_name","_item$mail_value","email_name","toLowerCase","mail_value","sort","a","b","sortAndFilterData","filteredData","_item$email_name2","_item$mail_value2","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","window","scrollTo","handleColumnClick","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","type","name","placeholder","value","onChange","e","newQuery","target","min","scope","checked","slug","Tooltip","title","CreateIcon","RemoveRedEyeIcon","Modal","onClose","Box","IconButton","style","position","top","right","variant","component","sx","mt","Stack","spacing","Pagination","count","page","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","root","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","action","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}