{"version":3,"file":"static/js/3732.3219849c.chunk.js","mappings":"yUAeA,MAiaA,EAjauBA,KACrB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,iBAAkB,MAEbC,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,CACnCC,WAAY,GACZC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,iBAAkB,MAEbG,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GACjCW,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WAEtBE,GAAWC,EAAAA,EAAAA,OAEX,KAAEC,IAASC,EAAAA,EAAAA,MA0BXC,EAAoBb,GAEtB,uEACmBc,KAAKd,GAQtBe,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1B,IAAIC,EAAY,IAAKlB,GAGrBR,GAAa2B,IAAI,IACZA,EACH,CAACJ,GAAOC,MAmBG,aAATD,EACGJ,EAAiBK,UAObE,EAAUH,GANjBG,EAAY,IACPA,EACH,CAACH,GACC,oKAMCG,EAAUH,GAInBd,EAAUiB,EAAU,EAwItB,OAZAE,EAAAA,EAAAA,YAAU,KAEHhB,GA1MSiB,WACd,IACElB,GAAW,GACX,MAAMmB,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,qBAAoBf,IAC/B,KACA,CACEgB,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOxB,EACPyB,QAASvB,KAIfH,GAAW,GACXX,EAAY8B,EAASQ,KAAKR,SAE5B,CAAE,MAAOS,GACP5B,GAAW,GACX6B,QAAQC,IAAI,yCACd,GA0LEC,GACAC,OAAOC,SAAS,EAAG,IAJnB7B,EAAS,SAKX,GACC,CAACH,EAAUG,KAGZ8B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETzC,GACCsC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAaE,KAAK,eAAcL,UAC7CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAM7C,EAAS,2BAA2BgC,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAM7C,EAAS,wBAAwBgC,SACjD,gBAGDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,yBAIrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,oBACjCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAWH,UACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,cAC7BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEtCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAON,YAAc,gBAEvBqB,KAAK,aACL2C,YAAY,aACZ1C,MAAOzB,EAASG,WAChBiE,SAAU9C,IAEXb,EAAON,aACN8C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEvC,EAAON,iBAGzC2C,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,aAC9BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAErCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAOL,WAAa,gBAEtBoB,KAAK,YACL2C,YAAY,YACZ1C,MAAOzB,EAASI,UAChBgE,SAAU9C,IAEXb,EAAOL,YACN6C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEvC,EAAOL,gBAGzC0C,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAOJ,UAAY,gBAErBmB,KAAK,WACL2C,YAAY,WACZ1C,MAAOzB,EAASK,SAChB+D,SAAU9C,IAEXb,EAAOJ,WACN4C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEvC,EAAOJ,eAGzCyC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAOH,OAAS,gBAElBkB,KAAK,QACL2C,YAAY,gBACZ1C,MAAOzB,EAASM,MAChB8D,SAAU9C,IAEXb,EAAOH,QACN2C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEvC,EAAOH,YAGzCwC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,cAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAOF,UAAY,gBAErBiB,KAAK,WACL2C,YAAY,WACZ1C,MAAOzB,EAASO,SAChB6D,SAAU9C,IAEXb,EAAOF,WACN0C,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEvC,EAAOF,eAGzCuC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,sBAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACV1C,EAAOD,kBAAoB,gBAE7BgB,KAAK,mBACL2C,YAAY,mBACZ1C,MAAOzB,EAASQ,iBAChB4D,SAAU9C,IAEXb,EAAOD,mBACNyC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBvC,EAAOD,uBAIdyC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAnSE/B,UAClB,IACE,MAAM,WACJ3B,EAAU,UACVC,EAAS,SACTC,EAAQ,MACRC,EAAK,SACLC,EAAQ,iBACRC,GACER,EAGJ,IACGG,IACAC,IACAC,IACAC,EAcD,YAVAI,EAAU,CACRP,WAAYA,EAAa,GAAK,yBAC9BC,UAAWA,EAAY,GAAK,wBAC5BC,SAAUA,EAAW,GAAK,uBAC1BC,MAAOA,EAAQ,GAAK,oBACpBC,SAAUA,EAAW,GAAK,uBAC1BC,iBAAkBA,EACd,GACA,iCAKR,GAAID,EAAU,CAEZ,GAAIA,IAAaC,EAIf,YAHAE,EAAU,CACRF,iBAAkB,+CAKtB,GAAID,EAAS8D,OAAS,GAAK7D,EAAiB6D,OAAS,EAKnD,YAJA3D,EAAU,CACRH,SAAU,oCACVC,iBAAkB,sCAKtB,IAAKY,EAAiBb,GAKpB,YAJAG,EAAU,CACRH,SACE,6JAIR,CAGA,IA7GmBD,IACF,6BACDe,KAAKf,GA2GhBgE,CAAchE,GAIjB,YAHAI,EAAU,CACRJ,MAAO,0BAcX,UATiCiE,IAAAA,KAAU,CACzCC,MAAO,oBACPC,KAAM,mCACNC,KAAM,WACNC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,QAGGC,YAAa,CAClClE,GAAW,GAEX,MAAMmB,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,qBAAoBf,IAC/BlB,EACA,CACEkC,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOxB,EACPyB,QAASvB,KAIfH,GAAW,GAEkB,MAAzBmB,EAASQ,KAAKwC,QAChBR,IAAAA,KAAU,CACRC,MAAO,0CACPE,KAAM,UACNE,kBAAmB,UAErBhC,OAAOC,SAAS,EAAG,GACnB7B,EAAS,yBAETuD,IAAAA,KAAU,CACRC,MAAOzC,EAASQ,KAAKyC,QACrBN,KAAM,QACNE,kBAAmB,SAGzB,CACF,CAAE,MAAOpC,GACP5B,GAAW,GACX2D,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAM,sDACNC,KAAM,QACNE,kBAAmB,UAErBnC,QAAQC,IAAI,2BAA4BF,EAC1C,GA6KqCQ,SACtB,YAGDC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAASA,IAAM7C,EAAS,2BAA2BgC,SACpD,oBAMPC,EAAAA,EAAAA,KAACgC,EAAAA,EAAQ,YAId,C","sources":["Components/adminpanel/Configuration/APEditSubAdmin.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditSubAdmin = () => {\r\n  const [userData, setUserData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { slug } = useParams();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/editadmins/${slug}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let newErrors = { ...errors };\r\n\r\n    // Update user data\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n\r\n    // Email validation\r\n    // if (name === \"email\") {\r\n    //   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    //   if (!emailRegex.test(value)) {\r\n    //     newErrors = {\r\n    //       ...newErrors,\r\n    //       [name]: \"Enter a valid email address\",\r\n    //     };\r\n    //   } else {\r\n    //     delete newErrors[name];\r\n    //   }\r\n    // } else {\r\n    //   delete newErrors[name];\r\n    // }\r\n\r\n    // Password validation\r\n    if (name === \"password\") {\r\n      if (!validatePassword(value)) {\r\n        newErrors = {\r\n          ...newErrors,\r\n          [name]:\r\n            \"Password must be at least 8 characters long and contain at least one special character, one lowercase character, one uppercase character, and one number.\",\r\n        };\r\n      } else {\r\n        delete newErrors[name];\r\n      }\r\n    } else {\r\n      delete newErrors[name];\r\n    }\r\n\r\n    // Update errors\r\n    setErrors(newErrors);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const {\r\n        first_name,\r\n        last_name,\r\n        username,\r\n        email,\r\n        password,\r\n        confirm_password,\r\n      } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (\r\n        !first_name ||\r\n        !last_name ||\r\n        !username ||\r\n        !email\r\n        // !password ||\r\n        // !confirm_password\r\n      ) {\r\n        setErrors({\r\n          first_name: first_name ? \"\" : \"First Name is required\",\r\n          last_name: last_name ? \"\" : \"Last Name is required\",\r\n          username: username ? \"\" : \"Username is required\",\r\n          email: email ? \"\" : \"Email is required\",\r\n          password: password ? \"\" : \"Password is required\",\r\n          confirm_password: confirm_password\r\n            ? \"\"\r\n            : \"Confirm password is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (password) {\r\n        // Check if new email and confirm email match\r\n        if (password !== confirm_password) {\r\n          setErrors({\r\n            confirm_password: \"Password and Confirm Password do not match\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        if (password.length < 8 || confirm_password.length < 8) {\r\n          setErrors({\r\n            password: \"Please enter atleast 8 characters\",\r\n            confirm_password: \"Please enter atleast 8 characters\",\r\n          });\r\n          return;\r\n        }\r\n        // Validate password using the validatePassword function\r\n        if (!validatePassword(password)) {\r\n          setErrors({\r\n            password:\r\n              \"Password must be at least 8 characters long and contain at least one special character, one lowercase character, one uppercase character, and one number.\",\r\n          });\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Validate email using the validateEmail function\r\n      if (!validateEmail(email)) {\r\n        setErrors({\r\n          email: \"Invalid Email Address\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update Sub Admin?\",\r\n        text: \"Do you want to update Sub-Admin?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n        // Make API call to update sub-admin\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/editadmins/${slug}`,\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Sub-Admin account updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          window.scrollTo(0, 0);\r\n          navigate(\"/admin/admins/manage\");\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update Sub-Admin. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not add sub admin!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/manage\")}\r\n                  >\r\n                    Sub Admins\r\n                  </Link>\r\n                  <Typography color=\"text.primary\">Edit Sub Admin</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Sub Admin</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      First Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.first_name && \"input-error\"\r\n                      }`}\r\n                      name=\"first_name\"\r\n                      placeholder=\"First Name\"\r\n                      value={userData.first_name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.first_name && (\r\n                      <div className=\"text-danger\">{errors.first_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Last Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.last_name && \"input-error\"\r\n                      }`}\r\n                      name=\"last_name\"\r\n                      placeholder=\"Last Name\"\r\n                      value={userData.last_name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.last_name && (\r\n                      <div className=\"text-danger\">{errors.last_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Username<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.username && \"input-error\"\r\n                      }`}\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      value={userData.username}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.username && (\r\n                      <div className=\"text-danger\">{errors.username}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Email Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.email && \"input-error\"\r\n                      }`}\r\n                      name=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      value={userData.email}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"text-danger\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.password && \"input-error\"\r\n                      }`}\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      value={userData.password}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.password && (\r\n                      <div className=\"text-danger\">{errors.password}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.confirm_password && \"input-error\"\r\n                      }`}\r\n                      name=\"confirm_password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={userData.confirm_password}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.confirm_password}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditSubAdmin;\r\n"],"names":["APEditSubAdmin","userData","setUserData","useState","first_name","last_name","username","email","password","confirm_password","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","validatePassword","test","handleChange","e","name","value","target","newErrors","prev","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","length","validateEmail","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}