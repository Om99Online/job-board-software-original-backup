{"version":3,"file":"static/js/8616.f0c94fb8.chunk.js","mappings":"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","sources":["Components/jobseekersSide/JSMakeCV.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../element/Footer\";\r\nimport JSSidebar from \"./JSSidebar\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\n\r\nconst JSMakeCV = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [cvUserdetail, setCVUserdetail] = useState([]);\r\n  const [cvEducation, setCVEducation] = useState([]);\r\n  const [cvExperience, setCVExperience] = useState([]);\r\n  const [PDFDownloadURL, setPDFDownloadURL] = useState();\r\n  const [DOCDownloadURL, setDOCDownloadURL] = useState(\"\");\r\n  const [professionalExp, setCVProfessionalExp] = useState([]);\r\n\r\n  const [docDownloadActive, setDocDownloadActive] = useState(false);\r\n  const [pdfDownloadActive, setPdfDownloadActive] = useState(false);\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [hoverFirstButtonColor, setHoverFirstButtonColor] = useState(false);\r\n\r\n  const handleFirstButtonMouseEnter = () => {\r\n    setHoverFirstButtonColor(true);\r\n  };\r\n\r\n  const handleFirstButtonMouseLeave = () => {\r\n    setHoverFirstButtonColor(false);\r\n  };\r\n\r\n  const [hoverSecondButtonColor, setHoverSecondButtonColor] = useState(false);\r\n\r\n  const handleSecondButtonMouseEnter = () => {\r\n    setHoverSecondButtonColor(true);\r\n  };\r\n\r\n  const handleSecondButtonMouseLeave = () => {\r\n    setHoverSecondButtonColor(false);\r\n  };\r\n\r\n  const [hoverThirdButtonColor, setHoverThirdButtonColor] = useState(false);\r\n\r\n  const handleThirdButtonMouseEnter = () => {\r\n    setHoverThirdButtonColor(true);\r\n  };\r\n\r\n  const handleThirdButtonMouseLeave = () => {\r\n    setHoverThirdButtonColor(false);\r\n  };\r\n\r\n  const [hoverFourthButtonColor, setHoverFourthButtonColor] = useState(false);\r\n\r\n  const handleFourthButtonMouseEnter = () => {\r\n    setHoverFourthButtonColor(true);\r\n  };\r\n\r\n  const handleFourthButtonMouseLeave = () => {\r\n    setHoverFourthButtonColor(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/jobseekerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/makecv\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        setCVUserdetail(response.data.response.userdetail);\r\n        setCVEducation(response.data.response.education);\r\n        setCVExperience(response.data.response.experience);\r\n        setCVProfessionalExp(response.data.response.profReg);\r\n\r\n        // console.log(cvEducation);\r\n      } else if (response.data.status === 400) {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get CV data\");\r\n    }\r\n  };\r\n\r\n  // Date object\r\n  const date = new Date();\r\n\r\n  let currentDay = String(date.getDate()).padStart(2, \"0\");\r\n\r\n  let currentMonth = String(date.getMonth() + 1).padStart(2, \"0\");\r\n\r\n  let currentYear = date.getFullYear();\r\n\r\n  // we will display the date as DD-MM-YYYY\r\n\r\n  let currentDate = `${currentDay}-${currentMonth}-${currentYear}`;\r\n\r\n  const generatePdf = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/apps_generatecv\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        setPDFDownloadURL(response.data.response.resume_path);\r\n        setPdfDownloadActive(true);\r\n      } else if (response.data.status === 400) {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get CV data pdf format\", error.message);\r\n    }\r\n  };\r\n\r\n  const generateDoc = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/generatecvdoc\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        setDOCDownloadURL(response.data.response.resume_path);\r\n        // console.log(DOCDownloadURL);\r\n        setDocDownloadActive(true);\r\n      } else if (response.data.status === 400) {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get CV data in doc format\", error.message);\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   // console.log(downloadActive, DOCDownloadURL)\r\n  //   if (docDownloadActive && DOCDownloadURL) {\r\n  //     // Create a hidden link element\r\n  //     const link = document.createElement(\"a\");\r\n  //     link.style.display = \"none\";\r\n  //     link.href = DOCDownloadURL;\r\n  //     link.download = \"generated-cv.docx\";\r\n  //     document.body.appendChild(link);\r\n\r\n  //     // Trigger a click on the link\r\n  //     link.click();\r\n\r\n  //     // Clean up\r\n  //     document.body.removeChild(link);\r\n  //     setDocDownloadActive(false);\r\n  //   }\r\n  // }, [docDownloadActive, DOCDownloadURL]);\r\n\r\n  useEffect(() => {\r\n    if (docDownloadActive && DOCDownloadURL) {\r\n      // Extract the file name from the URL\r\n      const urlParts = DOCDownloadURL.split(\"/\");\r\n      const fileName = urlParts[urlParts.length - 1]; // Get the last part of the URL\r\n\r\n      // Create a hidden link element\r\n      const link = document.createElement(\"a\");\r\n      link.style.display = \"none\";\r\n      link.href = DOCDownloadURL;\r\n      link.download = fileName; // Use the extracted file name\r\n      document.body.appendChild(link);\r\n\r\n      // Trigger a click on the link\r\n      link.click();\r\n\r\n      // Clean up\r\n      document.body.removeChild(link);\r\n      setDocDownloadActive(false);\r\n    }\r\n  }, [docDownloadActive, DOCDownloadURL]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(downloadActive, DOCDownloadURL)\r\n  //   if (pdfDownloadActive && PDFDownloadURL) {\r\n  //     // Create a hidden link element\r\n  //     const link = document.createElement(\"a\");\r\n  //     link.style.display = \"none\";\r\n  //     link.href = PDFDownloadURL;\r\n  //     link.download = \"generated-cv.pdf\";\r\n  //     document.body.appendChild(link);\r\n\r\n  //     // Trigger a click on the link\r\n  //     link.click();\r\n\r\n  //     // Clean up\r\n  //     document.body.removeChild(link);\r\n  //     setPdfDownloadActive(false);\r\n  //   }\r\n  // }, [pdfDownloadActive, PDFDownloadURL]);\r\n\r\n  useEffect(() => {\r\n    if (pdfDownloadActive && PDFDownloadURL) {\r\n      // Extract the file name from the URL\r\n      const urlParts = PDFDownloadURL.split(\"/\");\r\n      const fileName = urlParts[urlParts.length - 1]; // Get the last part of the URL\r\n\r\n      // Create a hidden link element\r\n      const link = document.createElement(\"a\");\r\n      link.style.display = \"none\";\r\n      link.href = PDFDownloadURL;\r\n      link.download = fileName; // Use the extracted file name\r\n      document.body.appendChild(link);\r\n\r\n      // Trigger a click on the link\r\n      link.click();\r\n\r\n      // Clean up\r\n      document.body.removeChild(link);\r\n      setPdfDownloadActive(false);\r\n    }\r\n  }, [pdfDownloadActive, PDFDownloadURL]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"container makeCV\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <JSSidebar />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-lg-9 mb-5\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"mx-3 d-flex headerMakeCV\">\r\n                  <img src=\"/Images/jobseekerSide/Make-A-CV-color.png\" alt=\"\" />\r\n                  <h3 className=\"ms-1\" style={{ color: \"#a4bcc4\" }}>\r\n                    {t(\"jobseekerMakeCV.curriculumVitae\")}{\" \"}\r\n                    {cvUserdetail.first_name} {cvUserdetail.last_name}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"mx-4\">\r\n                  <div className=\"makeCVSeg1\">\r\n                    <div className=\"makeCVUserDetail\">\r\n                      <h4 className=\"makeCVName\">\r\n                        {cvUserdetail.first_name} {cvUserdetail.last_name} \r\n                      </h4><FaEnvelope />\r\n                      <h6 className=\"makeCVEmail\">\r\n                        \r\n                        <i class=\"fa-solid fa-envelope\"></i>{\" \"}\r\n\r\n                        {cvUserdetail.email_address}\r\n                      </h6>\r\n                      {/* <h6 className=\"makeCVPhone\">\r\n                        <i class=\"fa-solid fa-phone\"></i> {cvUserdetail.contact}\r\n                      </h6> */}\r\n                      <h6 className=\"makeCVAddress\">\r\n                        <i class=\"fa-solid fa-address-card me-1\"></i>\r\n                        {t(\"jobseekerMakeCV.address\")}: {cvUserdetail.location}\r\n                      </h6>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h4 className=\"mt-5\">{t(\"jobseekerMakeCV.education\")}</h4>\r\n                  <hr />\r\n                  {cvEducation.map((i) => {\r\n                    return (\r\n                      <>\r\n                        <p>\r\n                          {t(\"jobseekerMakeCV.eduLine1\")} {i.course_name}{\" \"}\r\n                          {t(\"jobseekerMakeCV.eduLine2\")} {i.basic_year}{\" \"}\r\n                          {t(\"jobseekerMakeCV.eduLine3\")} {i.basic_university}.{\" \"}\r\n                          <br />\r\n                        </p>\r\n                      </>\r\n                    );\r\n                  })}\r\n\r\n                  <h4 className=\"mt-5\">{t(\"jobseekerMakeCV.experience\")}</h4>\r\n                  <hr />\r\n                  {cvExperience.map((i) => {\r\n                    return (\r\n                      <>\r\n                        <p>\r\n                          {t(\"jobseekerMakeCV.expLine1\")} {i.role}{\" \"}\r\n                          {i.designation} {t(\"jobseekerMakeCV.expLine2\")}{\" \"}\r\n                          {i.company_name} {t(\"jobseekerMakeCV.expLine3\")}{\" \"}\r\n                          {i.from_year} {t(\"jobseekerMakeCV.expLine4\")}{\" \"}\r\n                          {i.to_year} <br />\r\n                          {t(\"jobseekerMakeCV.industry\")}: {i.industry}\r\n                          <br />\r\n                          {t(\"jobseekerMakeCV.functionalArea\")}:{\" \"}\r\n                          {i.functional_area} <br />\r\n                          {t(\"jobseekerMakeCV.role\")}: {i.role} <br />\r\n                        </p>\r\n                        -------------------------------------------------\r\n                      </>\r\n                    );\r\n                  })}\r\n\r\n                  <h4 className=\"mt-5\">\r\n                    {t(\"jobseekerMakeCV.professionalRegistration\")}\r\n                  </h4>\r\n                  <hr />\r\n                  {professionalExp.map((i, index) => {\r\n                    return (\r\n                      <>\r\n                        <p>\r\n                          {index + 1}. Registration Name: {i.registration_name}{\" \"}\r\n                          <br />\r\n                        </p>\r\n                      </>\r\n                    );\r\n                  })}\r\n\r\n                  <div className=\"mt-5 d-flex justify-content-between\">\r\n                    <p>\r\n                      {t(\"jobseekerMakeCV.date\")}: {currentDate}\r\n                    </p>\r\n                    <p>{t(\"jobseekerMakeCV.signature\")}</p>\r\n                  </div>\r\n                  <div className=\"makeaCVBottomBotton\">\r\n                    <button\r\n                      className=\"btn btn-primary button1\"\r\n                      onClick={() => generatePdf()}\r\n                      style={{\r\n                        backgroundColor: hoverFirstButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverFirstButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleFirstButtonMouseEnter}\r\n                      onMouseLeave={handleFirstButtonMouseLeave}\r\n                    >\r\n                      <img src=\"/Images/jobseekerSide/pdf-icon.png\" alt=\"\" />{\" \"}\r\n                      {t(\"jobseekerMakeCV.generatePdf\")}\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn btn-primary button2\"\r\n                      onClick={() => generateDoc()}\r\n                      style={{\r\n                        color: hoverThirdButtonColor\r\n                          ? primaryColor\r\n                          : secondaryColor,\r\n                        backgroundColor: \"white\",\r\n                        border: hoverThirdButtonColor\r\n                          ? `2px solid ${primaryColor}`\r\n                          : `2px solid ${secondaryColor}`,\r\n                      }}\r\n                      onMouseEnter={handleThirdButtonMouseEnter}\r\n                      onMouseLeave={handleThirdButtonMouseLeave}\r\n                    >\r\n                      <img src=\"/Images/jobseekerSide/DocIcon.png\" alt=\"\" />{\" \"}\r\n                      {t(\"jobseekerMakeCV.generateDoc\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSMakeCV;\r\n"],"names":["JSMakeCV","loading","setLoading","useState","cvUserdetail","setCVUserdetail","cvEducation","setCVEducation","cvExperience","setCVExperience","PDFDownloadURL","setPDFDownloadURL","DOCDownloadURL","setDOCDownloadURL","professionalExp","setCVProfessionalExp","docDownloadActive","setDocDownloadActive","pdfDownloadActive","setPdfDownloadActive","tokenKey","Cookies","primaryColor","secondaryColor","t","i18n","useTranslation","hoverFirstButtonColor","setHoverFirstButtonColor","hoverSecondButtonColor","setHoverSecondButtonColor","hoverThirdButtonColor","setHoverThirdButtonColor","hoverFourthButtonColor","setHoverFourthButtonColor","navigate","useNavigate","useEffect","getData","window","scrollTo","async","response","axios","BaseApi","headers","key","ApiKey","token","data","status","userdetail","education","experience","profReg","Swal","title","message","icon","confirmButtonText","error","setTimeout","location","reload","console","log","date","Date","currentDate","String","getDate","padStart","getMonth","getFullYear","urlParts","split","fileName","length","link","document","createElement","style","display","href","download","body","appendChild","click","removeChild","_jsxs","_Fragment","children","_jsx","NavBar","className","JSSidebar","borderLeft","borderRight","src","alt","color","first_name","last_name","FaEnvelope","class","email_address","map","i","course_name","basic_year","basic_university","role","designation","company_name","from_year","to_year","industry","functional_area","index","registration_name","onClick","resume_path","generatePdf","backgroundColor","border","onMouseEnter","handleFirstButtonMouseEnter","onMouseLeave","handleFirstButtonMouseLeave","generateDoc","handleThirdButtonMouseEnter","handleThirdButtonMouseLeave","Footer"],"sourceRoot":""}