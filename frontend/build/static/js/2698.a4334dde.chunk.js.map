{"version":3,"file":"static/js/2698.a4334dde.chunk.js","mappings":"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","sources":["Components/contactUs/Contact.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Footer from \"../element/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Contact = () => {\r\n  const [contactData, setContactData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  const [t, i18n] = useTranslation(\"global\")\r\n\r\n\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  let captchaKey = Cookies.get(\"captchaKey\");\r\n  const recaptchaLanguage = Cookies.get(\"selectedLanguage\");\r\n\r\n  const [hoverColor, setHoverColor] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setHoverColor(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoverColor(false);\r\n  };\r\n  const [recaptchaKey, setRecaptchaKey] = useState(captchaKey);\r\n  const [recaptchaVisible, setRecaptchaVisible] = useState(true);\r\n\r\n  const handleRecaptchaReset = () => {\r\n    setRecaptchaVisible(false);\r\n    setRecaptchaKey(generateRecaptchaKey());\r\n    setTimeout(() => {\r\n      setRecaptchaVisible(true);\r\n    }, 0); // Using setTimeout to unmount and then mount the ReCAPTCHA\r\n  };\r\n\r\n  const generateRecaptchaKey = () => {\r\n    return Math.random().toString(36).substring(2, 15);\r\n  };\r\n  const getData = async () => {\r\n    try {\r\n      const response = await axios.get(BaseApi + `/page/contact-us`);\r\n      setContactData(response.data.response.contact_details);\r\n    } catch (error) {\r\n      console.log(\"Error getting contact information!\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const [isCaptchaVerified, setIsCaptchaVerified] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (formData.name === \"\") {\r\n        newErrors.name = t(\"messageForm.nameRequired\");\r\n      }\r\n      if (formData.email === \"\") {\r\n        newErrors.email = t(\"messageForm.emailRequired\");\r\n      } else if (!isValidEmail(formData.email)) {\r\n        newErrors.email = \"Invalid email format\";\r\n      }\r\n      if (formData.subject === \"\") {\r\n        newErrors.subject = t(\"messageForm.subjectRequired\");\r\n      }\r\n      if (formData.message === \"\") {\r\n        newErrors.message = t(\"messageForm.messageRequired\");\r\n      }\r\n      if (!isCaptchaVerified) {\r\n        newErrors.captcha = t(\"messageForm.captchaRequired\");\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      // Function to validate email format\r\n      function isValidEmail(email) {\r\n        // Use a regular expression to validate email format\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        return emailPattern.test(email);\r\n      }\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        if (isCaptchaVerified) {\r\n          setLoading(true);\r\n          const response = await axios.post(\r\n            BaseApi + \"/page/contact-us\",\r\n            formData\r\n          );\r\n          setLoading(false);\r\n           // Reset the reCAPTCHA\r\n           handleRecaptchaReset();\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: t(\"messageForm.messageSuccessTitle\"),\r\n              icon: \"success\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n            setFormData({\r\n              ...formData,\r\n              name: \"\",\r\n              email: \"\",\r\n              subject: \"\",\r\n              message: \"\",\r\n            });\r\n          } else if (response.data.status === 500) {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: t(\"messageForm.close\"),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: t(\"messageForm.messageFailedTitle\"),\r\n        text: t(\"messageForm.messageFailedTxt\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"messageForm.close\"),\r\n      });\r\n    }\r\n    console.log(formData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"contactUs\">\r\n        <NavBar />\r\n        {loading ? (\r\n          <div className=\"loader-container\"></div>\r\n        ) : (\r\n          <>\r\n            <div className=\"ContactSection1 text-center\">\r\n              <h1>{t(\"navHeaders.contactus\")}</h1>\r\n              <h6 className=\"text-muted fw-normal\">\r\n                {\" \"}\r\n                <Link to=\"/\" style={{ color: \"grey\" }}>\r\n                {t(\"navHeaders.home\")}\r\n                </Link>{\" \"}\r\n                /{t(\"navHeaders.contactus\")}\r\n              </h6>\r\n            </div>\r\n            <div className=\"ContactSection3 container mt-3\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"contactInfo\">\r\n                    <div className=\"card mb-3 mt-3\">\r\n                      <div className=\"card-body\">\r\n                        {/* <div className=\"ContactTopHadding\">\r\n                          <p className=\"h4 card-title\">{t(\"contactPage.header1\")}</p>\r\n                          <p className=\"card-body\">\r\n                          {t(\"contactPage.header2.1\")}{\" \"}\r\n                            <br></br>\r\n                            {t(\"contactPage.header2.2\")}\r\n                          </p>\r\n                        </div> */}\r\n                        <div className=\"row\">\r\n                          <div className=\"ContactDetails col-sm-12\">\r\n                            <i>\r\n                              <img src=\"/Images/email-icon.png\" alt=\"\" />\r\n                            </i>\r\n                            <div className=\"ContactDetailsBx\">\r\n                              <strong>{t(\"contactPage.contactEmail\")}:</strong>\r\n                              <span> {contactData.email}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ContactDetails col-sm-12\">\r\n                            <i>\r\n                              <img src=\"/Images/call-icon.png\" alt=\"\" />\r\n                            </i>\r\n                            <div className=\"ContactDetailsBx\">\r\n                              <strong>{t(\"contactPage.contactPhone\")}: </strong>\r\n                              <span> {contactData.contact}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"ContactDetails col-sm-12\">\r\n                            <i>\r\n                              <img src=\"/Images/location-icon.png\" alt=\"\" />\r\n                            </i>\r\n                            <div className=\"ContactDetailsBx\">\r\n                              <strong>{t(\"contactPage.contactLocation\")}:</strong>{\" \"}\r\n                              <span> {contactData.address}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"ContactForm\">\r\n                    <form>\r\n                      <div className=\"mb-4\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className={`form-control ${\r\n                            errors.name && \"input-error\"\r\n                          }`}\r\n                          id=\"exampleInputEmail1\"\r\n                          aria-describedby=\"emailHelp\"\r\n                          name=\"name\"\r\n                          value={formData.name}\r\n                          placeholder={t(\"faq.namePlaceholder\")}\r\n                          onChange={handleChange}\r\n                        />\r\n                        {errors.name && (\r\n                          <div className=\"text-danger\">{errors.name}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <input\r\n                          type=\"email\"\r\n                          className={`form-control ${\r\n                            errors.email && \"input-error\"\r\n                          }`}\r\n                          id=\"exampleInputEmail1\"\r\n                          aria-describedby=\"emailHelp\"\r\n                          name=\"email\"\r\n                          value={formData.email}\r\n                          placeholder={t(\"faq.emailPlaceholder\")}\r\n                          onChange={handleChange}\r\n                        />\r\n                        {errors.email && (\r\n                          <div className=\"text-danger\">{errors.email}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <select\r\n                          className={`form-select ${\r\n                            errors.subject && \"input-error\"\r\n                          }`}\r\n                          aria-label=\"Default select example\"\r\n                          value={formData.subject}\r\n                          name=\"subject\"\r\n                          onChange={handleChange}\r\n                        >\r\n                          <option>{t(\"faq.selectPlaceholder\")}</option>\r\n                        <option value=\"1\">{t(\"faq.messageFormSelectOption1\")}</option>\r\n                        <option value=\"2\">{t(\"faq.messageFormSelectOption2\")}</option>\r\n                        <option value=\"3\">{t(\"faq.messageFormSelectOption3\")}</option>\r\n                        <option value=\"3\">{t(\"faq.messageFormSelectOption4\")}</option>\r\n                        <option value=\"3\">{t(\"faq.messageFormSelectOption5\")}</option>\r\n                        </select>\r\n                        {errors.subject && (\r\n                          <div className=\"text-danger\">{errors.subject}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"mb-4\">\r\n                        <textarea\r\n                          className={`form-control ${\r\n                            errors.message && \"input-error\"\r\n                          }`}\r\n                          id=\"exampleFormControlTextarea1\"\r\n                          rows=\"3\"\r\n                          name=\"message\"\r\n                          value={formData.message}\r\n                          placeholder={t(\"faq.descPlaceholder\")}\r\n                          onChange={handleChange}\r\n                        ></textarea>\r\n                        {errors.message && (\r\n                          <div className=\"text-danger\">{errors.message}</div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"reCaptchaLogin mb-4\">\r\n                        <ReCAPTCHA\r\n                        key={recaptchaKey}\r\n                          sitekey={captchaKey}\r\n                          hl={recaptchaLanguage}\r\n                          onChange={(value) => setIsCaptchaVerified(value)}\r\n                        />\r\n                        {errors.captcha && (\r\n                          <div className=\"text-danger\">{errors.captcha}</div>\r\n                        )}\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn w-100\"\r\n                        onClick={handleClick}\r\n                        style={{\r\n                          backgroundColor: `${\r\n                            secondaryColor &&\r\n                            (hoverColor ? secondaryColor : primaryColor)\r\n                          }`,\r\n                        }}\r\n                        onMouseEnter={handleMouseEnter}\r\n                        onMouseLeave={handleMouseLeave}\r\n                      >\r\n                        {/* SEND MESSAGE */}\r\n                        {t(\"faq.sendMessageButton\")}\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"MapIfream\">\r\n                    <iframe\r\n                      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d50470.0761220329!2d-122.47879945360117!3d37.757692829126256!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x80859a6d00690021%3A0x4a501367f076adff!2sSan%20Francisco%2C%20CA%2C%20USA!5e0!3m2!1sen!2sin!4v1700197119524!5m2!1sen!2sin\"\r\n                      width=\"600\"\r\n                      height=\"450\"\r\n                      style={{ border: \"0\" }}\r\n                      allowFullScreen=\"\"\r\n                      loading=\"lazy\"\r\n                      referrerPolicy=\"no-referrer-when-downgrade\"\r\n                    ></iframe>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Footer />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["Contact","contactData","setContactData","useState","loading","setLoading","formData","setFormData","name","email","subject","message","errors","setErrors","t","i18n","useTranslation","primaryColor","Cookies","secondaryColor","captchaKey","recaptchaLanguage","hoverColor","setHoverColor","recaptchaKey","setRecaptchaKey","recaptchaVisible","setRecaptchaVisible","generateRecaptchaKey","Math","random","toString","substring","useEffect","async","response","axios","BaseApi","data","contact_details","error","console","log","getData","window","scrollTo","isCaptchaVerified","setIsCaptchaVerified","handleChange","e","value","target","prevData","prev","_jsx","_Fragment","children","_jsxs","className","NavBar","Link","to","style","color","src","alt","contact","address","type","id","placeholder","onChange","rows","ReCAPTCHA","sitekey","hl","captcha","onClick","preventDefault","newErrors","isValidEmail","test","Object","keys","length","setTimeout","status","Swal","title","icon","confirmButtonText","text","backgroundColor","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","width","height","border","allowFullScreen","referrerPolicy","Footer"],"sourceRoot":""}