{"version":3,"file":"static/js/2158.6574c157.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APChangeUsername.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangeUsername = () => {\r\n  const [userData, setUserData] = useState({\r\n    new_username: \"\",\r\n    conf_username: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    new_username: \"\",\r\n    conf_username: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/changeusername\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const { new_username, conf_username } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (!new_username || !conf_username) {\r\n        setErrors({\r\n          new_username: new_username ? \"\" : \"New Username is required\",\r\n          conf_username: conf_username ? \"\" : \"Confirm Username is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check if new email and confirm email match\r\n      if (new_username !== conf_username) {\r\n        setErrors({\r\n          conf_username: \"New Username and Confirm Username do not match\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check for valid email format\r\n      // const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      // if (!emailFormat.test(new_email) || !emailFormat.test(conf_email)) {\r\n      //   setErrors({\r\n      //     new_email: 'Invalid Email Address',\r\n      //     conf_email: 'Invalid Email Address',\r\n      //   });\r\n      //   return;\r\n      // }\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update Username\",\r\n        text: \"Do you want to update the username?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/changeusername\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Username updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n          setUserData({\r\n            ...userData,\r\n            new_username: \"\",\r\n            conf_username: \"\",\r\n          });\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n      // }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update username. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Typography color=\"text.primary\">Change Username</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Change Admin Username</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Current Username<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      placeholder=\"Current Username\"\r\n                      value={userData.username}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      New Username<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.new_username && \"input-error\"\r\n                      }`}\r\n                      name=\"new_username\"\r\n                      placeholder=\"New Username\"\r\n                      value={userData.new_username}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.new_username && (\r\n                      <div className=\"text-danger\">{errors.new_username}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Username<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.conf_username && \"input-error\"\r\n                      }`}\r\n                      name=\"conf_username\"\r\n                      placeholder=\"Confirm Username\"\r\n                      value={userData.conf_username}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.conf_username && (\r\n                      <div className=\"text-danger\">{errors.conf_username}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"adminLowerButtons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button1\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      UPDATE\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button2\"\r\n                      onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                    >\r\n                      CANCEL\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangeUsername;\r\n"],"names":["APChangeUsername","userData","setUserData","useState","new_username","conf_username","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","username","disabled","onChange","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}