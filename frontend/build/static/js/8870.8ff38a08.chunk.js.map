{"version":3,"file":"static/js/8870.8ff38a08.chunk.js","mappings":"4XAmBA,MAy+BA,EAz+B8BA,MACbC,EAAAA,EAAAA,QAAO,MAAtB,MAmBOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CACnCG,aAAc,GACdC,cAAe,GACfC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,gBAAiB,GACjBC,IAAK,GACLC,cAAe,GACfC,aAAc,GACdC,iBAAkB,MAEbC,EAAeC,IAAoBjB,EAAAA,EAAAA,UAAS,OAE5CkB,EAASC,IAAcnB,EAAAA,EAAAA,WAAS,GACjCoB,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WACtBE,EAASF,EAAAA,EAAAA,IAAY,UAErBG,GAAWC,EAAAA,EAAAA,OAEX,KAAEC,IAASC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BjC,GAAakC,IAAI,IACZA,EACH,CAACH,GAAOC,MAEV7B,GAAW+B,IAAI,IACVA,EACH,CAACH,GAAO,MACP,EAwCCI,EAAyBC,GACT,yBACDC,KAAKD,GAgTpBE,EAAoBC,UACxB,MAAMC,EAAYV,EAAEG,OACdQ,EAAOD,EAAUE,MAAM,GAG7B,GAAID,EAAM,CAKR,GAHwBA,EAAKE,KACN,OASrB,OANAC,IAAAA,KAAU,CACRC,MAAO,mCACPC,KAAM,UACNC,kBAAmB,eAErBP,EAAUR,MAAQ,IAKpB,MAAMgB,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,OAAOC,IAAIC,gBAAgBZ,GAErCO,EAAIM,OAAS,KACX,MAAMC,EAAQP,EAAIQ,aACZC,EAAST,EAAIU,cAEfH,EAAQ,KAAOE,EAAS,KAC1Bb,IAAAA,KAAU,CACRC,MAAO,oDACPC,KAAM,UACNC,kBAAmB,UAErBP,EAAUR,MAAQ,KAGlB7B,EAAU,IACLD,EACHyD,cAAe,KAkjB3B,SAAyBlB,GACvB,OAAO,IAAImB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcxB,GACzBsB,EAAWT,OAAS,KAClBO,EAAQE,EAAWG,OAAO,EAE5BH,EAAWI,QAAWC,IACpBN,EAAOM,EAAM,CACd,GAEL,CAzjBUC,CAAgB5B,GAAM6B,MAAMC,IAC1BvE,EAAY,IAAKD,EAAU4D,cAAeY,IAC1CrD,EAAiBqD,EAAO,IAE5B,CAEJ,GAUIC,EAAsB1C,IAC1BA,EAAE2C,iBACsB,IAApB1E,EAAS2E,QACX1E,EAAY,IAAKD,EAAU2E,OAAQ,IAEb,IAApB3E,EAAS2E,QACX1E,EAAY,IAAKD,EAAU2E,OAAQ,GACrC,GAKKC,EAAqBC,IAA0B3E,EAAAA,EAAAA,UAAS,OACxD4E,EAAaC,IAAkB7E,EAAAA,EAAAA,UAAS,KAE/C8E,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAASC,SAASC,cAAc,UAUtC,OATAF,EAAO9B,IAAO,+CAA8C1B,qBAC5DwD,EAAO1B,OAAS,KACdsB,EACE,IAAIzB,OAAOgC,OAAOC,KAAKC,OAAOC,qBAEhCC,QAAQC,IAAIb,EAAoB,EAElCM,SAASQ,KAAKC,YAAYV,GAEnB,KACLC,SAASQ,KAAKE,YAAYX,EAAO,CAClC,GACA,IAEH,MAAMY,EAAwB9D,IAC5B,MAAM,MAAEE,GAAUF,EAAEG,OACpB4D,GAAmB,GACN,IAAT7D,GACF6D,GAAmB,GAER,IAAT7D,GACF7B,EAAU,CACRO,SAAU,KAIdV,GAAa8F,IAAU,IAClBA,EACHpF,SAAUsB,MAGR2C,GAEFA,EAAoBoB,oBAClB,CACEC,MAAOhE,EACPiE,MAAO,CAAC,cAEV,CAACC,EAAaxB,KAEVI,EADa,OAAXJ,GAAmBwB,EAEnBA,EAAYC,KAAKC,GAAeA,EAAWC,cAG9B,GACjB,IAIoB,KAAtBtG,EAASW,UACXoE,EAAe,GACjB,GAEKwB,EAAiBT,IAAsB5F,EAAAA,EAAAA,WAAS,GAwBvD,OAZA8E,EAAAA,EAAAA,YAAU,KAEH1D,GAveSkB,WACd,IACEnB,GAAW,GACX,MAAMmF,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,0BAAyB9E,IACpC,KACA,CACE+E,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOxF,EACPyF,QAASvF,KAIfH,GAAW,GACXpB,EAAYuG,EAASQ,KAAKR,UAC1BrF,EAAiBqF,EAASQ,KAAKR,SAAS5C,cAG1C,CAAE,MAAOS,GACPhD,GAAW,GACXmE,QAAQC,IAAI,yCACd,GAqdEwB,GACA7D,OAAO8D,SAAS,EAAG,IAJnBxF,EAAS,SAKX,GACC,CAACJ,EAAUI,KAGZyF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETrG,GACCkG,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAaE,KAAK,eAAcL,UAC7CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMxG,EAAS,2BAA2B2F,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMxG,EAAS,gBAAgB2F,SACzC,eAIDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,gCAKrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,mBACjCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAWH,UACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,gBAC3BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAExCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOE,cAAgB,gBAEzB2B,KAAK,eACLwG,YAAY,eACZvG,MAAOjC,EAASK,aAChBoI,SAAU3G,EACV4G,UAAQ,IAETvI,EAAOE,eACNiH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOE,mBAGzC8G,EAAAA,EAAAA,MAAA,OAAKK,UAAU,wDAAuDH,SAAA,EACpEF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,aAAamB,QAAQ,gBAAetB,SAAA,CAAC,mBACrCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAe3CC,EAAAA,EAAAA,KAACsB,IAAU,CACTC,MAAM,OACN5G,MAAOjC,EAASM,cAChBmI,SAAWxG,GACTH,EAAa,CACXI,OAAQ,CAAEF,KAAM,gBAAiBC,WAGrC6G,MAAO,CAAEC,UAAW,QAASrF,OAAQ,SACrC8E,YAAY,0BAEbrI,EAAOG,gBACNgH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOG,oBAGzC6G,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOI,UAAY,gBAErByB,KAAK,WACLC,MAAOjC,EAASO,SAChBiI,YAAY,WACZC,SAAU3G,IAEX3B,EAAOI,WACN+G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOI,eAGzC4G,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,cAC7BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEtCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOK,YAAc,gBAEvBwB,KAAK,aACLC,MAAOjC,EAASQ,WAChBgI,YAAY,aACZC,SAAU3G,IAEX3B,EAAOK,aACN8G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOK,iBAGzC2G,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,aAC9BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAErCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOM,WAAa,gBAEtBuB,KAAK,YACLC,MAAOjC,EAASS,UAChB+H,YAAY,YACZC,SAAU3G,IAEX3B,EAAOM,YACN6G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOM,gBAGzC0G,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,WAChCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEnCC,EAAAA,EAAAA,KAAA,YACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOO,SAAW,gBAEpBsB,KAAK,UACLC,MAAOjC,EAASU,QAChB8H,YAAY,UACZC,SAAU3G,IAEX3B,EAAOO,UACN4G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOO,cAGzCyG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,WAGzCC,EAAAA,EAAAA,KAAA,SACEc,MAAM,eACNE,KAAK,OACLC,GAAG,WACHS,MAAM,QACNhH,KAAK,OACLiH,OAAO,oBACPR,SAAW1G,GAAMQ,EAAkBR,MAKrCuF,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,4FAIrCnG,IACCiG,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEE,UAAU,qBACVrE,IAAKjC,EACLgI,IAAI,aAELlJ,EAAS4D,cAQR,IAEA0D,EAAAA,EAAAA,KAAA,UAAQE,UAAU,YAAYU,QApTlCiB,KAClBhI,EAAiB,MACjBlB,EAAY,IAAKD,EAAU4D,cAAe,KAE1CR,OAAOzC,SAASyI,QAAQ,EAgTiD/B,SAAC,kBAO5DF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOQ,UAAY,gBAErBqB,KAAK,WACLC,MAAOjC,EAASW,SAChB6H,YAAY,WACZC,SAAU5C,IAEXf,EAAYuE,OAAS,IACpB/B,EAAAA,EAAAA,KAAA,OACEE,UAAU,uBACVsB,MAAO,CAAEQ,QAAS/C,EAAkB,OAAS,IAAKc,UAElDC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAC7BvC,EAAYsB,KAAI,CAACmD,EAAYC,KAC5BlC,EAAAA,EAAAA,KAAA,OAAiBE,UAAU,kBAAiBH,UAC1CF,EAAAA,EAAAA,MAAA,MACEe,QAASA,IAnQRqB,KAE7B1D,EAAqB,CAAE3D,OAAQ,CAAEF,KAAM,WAAYC,MAAOsH,KAE1DzD,GAAmB,GAEnBf,EAAe,GAAG,EA8PY0E,CAAsBF,GACvBlC,SAAA,EAEDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,eAAcH,UAC3BC,EAAAA,EAAAA,KAACoC,EAAAA,EAAc,CAAC5B,SAAS,YACpB,KACPR,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qBAAoBH,SAChCkC,OAEE,QAbDC,SAoBjBrJ,EAAOQ,WACN2G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOQ,eAGzCwG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,kBACzBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE1CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOS,SAAW,gBAEpBoB,KAAK,UACLC,MAAOjC,EAASY,QAChB4H,YAAY,iBACZC,SAAU3G,IAEX3B,EAAOS,UACN0G,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOS,cAGzCuG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,0BACjBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAElDC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,wBACHf,UAAY,gBACVrH,EAAOU,iBAAmB,gBAE5BmB,KAAK,kBACLC,MAAOjC,EAASa,gBAChB2H,YAAY,yBACZC,SAAU3G,IAEX3B,EAAOU,kBACNyG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBlH,EAAOU,sBAIdsG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,qBAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBAAerH,EAAOW,KAAO,gBACzCkB,KAAK,MACLC,MAAOjC,EAASc,IAChB0H,YAAY,kBACZC,SAAU3G,IAEX3B,EAAOW,MACNwG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOW,OAEvCwG,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYf,UAAU,YAAWH,SAAC,yDAI5CC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,mBAErBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOY,eAAiB,gBAE1BiB,KAAK,gBACLC,MAAOjC,EAASe,cAChByH,YAAY,gBACZC,SAAU3G,EACV4G,UAAQ,IAETvI,EAAOY,gBACNuG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOY,oBAGzCoG,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,YAC/BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEpCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOwJ,UAAY,gBAErB3H,KAAK,eACLC,MAAOjC,EAASgB,aAChBwH,YAAY,WACZC,SAAU3G,IAEX3B,EAAOa,eACNsG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAElH,EAAOa,gBAEvCsG,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,+GAKxCF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,oBACvBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE5CC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,WACLC,GAAG,gBACHf,UAAY,gBACVrH,EAAOc,kBAAoB,gBAE7Be,KAAK,mBACLC,MAAOjC,EAASiB,iBAChBuH,YAAY,mBACZC,SAAU3G,IAEX3B,EAAOc,mBACNqG,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBlH,EAAOc,uBAIdqG,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,GAAEH,SAAC,mBACjBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,mBAAkBf,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qBACHC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBH,SACT,IAApBrH,EAAS2E,QACR2C,EAAAA,EAAAA,KAAA,UACEE,UAAU,aACVU,QAASzD,EAAmB4C,SAC7B,YAIDC,EAAAA,EAAAA,KAAA,UACEE,UAAU,cACVU,QAASzD,EAAmB4C,SAC7B,mBAOPC,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYf,UAAU,YAAWH,SAAC,kGAI1CC,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYf,UAAU,cAAaH,SAAC,4DAI9CF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qBAAoBH,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QA72BA1F,UAClB,IACE,MAAMoH,EAAY,CAAC,EA6EnB,GA3E8B,KAA1B5J,EAASK,cAAiD,OAA1BL,EAASK,eAC3CuJ,EAAUvJ,aAAe,2BACzB+C,OAAO8D,SAAS,EAAG,IAEU,KAA3BlH,EAASM,eAAmD,OAA3BN,EAASM,gBAC5CsJ,EAAUtJ,cAAgB,8BAC1B8C,OAAO8D,SAAS,EAAG,IAEK,KAAtBlH,EAASO,UAAyC,OAAtBP,EAASO,WACvCqJ,EAAUrJ,SAAW,uBACrB6C,OAAO8D,SAAS,EAAG,IAEO,KAAxBlH,EAASQ,aACXoJ,EAAUpJ,WAAa,yBACvB4C,OAAO8D,SAAS,EAAG,IAEM,KAAvBlH,EAASS,YACXmJ,EAAUnJ,UAAY,wBACtB2C,OAAO8D,SAAS,EAAG,IAEI,KAArBlH,EAASU,SAAuC,OAArBV,EAASU,UACtCkJ,EAAUlJ,QAAU,sBACpB0C,OAAO8D,SAAS,EAAG,IAEK,KAAtBlH,EAASW,UAAyC,OAAtBX,EAASW,WACvCiJ,EAAUjJ,SAAW,uBACrByC,OAAO8D,SAAS,EAAG,IAEI,KAArBlH,EAASY,SACXgJ,EAAUhJ,QAAU,6BACpBwC,OAAO8D,SAAS,EAAG,IACT9E,EAAsBpC,EAASY,WACzCgJ,EAAUhJ,QAAU,+CAEW,KAA7BZ,EAASa,iBACX+I,EAAU/I,gBAAkB,qCAC5BuC,OAAO8D,SAAS,EAAG,IACT9E,EAAsBpC,EAASa,mBACzC+I,EAAU/I,gBACR,+CAE2B,KAA3Bb,EAASe,cACX6I,EAAU7I,cAAgB,4BAEhB8I,EAAa7J,EAASe,iBAChC6I,EAAU7I,cAAgB,wBAGE,KAA1Bf,EAASgB,eACX4I,EAAU5I,aAAe,wBAGO,KAA9BhB,EAASiB,mBACX2I,EAAU3I,iBAAmB,gCAG3BjB,EAASgB,cACPhB,EAASgB,aAAaqI,OAAS,IACjCO,EAAU5I,aAAe,qCAIzBhB,EAASiB,kBACPjB,EAASiB,iBAAiBoI,OAAS,IACrCO,EAAU3I,iBAAmB,qCAI7BjB,EAASgB,cAAgBhB,EAASiB,kBAChCjB,EAASgB,eAAiBhB,EAASiB,mBACrC2I,EAAU3I,iBACR,8CAIFjB,EAASc,IAAK,CAChB,MAAMgJ,EACJ,uDACE9J,EAASc,MAAQgJ,EAAUxH,KAAKtC,EAASc,OAC3C8I,EAAU9I,IAAM,qBAEpB,CAKA,SAAS+I,EAAaE,GAGpB,MADqB,kDACDzH,KAAKyH,EAC3B,CA0IA,GAjJA3J,EAAUwJ,GAiJ4B,IAAlCI,OAAOC,KAAKL,GAAWP,OAAc,CAUvC,UATiCxG,IAAAA,KAAU,CACzCC,MAAO,mBACPoH,KAAM,sCACNnH,KAAM,WACNoH,kBAAkB,EAClBnH,kBAAmB,MACnBoH,iBAAkB,QAGGC,YAAa,CAClChJ,GAAW,GAEX,MAAMmF,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,0BAAyB9E,IACpC5B,EACA,CACE2G,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOxF,EACPyF,QAASvF,KAKfH,GAAW,GAEkB,MAAzBmF,EAASQ,KAAKrC,QAChB9B,IAAAA,KAAU,CACRC,MAAO,iCACPC,KAAM,UACNC,kBAAmB,UAQrBtB,EAAS,iBAETmB,IAAAA,KAAU,CACRC,MAAO0D,EAASQ,KAAKsD,QACrBvH,KAAM,QACNC,kBAAmB,SAGzB,CAEF,CACF,CAAE,MAAOqB,GACPhD,GAAW,GACXwB,IAAAA,KAAU,CACRC,MAAO,SACPoH,KAAM,qDACNnH,KAAM,QACNC,kBAAmB,UAErBwC,QAAQC,IAAI,6BAA8BpB,EAC5C,GAykBuCgD,SACtB,UAGDC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAASA,IAAMxG,EAAS,gBAAgB2F,SACzC,uBAOTC,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,YAId,C,qBCr/BHC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+JACD,cACJN,EAAQ,EAAUG,C","sources":["Components/adminpanel/Employers/APEditEmployerDetails.js","../node_modules/@mui/icons-material/LocationOn.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import styles\r\nimport APFooter from \"../Elements/APFooter\";\r\nconst APEditEmployerDetails = () => {\r\n  const editor = useRef(null);\r\n\r\n  // const [userData, setUserData] = useState({\r\n  //   company_name: \"\",\r\n  //   company_about: \"\",\r\n  //   position: \"\",\r\n  //   first_name: \"\",\r\n  //   last_name: \"\",\r\n  //   address: \"\",\r\n  //   location: \"\",\r\n  //   contact: \"\",\r\n  //   company_contact: \"\",\r\n  //   profile_image: \"\",\r\n  //   company_website: \"\",\r\n  //   email_address: \"\",\r\n  //   new_password: \"\",\r\n  //   confirm_password: \"\",\r\n  //   status: \"\",\r\n  // });\r\n  const [userData, setUserData] = useState([]);\r\n  const [errors, setErrors] = useState({\r\n    company_name: \"\",\r\n    company_about: \"\",\r\n    position: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address: \"\",\r\n    location: \"\",\r\n    contact: \"\",\r\n    company_contact: \"\",\r\n    url: \"\",\r\n    email_address: \"\",\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const mapKey = Cookies.get(\"mapKey\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { slug } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/users/editusers/${slug}`,\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setSelectedImage(response.data.response.profile_image);\r\n\r\n      //   console.log(paymentHistory);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateContactNumber = (number) => {\r\n    const numberRegex = /^\\+?\\d{1,3}-?\\d{9,15}$/; // Allow 1 to 15 digits\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.company_name === \"\" || userData.company_name === null) {\r\n        newErrors.company_name = \"Company Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.company_about === \"\" || userData.company_about === null) {\r\n        newErrors.company_about = \"Company Profile is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.position === \"\" || userData.position === null) {\r\n        newErrors.position = \"Position is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.first_name === \"\") {\r\n        newErrors.first_name = \"First Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.last_name === \"\") {\r\n        newErrors.last_name = \"Last Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.address === \"\" || userData.address === null) {\r\n        newErrors.address = \"Address is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.location === \"\" || userData.location === null) {\r\n        newErrors.location = \"Location is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.contact === \"\") {\r\n        newErrors.contact = \"Contact Number is required\";\r\n        window.scrollTo(0, 0);\r\n      } else if (!validateContactNumber(userData.contact)) {\r\n        newErrors.contact = \"Please enter contact number under 15 digits\";\r\n      }\r\n      if (userData.company_contact === \"\") {\r\n        newErrors.company_contact = \"Company Contact Number is required\";\r\n        window.scrollTo(0, 0);\r\n      } else if (!validateContactNumber(userData.company_contact)) {\r\n        newErrors.company_contact =\r\n          \"Please enter contact number under 15 digits\";\r\n      }\r\n      if (userData.email_address === \"\") {\r\n        newErrors.email_address = \"Email Address is required\";\r\n        // window.scrollTo(0, 0);\r\n      } else if (!isValidEmail(userData.email_address)) {\r\n        newErrors.email_address = \"Invalid email format\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.new_password === \"\") {\r\n        newErrors.new_password = \"Password is required\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.confirm_password === \"\") {\r\n        newErrors.confirm_password = \"Confirm Password is required\";\r\n        // window.scrollTo(0, 0);\r\n      }\r\n      if (userData.new_password) {\r\n        if (userData.new_password.length < 8) {\r\n          newErrors.new_password = \"Please enter atleast 8 characters\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.confirm_password) {\r\n        if (userData.confirm_password.length < 8) {\r\n          newErrors.confirm_password = \"Please enter atleast 8 characters\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.new_password && userData.confirm_password) {\r\n        if (userData.new_password !== userData.confirm_password) {\r\n          newErrors.confirm_password =\r\n            \"Password and Confirm Password do not match\";\r\n          // window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.url) {\r\n        const urlFormat =\r\n          /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n        if (userData.url && !urlFormat.test(userData.url)) {\r\n          newErrors.url = \"Invalid URL format\";\r\n        }\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      // Function to validate email format\r\n      function isValidEmail(email) {\r\n        // Use a regular expression to validate email format\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        return emailPattern.test(email);\r\n      }\r\n\r\n      // const {\r\n      //   company_name,\r\n      //   company_about,\r\n      //   position,\r\n      //   first_name,\r\n      //   last_name,\r\n      //   address,\r\n      //   location,\r\n      //   contact,\r\n      //   company_contact,\r\n      //   company_website,\r\n      //   email_address,\r\n      //   new_password,\r\n      //   confirm_password,\r\n      // } = userData;\r\n\r\n      // // Check if email fields are empty\r\n      // if (\r\n      //   !company_name ||\r\n      //   !company_about ||\r\n      //   !position ||\r\n      //   !first_name ||\r\n      //   !last_name ||\r\n      //   !address ||\r\n      //   !location ||\r\n      //   !contact ||\r\n      //   !company_contact ||\r\n      //   !email_address\r\n      // ) {\r\n      //   setErrors({\r\n      //     company_name: company_name ? \"\" : \"Company Name is required\",\r\n      //     company_about: company_about ? \"\" : \"Company Profile is required\",\r\n      //     position: position ? \"\" : \"Position is required\",\r\n      //     first_name: first_name ? \"\" : \"First Name is required\",\r\n      //     last_name: last_name ? \"\" : \"Last Name is required\",\r\n      //     address: address ? \"\" : \"Address is required\",\r\n      //     location: location ? \"\" : \"Location is required\",\r\n      //     contact: contact ? \"\" : \"Contact is required\",\r\n      //     company_contact: company_contact ? \"\" : \"Company Number is required\",\r\n      //     email_address: email_address ? \"\" : \"Email is required\",\r\n      //   });\r\n      //   return;\r\n      // }\r\n\r\n      // if (new_password) {\r\n      //   if (!new_password || !confirm_password) {\r\n      //     setErrors({\r\n      //       new_password: new_password ? \"\" : \"New Password is required\",\r\n      //       confirm_password: confirm_password\r\n      //         ? \"\"\r\n      //         : \"Confirm password is required\",\r\n      //     });\r\n      //     return;\r\n      //   }\r\n      //   // Check if new email and confirm email match\r\n      //   if (new_password !== confirm_password) {\r\n      //     setErrors({\r\n      //       confirm_password: \"New Password and Confirm Password do not match\",\r\n      //     });\r\n      //     return;\r\n      //   }\r\n\r\n      //   if (new_password.length < 8 || confirm_password.length < 8) {\r\n      //     setErrors({\r\n      //       new_password: \"Please enter atleast 8 characters\",\r\n      //       confirm_password: \"Please enter atleast 8 characters\",\r\n      //     });\r\n      //     return;\r\n      //   }\r\n      // }\r\n\r\n      // // Validate email using the validateEmail function\r\n      // if (!validateEmail(email_address)) {\r\n      //   setErrors({\r\n      //     email_address: \"Invalid Email Address\",\r\n      //   });\r\n      //   return;\r\n      // }\r\n\r\n      // // Validate contact using the validateEmail function\r\n      // if (!validateContactNumber(contact)) {\r\n      //   setErrors({\r\n      //     contact: \"Please enter 10 digit number\",\r\n      //   });\r\n      //   return;\r\n      // }\r\n      // if (!validateContactNumber(company_contact)) {\r\n      //   setErrors({\r\n      //     company_contact: \"Please enter 10 digits number\",\r\n      //   });\r\n      //   // Scroll to the input element\r\n      //   const inputElement = document.getElementById(\"company_contact_input\");\r\n      //   if (inputElement) {\r\n      //     inputElement.scrollIntoView({ behavior: \"smooth\" });\r\n      //   }\r\n      //   return;\r\n      // }\r\n\r\n      // if (company_website) {\r\n      //   const urlFormat =\r\n      //     /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n      //   if (company_website && !urlFormat.test(company_website)) {\r\n      //     setErrors({\r\n      //       company_website: \"Invalid URL format\",\r\n      //     });\r\n      //     return;\r\n      //   }\r\n      // }\r\n\r\n      // Validate password using the validatePassword function\r\n      // if (!validatePassword(new_password)) {\r\n      //   setErrors({\r\n      //     New_password:\r\n      //       \"Password must be at least 8 characters long and contain at least one special character, one lowercase character, one uppercase character, and one number.\",\r\n      //   });\r\n      //   return;\r\n      // }\r\n\r\n      //   if (userData.password === \"\") {\r\n      //     newErrors.password = \"Password is required\";\r\n      //     window.scrollTo(0, 0);\r\n      //   }\r\n      //   if (userData.confirm_password === \"\") {\r\n      //     newErrors.confirm_password = \"Confirm Password is required\";\r\n      //     window.scrollTo(0, 0);\r\n      //   }\r\n\r\n      // setErrors(newErrors);\r\n\r\n      // // Function to validate email format\r\n      // function isValidEmail(email) {\r\n      //   // Use a regular expression to validate email format\r\n      //   const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n      //   return emailPattern.test(email);\r\n      // }\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Update Employer?\",\r\n          text: \"Do you want to update the Employer?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/users/editusers/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Employer updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            //   setUserData({\r\n            //     ...userData,\r\n            //     new_username: \"\",\r\n            //     conf_username: \"\",\r\n            //   });\r\n            //   window.scrollTo(0, 0);\r\n            navigate(\"/admin/users\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n        // }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update employer. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, profile_image: base64 });\r\n  //   setSelectedImage(base64);\r\n  // };\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n\r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 1MB\r\n\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        fileInput.value = \"\"; // Clear the file input\r\n        return;\r\n      }\r\n\r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n\r\n        if (width < 250 || height < 250) {\r\n          Swal.fire({\r\n            title: \"Minimum image resolution should be 250x250 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          fileInput.value = \"\"; // Clear the file input\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            profile_image: \"\",\r\n          });\r\n\r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, profile_image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, profile_image: \"\" });\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    e.preventDefault();\r\n    if (userData.status === 1) {\r\n      setUserData({ ...userData, status: 0 });\r\n    }\r\n    if (userData.status === 0) {\r\n      setUserData({ ...userData, status: 1 });\r\n    }\r\n  };\r\n\r\n  // Code for loading Location\r\n\r\n  const [autocompleteService, setAutocompleteService] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load Google Maps AutocompleteService after component mounts\r\n    const script = document.createElement(\"script\");\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${mapKey}&libraries=places`;\r\n    script.onload = () => {\r\n      setAutocompleteService(\r\n        new window.google.maps.places.AutocompleteService()\r\n      );\r\n      console.log(autocompleteService);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  const handleLocationChange = (e) => {\r\n    const { value } = e.target;\r\n    setSuggestionTaken(false);\r\n    if (value == \"\") {\r\n      setSuggestionTaken(true);\r\n    }\r\n    if (value != \"\") {\r\n      setErrors({\r\n        location: \"\",\r\n      });\r\n    }\r\n\r\n    setUserData((prevFilter) => ({\r\n      ...prevFilter,\r\n      location: value,\r\n    }));\r\n\r\n    if (autocompleteService) {\r\n      // Call Google Maps Autocomplete API\r\n      autocompleteService.getPlacePredictions(\r\n        {\r\n          input: value,\r\n          types: [\"(cities)\"], // Restrict to cities if needed\r\n        },\r\n        (predictions, status) => {\r\n          if (status === \"OK\" && predictions) {\r\n            setSuggestions(\r\n              predictions.map((prediction) => prediction.description)\r\n            );\r\n          } else {\r\n            setSuggestions([]);\r\n          }\r\n        }\r\n      );\r\n    }\r\n    if (userData.location === \"\") {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const [suggestionTaken, setSuggestionTaken] = useState(false);\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    // Update the input value with the clicked suggestion\r\n    handleLocationChange({ target: { name: \"location\", value: suggestion } });\r\n\r\n    setSuggestionTaken(true);\r\n    // Clear the suggestions\r\n    setSuggestions([]);\r\n    // console.log(filterItem);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/users\")}\r\n                  >\r\n                    Employers\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Edit Employer Details\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Edit Employer</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.company_name && \"input-error\"\r\n                      }`}\r\n                      name=\"company_name\"\r\n                      placeholder=\"Company Name\"\r\n                      value={userData.company_name}\r\n                      onChange={handleChange}\r\n                      disabled\r\n                    />\r\n                    {errors.company_name && (\r\n                      <div className=\"text-danger\">{errors.company_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\" mb-5 DashBoardInputBx DashBoardCreatBx APJoditEditor\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      Company Profile<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    {/* <JoditEditor\r\n                      ref={editor}\r\n                      name=\"company_about\"\r\n                      value={userData.company_about}\r\n                      onChange={(company_about) =>\r\n                        handleChange({\r\n                          target: {\r\n                            value: company_about,\r\n                            name: \"company_about\",\r\n                          },\r\n                        })\r\n                      }\r\n                    /> */}\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      value={userData.company_about}\r\n                      onChange={(value) =>\r\n                        handleChange({\r\n                          target: { name: \"company_about\", value },\r\n                        })\r\n                      }\r\n                      style={{ minHeight: \"250px\", height: \"200px\" }}\r\n                      placeholder=\"Add your text here...\"\r\n                    />\r\n                    {errors.company_about && (\r\n                      <div className=\"text-danger\">{errors.company_about}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Position<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.position && \"input-error\"\r\n                      }`}\r\n                      name=\"position\"\r\n                      value={userData.position}\r\n                      placeholder=\"Position\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.position && (\r\n                      <div className=\"text-danger\">{errors.position}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      First Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.first_name && \"input-error\"\r\n                      }`}\r\n                      name=\"first_name\"\r\n                      value={userData.first_name}\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.first_name && (\r\n                      <div className=\"text-danger\">{errors.first_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Last Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.last_name && \"input-error\"\r\n                      }`}\r\n                      name=\"last_name\"\r\n                      value={userData.last_name}\r\n                      placeholder=\"Last Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.last_name && (\r\n                      <div className=\"text-danger\">{errors.last_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.address && \"input-error\"\r\n                      }`}\r\n                      name=\"address\"\r\n                      value={userData.address}\r\n                      placeholder=\"Address\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.address && (\r\n                      <div className=\"text-danger\">{errors.address}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Image\r\n                    </label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      label=\"Image\"\r\n                      name=\"logo\"\r\n                      accept=\".jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {/* {errors.image && (\r\n                    <div className=\"text-danger\">{errors.image}</div>\r\n                  )} */}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600KB).\r\n                      Min file size 250 X 250 pixels.\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                        {userData.profile_image ? (\r\n                          // <button\r\n                          //   className=\"APButton3\"\r\n                          //   type=\"button\"\r\n                          //   //   onClick={() => deleteImageWithSlug(slug)}\r\n                          // >\r\n                          //   Delete\r\n                          // </button>\r\n                          \"\"\r\n                        ) : (\r\n                          <button className=\"APButton3\" onClick={deleteImage}>\r\n                            Delete\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Location<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.location && \"input-error\"\r\n                      }`}\r\n                      name=\"location\"\r\n                      value={userData.location}\r\n                      placeholder=\"Location\"\r\n                      onChange={handleLocationChange}\r\n                    />\r\n                    {suggestions.length > 0 && (\r\n                      <div\r\n                        className=\"suggestionsAdminSide\"\r\n                        style={{ display: suggestionTaken ? \"none\" : \"\" }}\r\n                      >\r\n                        <ul className=\"locationDropdown\">\r\n                          {suggestions.map((suggestion, index) => (\r\n                            <div key={index} className=\"suggestion-item\">\r\n                              <li\r\n                                onClick={() =>\r\n                                  handleSuggestionClick(suggestion)\r\n                                }\r\n                              >\r\n                                <div className=\"eachLocation\">\r\n                                  <div className=\"locationIcon\">\r\n                                    <LocationOnIcon fontSize=\"small\" />\r\n                                  </div>{\" \"}\r\n                                  <div className=\"locationSuggestion\">\r\n                                    {suggestion}\r\n                                  </div>\r\n                                </div>{\" \"}\r\n                              </li>\r\n                            </div>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {errors.location && (\r\n                      <div className=\"text-danger\">{errors.location}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.contact && \"input-error\"\r\n                      }`}\r\n                      name=\"contact\"\r\n                      value={userData.contact}\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact && (\r\n                      <div className=\"text-danger\">{errors.contact}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"company_contact_input\"\r\n                      className={`form-control ${\r\n                        errors.company_contact && \"input-error\"\r\n                      }`}\r\n                      name=\"company_contact\"\r\n                      value={userData.company_contact}\r\n                      placeholder=\"Company Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_contact && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.company_contact}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Website\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.url && \"input-error\"}`}\r\n                      name=\"url\"\r\n                      value={userData.url}\r\n                      placeholder=\"Company Website\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.url && (\r\n                      <div className=\"text-danger\">{errors.url}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Eg: https://www.google.com or https://google.com\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <h4 className=\"mb-4\">Login Details</h4>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Email Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.email_address && \"input-error\"\r\n                      }`}\r\n                      name=\"email_address\"\r\n                      value={userData.email_address}\r\n                      placeholder=\"Email Address\"\r\n                      onChange={handleChange}\r\n                      disabled\r\n                    />\r\n                    {errors.email_address && (\r\n                      <div className=\"text-danger\">{errors.email_address}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.password && \"input-error\"\r\n                      }`}\r\n                      name=\"new_password\"\r\n                      value={userData.new_password}\r\n                      placeholder=\"Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.new_password && (\r\n                      <div className=\"text-danger\">{errors.new_password}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      * Note: If You want to change User's password, only then\r\n                      fill password below otherwise leave it blank.\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.confirm_password && \"input-error\"\r\n                      }`}\r\n                      name=\"confirm_password\"\r\n                      value={userData.confirm_password}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.confirm_password && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.confirm_password}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"otherSection\">\r\n                    <h4 className=\"\">Other Details</h4>\r\n                    <div class=\"otherSectionBody\">\r\n                      <p>Employer Status</p>\r\n                      <div className=\"activeButtonBox\">\r\n                        {userData.status === 1 ? (\r\n                          <button\r\n                            className=\"activeTrue\"\r\n                            onClick={handleStatusChange}\r\n                          >\r\n                            Active\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"activeFalse\"\r\n                            onClick={handleStatusChange}\r\n                          >\r\n                            Inactive\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div id=\"emailHelp\" className=\"form-text\">\r\n                      Click above to change Employer's status. Changes will be\r\n                      reflect only after submitting form.\r\n                    </div>\r\n                    <div id=\"emailHelp\" className=\"text-danger\">\r\n                      Changes will be reflect only after submitting form.\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"adminBottomButtons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button1\"\r\n                      onClick={handleClick}\r\n                    >\r\n                      SAVE\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary button2\"\r\n                      onClick={() => navigate(\"/admin/users\")}\r\n                    >\r\n                      CANCEL\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditEmployerDetails;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\nexports.default = _default;"],"names":["APEditEmployerDetails","useRef","userData","setUserData","useState","errors","setErrors","company_name","company_about","position","first_name","last_name","address","location","contact","company_contact","url","email_address","new_password","confirm_password","selectedImage","setSelectedImage","loading","setLoading","tokenKey","Cookies","adminID","mapKey","navigate","useNavigate","slug","useParams","handleChange","e","name","value","target","prev","validateContactNumber","number","test","handleFileUpload1","async","fileInput","file","files","size","Swal","title","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","profile_image","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","handleStatusChange","preventDefault","status","autocompleteService","setAutocompleteService","suggestions","setSuggestions","useEffect","script","document","createElement","google","maps","places","AutocompleteService","console","log","body","appendChild","removeChild","handleLocationChange","setSuggestionTaken","prevFilter","getPlacePredictions","input","types","predictions","map","prediction","description","suggestionTaken","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","getData","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","disabled","htmlFor","ReactQuill","theme","style","minHeight","label","accept","alt","deleteImage","reload","length","display","suggestion","index","handleSuggestionClick","LocationOnIcon","password","newErrors","isValidEmail","urlFormat","email","Object","keys","text","showCancelButton","cancelButtonText","isConfirmed","message","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}