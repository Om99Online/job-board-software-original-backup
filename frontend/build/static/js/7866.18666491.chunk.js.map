{"version":3,"file":"static/js/7866.18666491.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APChangePassword.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangePassword = () => {\r\n  const [userData, setUserData] = useState({\r\n    old_password: \"\",\r\n    new_password: \"\",\r\n    conf_password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    old_password: \"\",\r\n    new_password: \"\",\r\n    conf_password: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const userType = Cookies.get(\"usertype\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.old_password === \"\") {\r\n        newErrors.old_password = \"Old password is required\";\r\n      }\r\n      if (userData.new_password === \"\") {\r\n        newErrors.new_password = \"New password is required\";\r\n      } else if (userData.new_password.length < 8) {\r\n        newErrors.new_password = \"Please enter atleast 8 characters\";\r\n      }\r\n      if (userData.conf_password === \"\") {\r\n        newErrors.conf_password = \"Confirm password is required\";\r\n      } else if (userData.conf_password.length < 8) {\r\n        newErrors.conf_password = \"Please enter atleast 8 characters\";\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Update Password\",\r\n          text: \"Do you want to update the password?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/changePassword\",\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Password updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            setUserData({\r\n              ...userData,\r\n              old_password: \"\",\r\n              new_password: \"\",\r\n              conf_password: \"\",\r\n            });\r\n            window.scrollTo(0, 0);\r\n          } else if (response.data.status === 500) {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update password. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change password!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Change Password</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Change Admin Password</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Current Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.old_password && \"input-error\"\r\n                      }`}\r\n                      name=\"old_password\"\r\n                      placeholder=\"Current Password\"\r\n                      value={userData.old_password}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.old_password && (\r\n                      <div className=\"text-danger\">{errors.old_password}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      New Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.new_password && \"input-error\"\r\n                      }`}\r\n                      name=\"new_password\"\r\n                      placeholder=\"New Password\"\r\n                      value={userData.new_password}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.new_password && (\r\n                      <div className=\"text-danger\">{errors.new_password}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Password<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.conf_password && \"input-error\"\r\n                      }`}\r\n                      name=\"conf_password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={userData.conf_password}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.conf_password && (\r\n                      <div className=\"text-danger\">{errors.conf_password}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangePassword;\r\n"],"names":["APChangePassword","userData","setUserData","useState","old_password","new_password","conf_password","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","async","newErrors","length","Object","keys","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","status","message","error","console","log","APFooter"],"sourceRoot":""}