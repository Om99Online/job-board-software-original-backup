{"version":3,"file":"static/js/239.1d366149.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APSetContactAddress.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APSetContactAddress = () => {\r\n  const [userData, setUserData] = useState({\r\n    company_name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    contact: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    company_name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    contact: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(BaseApi + \"/admin/settings\", null, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n          token: tokenKey,\r\n          adminid: adminID,\r\n        },\r\n      });\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const { company_name, email, contact, address } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (!company_name || !email || !contact || !address) {\r\n        setErrors({\r\n          company_name: company_name ? \"\" : \"Company Name is required\",\r\n          email: email ? \"\" : \"Email is required\",\r\n          contact: contact ? \"\" : \"Contact Number is required\",\r\n          address: address ? \"\" : \"Address is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check for valid email format\r\n      const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailFormat.test(email)) {\r\n        setErrors({\r\n          email: \"Invalid Email Address\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Validation: Check if contact is exactly 10 digits\r\n      const contactFormat = /^\\+?\\d{1,3}-?\\d{9,15}$/;\r\n      if (contact && !contactFormat.test(contact)) {\r\n        setErrors({\r\n          contact: \"Contact must be under 15 digits\",\r\n        });\r\n        return;\r\n      }\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update?\",\r\n        text: \"Do you want to update Contact Details?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/settings\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Contact Details updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update Contact Details. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not update contact details!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Contact Address</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Set Contact Us Details</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Company Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.company_name && \"input-error\"\r\n                      }`}\r\n                      name=\"company_name\"\r\n                      value={userData.company_name}\r\n                      placeholder=\"Company Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.company_name && (\r\n                      <div className=\"text-danger\">{errors.company_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Contact Number<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.contact && \"input-error\"\r\n                      }`}\r\n                      name=\"contact\"\r\n                      value={userData.contact}\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.contact && (\r\n                      <div className=\"text-danger\">{errors.contact}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Email Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.email && \"input-error\"\r\n                      }`}\r\n                      name=\"email\"\r\n                      value={userData.email}\r\n                      placeholder=\"Email Address\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.email && (\r\n                      <div className=\"text-danger\">{errors.email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Address<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      rows=\"10\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.address && \"input-error\"\r\n                      }`}\r\n                      name=\"address\"\r\n                      value={userData.address}\r\n                      placeholder=\"Address\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.address && (\r\n                      <div className=\"text-danger\">{errors.address}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APSetContactAddress;\r\n"],"names":["APSetContactAddress","userData","setUserData","useState","company_name","email","address","contact","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","rows","test","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}