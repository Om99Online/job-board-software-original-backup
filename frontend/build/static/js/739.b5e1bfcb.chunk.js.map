{"version":3,"file":"static/js/739.b5e1bfcb.chunk.js","mappings":"wUAeA,MAwaA,EAxauBA,KACrB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,cAAe,GACfC,WAAY,GACZC,iBAAkB,GAClBC,SAAU,MAELC,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,CACnCC,KAAM,MAGDQ,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GACjCW,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WAEtBE,GAAWC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBjB,EAAAA,EAAAA,UAAS,OAE7C,KAAEkB,IAASC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpB,MAAM,KAAEpB,EAAI,MAAEqB,GAAUD,EAAEE,OAC1BxB,GAAayB,IAAI,IACZA,EACH,CAACvB,GAAOqB,MAEVd,GAAWgB,IAAI,IACVA,EACH,CAACvB,GAAO,MACP,EA0GCwB,EAAoBC,UACxB,MAAMC,EAAYN,EAAEE,OACdK,EAAOD,EAAUE,MAAM,GAG7B,GAAID,EAAM,CAIR,GAFwBA,EAAKE,KACN,OAerB,OAbAC,IAAAA,KAAU,CACRC,MAAO,oCACPC,KAAM,UACNC,kBAAmB,eAOrBP,EAAUL,MAAQ,IAOpB,MAAMa,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,OAAOC,IAAIC,gBAAgBZ,GAErCO,EAAIM,OAAS,KACX,MAAMC,EAAQP,EAAIQ,aACZC,EAAST,EAAIU,cAEfH,EAAQ,KAAOE,EAAS,KAAOF,EAAQ,IAAME,EAAS,IACxDb,IAAAA,KAAU,CACRC,MAAO,oFACPC,KAAM,UACNC,kBAAmB,UAOrBP,EAAUL,MAAQ,KAKlBd,EAAU,IACLD,EACHL,MAAO,KA4OnB,SAAyB0B,GACvB,OAAO,IAAIkB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcvB,GACzBqB,EAAWR,OAAS,KAClBM,EAAQE,EAAWG,OAAO,EAE5BH,EAAWI,QAAWC,IACpBN,EAAOM,EAAM,CACd,GAEL,CAnPUC,CAAgB3B,GAAM4B,MAAMC,IAC1B1D,EAAY,IAAKD,EAAUI,MAAOuD,IAClCxC,EAAiBwC,EAAO,IAE5B,CAEJ,GAqCF,OAZAC,EAAAA,EAAAA,YAAU,KAEH/C,GAhMSe,WACd,IACEhB,GAAW,GACX,MAAMiD,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,8BAA6B3C,IACxC,KACA,CACE4C,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOtD,EACPuD,QAASrD,KAIfH,GAAW,GACXX,EAAY4D,EAASQ,KAAKR,UAC1B1C,EAAiB0C,EAASQ,KAAKR,SAASzD,MAC1C,CAAE,MAAOoD,GACPc,QAAQC,IAAI,0CACd,GAiLEC,GACAhC,OAAOiC,SAAS,EAAG,IAJnBzD,EAAS,SAKX,GACC,CAACH,EAAUG,KAGZ0D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETrE,GACCkE,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAaE,KAAK,eAAcL,UAC7CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMzE,EAAS,2BAA2B4D,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMzE,EAAS,qBAAqB4D,SAC9C,qBAGDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,wBAIrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,mBACjCF,EAAAA,EAAAA,MAAA,QAAMK,UAAU,YAAWH,SAAA,EACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAY,gBAAetE,EAAON,MAAQ,gBAC1CA,KAAK,OACLqB,MAAOxB,EAASG,KAChB4F,YAAY,OACZC,SAAU1E,IAEXb,EAAON,OACN0E,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEnE,EAAON,WAGzCuE,EAAAA,EAAAA,MAAA,OAAKK,UAAU,wBAAuBH,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,oBAQzCC,EAAAA,EAAAA,KAAA,SACEc,MAAQ,gBAAelF,EAAOL,OAAS,gBACvCyF,KAAK,OACLC,GAAG,WACHG,MAAM,QACN9F,KAAK,QACL+F,OAAO,0BACPH,YAAY,eACZC,SAAWzE,GAAMI,EAAkBJ,KAEpCd,EAAOL,QACNyE,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SAAEnE,EAAOL,SAGvCyE,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2HAIF1D,IACC2D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEE,UAAU,qBACVxC,IAAKrB,EACLiF,IAAI,mBAQZzB,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,mBAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAU,eACV5E,KAAK,gBACLqB,MAAOxB,EAASK,cAChB0F,YAAY,gBACZC,SAAU1E,WAKhBoD,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,gBAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAU,eACV5E,KAAK,aACLqB,MAAOxB,EAASM,WAChByF,YAAY,aACZC,SAAU1E,QAIdoD,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,sBAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAU,eACV5E,KAAK,mBACLqB,MAAOxB,EAASO,iBAChBwF,YAAY,mBACZC,SAAU1E,KAEZuD,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,qIAMxCF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAOe,IAAI,WAAWD,MAAM,aAAYf,SAAC,cAGzCC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLC,GAAG,gBACHf,UAAU,eACV5E,KAAK,WACLqB,MAAOxB,EAASQ,SAChBuF,YAAY,aACZC,SAAU1E,KAEZuD,EAAAA,EAAAA,KAAA,OAAKiB,GAAG,YAAYH,MAAM,YAAWf,SAAC,8BAIxCC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAzVI7D,UAClB,IACE,MAAMwE,EAAY,CAAC,EAcnB,GAZsB,KAAlBpG,EAASG,OACXiG,EAAUjG,KAAO,4BACjBqC,OAAOiC,SAAS,EAAG,IAQrB/D,EAAU0F,GAE4B,IAAlCC,OAAOC,KAAKF,GAAWG,OAAc,CAUvC,UATiCtE,IAAAA,KAAU,CACzCC,MAAO,mBACPsE,KAAM,sCACNrE,KAAM,WACNsE,kBAAkB,EAClBrE,kBAAmB,MACnBsE,iBAAkB,QAGGC,YAAa,CAClC/F,GAAW,GAEX,MAAMiD,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,8BAA6B3C,IACxCpB,EACA,CACEgE,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOtD,EACPuD,QAASrD,KAKfH,GAAW,GAEkB,MAAzBiD,EAASQ,KAAKuC,QAChB3E,IAAAA,KAAU,CACRC,MAAO,iCACPC,KAAM,UACNC,kBAAmB,UASrBpB,EAAS,sBAETiB,IAAAA,KAAU,CACRC,MAAO2B,EAASQ,KAAKwC,QACrB1E,KAAM,QACNC,kBAAmB,SAGzB,CACF,CACF,CAAE,MAAOoB,GACP5C,GAAW,GACXqB,IAAAA,KAAU,CACRC,MAAO,SACPsE,KAAM,qDACNrE,KAAM,QACNC,kBAAmB,UAErBkC,QAAQC,IAAI,6BAA8Bf,EAC5C,GA6QmCoB,SACtB,UAGDC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,0BACVU,QAASA,IAAMzE,EAAS,qBAAqB4D,SAC9C,kBAKLC,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,YAKd,C","sources":["Components/adminpanel/Categories/APEditCategory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditCategory = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    meta_keywords: \"\",\r\n    meta_title: \"\",\r\n    meta_description: \"\",\r\n    keywords: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    // image: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const { slug } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/category/admin_edit/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setSelectedImage(response.data.response.image);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.name === \"\") {\r\n        newErrors.name = \"Category Name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      // if (userData.image === \"\") {\r\n      //   newErrors.image = \"Category Image is required\";\r\n      //   window.scrollTo(0, 0);\r\n      // }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Update Category?\",\r\n          text: \"Do you want to update the category?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/category/admin_edit/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Category updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0);\r\n            navigate(\"/admin/categories\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update category. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n  \r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        // setSelectedImage(\"\")\r\n        // setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n  \r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n  \r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n  \r\n        if (width > 100 || height > 100 || width < 40 || height < 40) {\r\n          Swal.fire({\r\n            title: \"Image resolution should be greater than 40x40 pixels and less than 100x100 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          // setSelectedImage(\"\")\r\n          // setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            image: \"\",\r\n          });\r\n  \r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, image: base64 });\r\n  //   setSelectedImage(base64);\r\n\r\n  //   // Clear the image error\r\n  //   setErrors({\r\n  //     ...errors,\r\n  //     image: \"\",\r\n  //   });\r\n  // };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, image: \"\" });\r\n    const fileInput = document.getElementById(\"formFile\"); // Replace with the actual ID of your file input\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/categories\")}\r\n                  >\r\n                    Categories List\r\n                  </Link>\r\n                  <Typography color=\"text.primary\">Edit Category</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Category</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-5 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Category Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.name && \"input-error\"}`}\r\n                      name=\"name\"\r\n                      value={userData.name}\r\n                      placeholder=\"Name\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Category Image\r\n                    </label>\r\n                    {/* <div className=\"APACImageArea\">\r\n                        {selectedImage && (\r\n                          <img src={selectedImage} alt=\"Selected\" />\r\n                        )}\r\n                      </div> */}\r\n                    <input\r\n                      class={`form-control ${errors.image && \"input-error\"}`}\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      lable=\"Image\"\r\n                      name=\"image\"\r\n                      accept=\".jpeg, .png, .jpg, .gif\"\r\n                      placeholder=\"Select Image\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {errors.image && (\r\n                      <div className=\"text-danger\">{errors.image}</div>\r\n                    )}\r\n                    {/* <button id=\"formFile\">Select Image</button> */}\r\n                    <p>\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600 KB). Min\r\n                      file size 40 X 40 pixels. Max file size 100 X 100 pixels.\r\n                    </p>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                        {/* <button className=\"APButton3\" onClick={deleteImage}>\r\n                          Delete\r\n                        </button> */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Meta Keywords\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"meta_keywords\"\r\n                      value={userData.meta_keywords}\r\n                      placeholder=\"Meta Keywords\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    {/* <p>(comma (,) separated)</p> */}\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-5 DashBoardInputBx\">\r\n                  <label for=\"formFile\" class=\"form-label\">\r\n                    Meta Title\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example1\"\r\n                    className=\"form-control\"\r\n                    name=\"meta_title\"\r\n                    value={userData.meta_title}\r\n                    placeholder=\"Meta Title\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"mb-5 DashBoardInputBx\">\r\n                  <label for=\"formFile\" class=\"form-label\">\r\n                    Meta Description\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example1\"\r\n                    className=\"form-control\"\r\n                    name=\"meta_description\"\r\n                    value={userData.meta_description}\r\n                    placeholder=\"Meta Description\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div id=\"emailHelp\" class=\"form-text\">\r\n                    Note.: Meta details are important please fill these\r\n                    information. If you don't filled it by default information\r\n                    will be show.\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-5 DashBoardInputBx\">\r\n                  <label for=\"formFile\" class=\"form-label\">\r\n                    Keywords\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"form3Example1\"\r\n                    className=\"form-control\"\r\n                    name=\"keywords\"\r\n                    value={userData.keywords}\r\n                    placeholder=\"Meta Title\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div id=\"emailHelp\" class=\"form-text\">\r\n                    (comma (,) separated)\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary button1\"\r\n                  onClick={handleClick}\r\n                >\r\n                  SAVE\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary button2\"\r\n                  onClick={() => navigate(\"/admin/categories\")}\r\n                >\r\n                  CANCEL\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditCategory;\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["APEditCategory","userData","setUserData","useState","name","image","meta_keywords","meta_title","meta_description","keywords","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","selectedImage","setSelectedImage","slug","useParams","handleChange","e","value","target","prev","handleFileUpload1","async","fileInput","file","files","size","Swal","title","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","useEffect","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","console","log","getData","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","onChange","lable","accept","alt","newErrors","Object","keys","length","text","showCancelButton","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}