{"version":3,"file":"static/js/722.95a3c547.chunk.js","mappings":"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","sources":["Components/adminpanel/Banner Advertisement/APAddBanner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APAddBanner = () => {\r\n  const [userData, setUserData] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    advertisement_place: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    text: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    advertisement_place: \"\",\r\n    url: \"\",\r\n    image: \"\",\r\n    text: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  // const getData = async () => {\r\n  //   try {\r\n  //     const response = await axios.post(\r\n  //       BaseApi + \"/admin/changeusername\",\r\n  //       null,\r\n  //       {\r\n  //         headers: {\r\n  //           \"Content-Type\": \"application/json\",\r\n  //           key: ApiKey,\r\n  //           token: tokenKey,\r\n  //         },\r\n  //       }\r\n  //     );\r\n  //     setUserData(response.data.response);\r\n  //   } catch (error) {\r\n  //     console.log(\"Error at chnage username at Admin panel\");\r\n  //   }\r\n  // };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.title === \"\") {\r\n        newErrors.title = \"Banner Title is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (userData.type === \"\") {\r\n        newErrors.type = \"Advertisement Type is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.advertisement_place === \"\") {\r\n        newErrors.advertisement_place = \"Advertisement Place is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.url === \"\") {\r\n        newErrors.url = \"URL is required\";\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        // Regular expression pattern to match a valid URL\r\n\r\n        const urlFormat = /^(https?:\\/\\/)?(www\\.)?[\\w.-]+\\.[a-z]{2,5}(\\/\\S*)?$/i;\r\n\r\n\r\n        if (!urlFormat.test(userData.url)) {\r\n          newErrors.url = \"Invalid URL format\";\r\n          window.scrollTo(0, 0);\r\n        }\r\n      }\r\n      if (userData.image === \"\") {\r\n        newErrors.image = \"Advertisement Image is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Add Banner?\",\r\n          text: \"Do you want to Add this Banner?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/banner/admin_add\",\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Banner Added successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0);\r\n            navigate(\"/admin/banneradvertisements\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not Add Banner. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n\r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 2MB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        setSelectedImage(\"\");\r\n        setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n\r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n\r\n        if (width !== 720 || height !== 320) {\r\n          Swal.fire({\r\n            title: \"Image resolution should be 720x320 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          setSelectedImage(\"\");\r\n          setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            image: \"\",\r\n          });\r\n\r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, image: base64 });\r\n  //   setSelectedImage(base64);\r\n\r\n  //   // Clear the image error\r\n  //   setErrors({\r\n  //     ...errors,\r\n  //     image: \"\",\r\n  //   });\r\n  // };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, image: \"\" });\r\n\r\n    const fileInput = document.getElementById(\"formFile\"); // Replace with the actual ID of your file input\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n    // window.location.reload();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserData({\r\n      title: \"\",\r\n      // type: \"\",\r\n      advertisement_place: \"\",\r\n      url: \"\",\r\n      image: \"\",\r\n      text: \"\",\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      // getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/admin/banneradvertisements\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Banner Advertisements\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">\r\n                    Add Banner Advertisement\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Add Banner</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Place Of Advertisement<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.advertisement_place && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"advertisement_place\"\r\n                      value={userData.advertisement_place}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected>Select Place of Advertisement</option>\r\n                      <option value=\"home_ad1\">\r\n                        Home Page Bopx Advertisement Box1 (Width:377px,\r\n                        Height:387px)\r\n                      </option>\r\n                      <option value=\"home_ad2\">\r\n                        Home Page Bopx Advertisement Box2 (Width:377px,\r\n                        Height:387px)\r\n                      </option>\r\n                    </select>\r\n                    {errors.advertisement_place && (\r\n                      <div className=\"text-danger\">\r\n                        {errors.advertisement_place}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.title && \"input-error\"\r\n                      }`}\r\n                      name=\"title\"\r\n                      placeholder=\"Banner Title\"\r\n                      value={userData.title}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.title && (\r\n                      <div className=\"text-danger\">{errors.title}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-5\">\r\n                    <div className=\"APRadioInput DashBoardInputBx\">\r\n                      <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                        Advertisement Type<span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <div className=\"APPaymentDetailsRadio\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"pictureAdverts\"\r\n                          name=\"type\"\r\n                          value=\"1\"\r\n                          checked={userData.type.toString() === \"1\"}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <label className=\"LabelpictureAdverts\" htmlFor=\"1\">\r\n                          Picture Adverts\r\n                        </label>\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"googleAdverts\"\r\n                          name=\"type\"\r\n                          value=\"2\"\r\n                          checked={userData.type.toString() === \"2\"}\r\n                          onChange={handleChange}\r\n                        />\r\n                        <label htmlFor=\"2\">Google Adverts</label>\r\n                      </div>\r\n                    </div>\r\n                    {errors.type && (\r\n                      <div className=\"text-danger\">{errors.type}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      URL<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.url && \"input-error\"}`}\r\n                      name=\"url\"\r\n                      placeholder=\"URL\"\r\n                      value={userData.url}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.url && (\r\n                      <div className=\"text-danger\">{errors.url}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      (Enter URL Like https://www.google.com)\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Image<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className={`form-control ${\r\n                        errors.image && \"input-error\"\r\n                      }`}\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      lable=\"Image\"\r\n                      name=\"logo\"\r\n                      accept=\".gif, .jpeg, .png, .jpg\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {errors.image && (\r\n                      <div className=\"text-danger\">{errors.image}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 600 KB).\r\n                      Standard size of Advertisement images <br />\r\n                      1) Job Selection Page (Width:720px, Height:320px)\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage selectedBannerImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n\r\n                        <button className=\"APButton3\" onClick={deleteImage}>\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => handleReset()}\r\n                  >\r\n                    RESET\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddBanner;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["APAddBanner","userData","setUserData","useState","title","type","advertisement_place","url","image","text","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","selectedImage","setSelectedImage","handleChange","e","name","value","target","prev","handleFileUpload1","async","fileInput","file","files","size","Swal","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","error","convertToBase64","then","base64","useEffect","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","onChange","selected","id","placeholder","htmlFor","checked","toString","lable","accept","alt","onClick","deleteImage","document","getElementById","newErrors","test","Object","keys","length","showCancelButton","cancelButtonText","isConfirmed","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","status","message","console","log","location","reload","APFooter"],"sourceRoot":""}