{"version":3,"file":"static/js/2216.0dc08044.chunk.js","mappings":"yUAeA,MAmVA,EAnVuBA,KACrB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,QAAS,GACTC,UAAW,GACXC,cAAe,GACfC,cAAe,GACfC,UAAW,GACXC,aAAc,MAETC,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,CACnCE,UAAW,GACXC,cAAe,GACfC,cAAe,GACfC,UAAW,GACXC,aAAc,MAETG,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GACjCW,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WAEtBE,GAAWC,EAAAA,EAAAA,MAEXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BrB,GAAasB,IAAI,IACZA,EACH,CAACH,GAAOC,KACP,EAGCG,EAAUC,UACd,IACEb,GAAW,GACX,MAAMc,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAU,oCACV,KACA,CACEC,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnB,EACPoB,QAASlB,KAIfH,GAAW,GACXX,EAAYyB,EAASQ,KAAKR,SAASS,YACrC,CAAE,MAAOC,GACPxB,GAAW,GACXyB,QAAQC,IAAI,8BACd,GAkGF,OAZAC,EAAAA,EAAAA,YAAU,KAEH1B,GAKHW,IACAgB,OAAOC,SAAS,EAAG,IAJnBzB,EAAS,SAKX,GACC,CAACH,EAAUG,KAGZ0B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETrC,GACCkC,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAGjBL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAaE,KAAK,eAAcL,UAC7CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMzC,EAAS,2BAA2B4B,SACpD,eAIDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,uBAGrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBH,SAAC,mBACjCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAWH,UACzBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,2BACrBF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,oBACvBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE5CF,EAAAA,EAAAA,MAAA,UACEK,UAAU,cACV,aAAW,yBACX3B,KAAK,UACLC,MAAOrB,EAASG,QAChB0D,SAAU3C,EAAa0B,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQxB,MAAM,IAAGuB,SAAC,kBAClBC,EAAAA,EAAAA,KAAA,UAAQxB,MAAM,IAAGuB,SAAC,0BAEE,MAArB5C,EAASG,SACRuC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,6BAA4Bf,SAAA,EACrCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,kBACzBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE1CC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBACVtC,EAAOL,WAAa,gBAEtBgB,KAAK,YACL4C,YAAY,YACZ3C,MAAOrB,EAASI,UAChByD,SAAU3C,IAEXT,EAAOL,YACNyC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBnC,EAAOL,gBAIdsC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBACVtC,EAAOJ,eAAiB,gBAE1Be,KAAK,gBACL4C,YAAY,gBACZ3C,MAAOrB,EAASK,cAChBwD,SAAU3C,IAEXT,EAAOJ,gBACNwC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBnC,EAAOJ,oBAIdqC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,iBAC1BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAEzCC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBACVtC,EAAOH,eAAiB,gBAE1Bc,KAAK,gBACL4C,YAAY,gBACZ3C,MAAOrB,EAASM,cAChBuD,SAAU3C,IAEXT,EAAOH,gBACNuC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBnC,EAAOH,oBAIdoC,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,oBACvBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAE5CC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBACVtC,EAAOF,WAAa,gBAEtBa,KAAK,YACL4C,YAAY,YACZ3C,MAAOrB,EAASO,UAChBsD,SAAU3C,IAEXT,EAAOF,YACNsC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBnC,EAAOF,aAGZsC,EAAAA,EAAAA,KAAA,OAAKkB,GAAG,YAAYJ,MAAM,YAAWf,SAAC,uEAKxCF,EAAAA,EAAAA,MAAA,OAAKiB,MAAM,wBAAuBf,SAAA,EAChCF,EAAAA,EAAAA,MAAA,SAAOkB,IAAI,WAAWD,MAAM,aAAYf,SAAA,CAAC,gBAC3BC,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASH,SAAC,UAExCC,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLC,GAAG,gBACHhB,UAAY,gBACVtC,EAAOD,cAAgB,gBAEzBY,KAAK,eACL4C,YAAY,eACZ3C,MAAOrB,EAASQ,aAChBqD,SAAU3C,IAEXT,EAAOD,eACNqC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,cAAaH,SACzBnC,EAAOD,gBAGZqC,EAAAA,EAAAA,KAAA,OAAKkB,GAAG,YAAYJ,MAAM,YAAWf,SAAC,0BAM1C,OAGJC,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLf,UAAU,0BACVU,QAxQEhC,UAClB,IACE,MAAM,UACJrB,EAAS,cACTC,EAAa,cACbC,EAAa,UACbC,EAAS,aACTC,GACER,EAGJ,IACGI,IACAC,IACAC,IACAC,IACAC,EASD,YAPAE,EAAU,CACRN,UAAWA,EAAY,GAAK,mBAC5BC,cAAeA,EAAgB,GAAK,uBACpCC,cAAeA,EAAgB,GAAK,uBACpCC,UAAWA,EAAY,GAAK,mBAC5BC,aAAcA,EAAe,GAAK,wBAatC,UATiCyD,IAAAA,KAAU,CACzCC,MAAO,UACPC,KAAM,2CACNC,KAAM,WACNC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,QAGGC,YAAa,CAGlC,MAAM9C,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAU,oCACV5B,EACA,CACE6B,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOnB,EACPoB,QAASlB,KAOc,MAAzBW,EAASQ,KAAKuC,QAChBR,IAAAA,KAAU,CACRC,MAAO,sCACPE,KAAM,UACNE,kBAAmB,UAErB9C,IAEAgB,OAAOC,SAAS,EAAG,IAEnBwB,IAAAA,KAAU,CACRC,MAAOxC,EAASQ,KAAKwC,QACrBN,KAAM,QACNE,kBAAmB,SAGzB,CACF,CAAE,MAAOlC,GAEP6B,IAAAA,KAAU,CACRC,MAAO,SACPC,KAAM,0DACNC,KAAM,QACNE,kBAAmB,UAErBjC,QAAQC,IAAI,kCAAmCF,EACjD,GAwLqCQ,SACtB,UAGDC,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLf,UAAU,0BACVU,QAASA,IAAMzC,EAAS,2BAA2B4B,SACpD,oBAMPC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,YAId,C","sources":["Components/adminpanel/Configuration/APSMTPsettings.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APSMTPsettings = () => {\r\n  const [userData, setUserData] = useState({\r\n    is_smtp: \"\",\r\n    smtp_host: \"\",\r\n    smtp_username: \"\",\r\n    smtp_password: \"\",\r\n    smtp_port: \"\",\r\n    smtp_timeout: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    smtp_host: \"\",\r\n    smtp_username: \"\",\r\n    smtp_password: \"\",\r\n    smtp_port: \"\",\r\n    smtp_timeout: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/smtpsettings/configuration\",\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response.smtpsetting);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Error at SMTP data fetching\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const {\r\n        smtp_host,\r\n        smtp_username,\r\n        smtp_password,\r\n        smtp_port,\r\n        smtp_timeout,\r\n      } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (\r\n        !smtp_host ||\r\n        !smtp_username ||\r\n        !smtp_password ||\r\n        !smtp_port ||\r\n        !smtp_timeout\r\n      ) {\r\n        setErrors({\r\n          smtp_host: smtp_host ? \"\" : \"Host is required\",\r\n          smtp_username: smtp_username ? \"\" : \"Username is required\",\r\n          smtp_password: smtp_password ? \"\" : \"Password is required\",\r\n          smtp_port: smtp_port ? \"\" : \"Port is required\",\r\n          smtp_timeout: smtp_timeout ? \"\" : \"Timeout is required\",\r\n        });\r\n        return;\r\n      }\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update?\",\r\n        text: \"Do you want to update the SMTP Settings?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/smtpsettings/configuration\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        // setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"SMTP Settings updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update SMTP Settings. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not update SMTP Settings!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">SMTP Setting</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">SMTP Settings</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <h4 className=\"mb-5\">SMTP Setting Details:</h4>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Send Email Using<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className=\"form-select\"\r\n                      aria-label=\"Default select example\"\r\n                      name=\"is_smtp\"\r\n                      value={userData.is_smtp}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"0\">Normal Email</option>\r\n                      <option value=\"1\">SMTP Configuration</option>\r\n                    </select>\r\n                    {userData.is_smtp === \"1\" ? (\r\n                      <>\r\n                        <div class=\"mb-5 mt-5 DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            SMTP Host Name<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className={`form-control ${\r\n                              errors.smtp_host && \"input-error\"\r\n                            }`}\r\n                            name=\"smtp_host\"\r\n                            placeholder=\"SMTP Host\"\r\n                            value={userData.smtp_host}\r\n                            onChange={handleChange}\r\n                          />\r\n                          {errors.smtp_host && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.smtp_host}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div class=\"mb-5 DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            SMTP Username<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className={`form-control ${\r\n                              errors.smtp_username && \"input-error\"\r\n                            }`}\r\n                            name=\"smtp_username\"\r\n                            placeholder=\"SMTP Username\"\r\n                            value={userData.smtp_username}\r\n                            onChange={handleChange}\r\n                          />\r\n                          {errors.smtp_username && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.smtp_username}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div class=\"mb-5 DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            SMTP Password<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className={`form-control ${\r\n                              errors.smtp_password && \"input-error\"\r\n                            }`}\r\n                            name=\"smtp_password\"\r\n                            placeholder=\"SMTP Password\"\r\n                            value={userData.smtp_password}\r\n                            onChange={handleChange}\r\n                          />\r\n                          {errors.smtp_password && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.smtp_password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div class=\"mb-5 DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            SMTP Port Number<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className={`form-control ${\r\n                              errors.smtp_port && \"input-error\"\r\n                            }`}\r\n                            name=\"smtp_port\"\r\n                            placeholder=\"SMTP Port\"\r\n                            value={userData.smtp_port}\r\n                            onChange={handleChange}\r\n                          />\r\n                          {errors.smtp_port && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.smtp_port}\r\n                            </div>\r\n                          )}\r\n                          <div id=\"emailHelp\" class=\"form-text\">\r\n                            Example: 465, 25, 587, 2525 etc, Please check your\r\n                            SMTP detail\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"mb-5 DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            SMTP Timeout<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className={`form-control ${\r\n                              errors.smtp_timeout && \"input-error\"\r\n                            }`}\r\n                            name=\"smtp_timeout\"\r\n                            placeholder=\"SMTP Timeout\"\r\n                            value={userData.smtp_timeout}\r\n                            onChange={handleChange}\r\n                          />\r\n                          {errors.smtp_timeout && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.smtp_timeout}\r\n                            </div>\r\n                          )}\r\n                          <div id=\"emailHelp\" class=\"form-text\">\r\n                            Example: 30, 50\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APSMTPsettings;\r\n"],"names":["APSMTPsettings","userData","setUserData","useState","is_smtp","smtp_host","smtp_username","smtp_password","smtp_port","smtp_timeout","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","smtpsetting","error","console","log","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","onChange","type","id","placeholder","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}