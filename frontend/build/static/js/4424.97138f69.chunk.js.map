{"version":3,"file":"static/js/4424.97138f69.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APChangeEmail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangeEmail = () => {\r\n  const [userData, setUserData] = useState({\r\n    old_email: \"\",\r\n    new_email: \"\",\r\n    conf_email: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    new_email: \"\",\r\n    conf_email: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(BaseApi + \"/admin/changeemail\", null, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n          token: tokenKey,\r\n          adminid: adminID,\r\n        },\r\n      });\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      console.log(\"Error at change username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const { new_email, conf_email } = userData;\r\n\r\n      // Check if email fields are empty\r\n      if (!new_email || !conf_email) {\r\n        setErrors({\r\n          new_email: new_email ? \"\" : \"New Email is required\",\r\n          conf_email: conf_email ? \"\" : \"Confirm Email is required\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check if new email and confirm email match\r\n      if (new_email !== conf_email) {\r\n        setErrors({\r\n          conf_email: \"New Email and Confirm Email do not match\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Check for valid email format\r\n      const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailFormat.test(new_email) || !emailFormat.test(conf_email)) {\r\n        setErrors({\r\n          new_email: \"Invalid Email Address\",\r\n          conf_email: \"Invalid Email Address\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Update Email\",\r\n        text: \"Do you want to update the email?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        setLoading(true);\r\n\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/changeemail\",\r\n          userData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setLoading(false);\r\n\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Email updated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n          // setUserData({\r\n          //   ...userData,\r\n          //   old_email: \"\",\r\n          //   new_email: \"\",\r\n          //   conf_email: \"\",\r\n          // });\r\n          window.scrollTo(0, 0);\r\n        } else if (response.data.status === 500) {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update email. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change email!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Change Email</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Change Admin Email</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Current Email<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"old_email\"\r\n                      placeholder=\"Current Email\"\r\n                      value={userData.old_email}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      New Email<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.new_email && \"input-error\"\r\n                      }`}\r\n                      name=\"new_email\"\r\n                      placeholder=\"New Email\"\r\n                      value={userData.new_email}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.new_email && (\r\n                      <div className=\"text-danger\">{errors.new_email}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Confirm Email<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.conf_email && \"input-error\"\r\n                      }`}\r\n                      name=\"conf_email\"\r\n                      placeholder=\"Confirm Email\"\r\n                      value={userData.conf_email}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {<errors className=\"conf\"></errors> && (\r\n                      <div className=\"text-danger\">{errors.conf_email}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangeEmail;\r\n"],"names":["APChangeEmail","userData","setUserData","useState","old_email","new_email","conf_email","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","handleChange","e","name","value","target","prev","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","useEffect","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","type","id","placeholder","disabled","onChange","emailFormat","test","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}