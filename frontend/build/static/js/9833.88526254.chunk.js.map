{"version":3,"file":"static/js/9833.88526254.chunk.js","mappings":"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","sources":["Components/adminpanel/Jobs/APJobsList.js","../node_modules/@mui/icons-material/Block.js","../node_modules/@mui/icons-material/CalendarMonth.js","../node_modules/@mui/icons-material/Check.js","../node_modules/@mui/icons-material/ContentCopy.js","../node_modules/@mui/icons-material/Create.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/FormatListBulleted.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/material/IconButton/iconButtonClasses.js","../node_modules/@mui/material/IconButton/IconButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n// import AddIcon from \"@mui/icons-material/Add\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Button, IconButton } from \"@mui/material\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APJobsList = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [dataPerPage, setDataPerPage] = useState([]);\r\n  const itemsPerPage = 20;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null);\r\n  // const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const handleOpen = (plan) => {\r\n    setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const [userAccess , setUserAccess] = useState({})\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"90%\", // Adjusted width for mobile responsiveness\r\n    maxWidth: \"400px\",\r\n    // maxHeight: \"800px\",\r\n    backgroundColor: \"white\", // Use a valid color or background image here\r\n    border: \"2px solid #000\",\r\n    boxShadow: \"0 0 24px rgba(0, 0, 0, 0.2)\", // Adjust the shadow values as needed\r\n    padding: \"4px\", // Adjust padding as needed\r\n    // overflowY: \"scroll\", // Add a vertical scrollbar\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/job/index\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setListData(response.data.response);\r\n      // console.log(\"list\",listData);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n  const handleActivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Job?\",\r\n        text: \"Do you want to Activate this Job?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/job/admin_activate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Job Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Job\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDeactivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Job\",\r\n        text: \"Do you want to Deactivate this Job?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/job/admin_deactivate/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Job Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Job\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Job?\",\r\n        text: \"Do you want to Delete this Job?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/job/admin_delete/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Job deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete job\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const [selectAll, setSelectAll] = useState(true);\r\n\r\n  const handleCheck = (id) => {\r\n    // Check if the id is 'selectAll', indicating the \"Select All\" checkbox\r\n    if (id === \"selectAll\") {\r\n      // If it's \"Select All\", toggle the selectAll state\r\n      setSelectAll(!selectAll);\r\n\r\n      // If selectAll is true, select all checkboxes, else unselect all\r\n      const updatedCheckedData = selectAll\r\n        ? listData.map((item) => item.id)\r\n        : [];\r\n      setCheckedData(updatedCheckedData);\r\n    } else {\r\n      // Individual checkbox handling remains the same\r\n      if (checkedData.includes(id)) {\r\n        // If the ID is already in the array, remove it\r\n        setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n      } else {\r\n        // If the ID is not in the array, add it\r\n        setCheckedData([...checkedData, id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n\r\n  const handleMultipleDeactivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate Jobs?\",\r\n        text: \"Do you want to Deactivate these Jobs?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const ids = checkedData.join(\",\");\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/job/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"deactivate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Jobs Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Deactivate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate Jobs\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleActivate = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate Jobs?\",\r\n        text: \"Do you want to Activate these Jobs?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/job/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"activate\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Jobs Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Activate!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate Jobs\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleMultipleDelete = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Jobs?\",\r\n        text: \"Do you want to Delete these Jobs?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        let ids = checkedData.toString();\r\n        console.log(ids);\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + \"/admin/job/index\",\r\n          {\r\n            idList: ids,\r\n            action: \"delete\",\r\n          }, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n\r\n        setSelectAll(true);\r\n        setCheckedData(\"\");\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Jobs Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Couldn't Delete!\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete Jobs\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't Delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const sortAndFilterData = (array, key, direction, query) => {\r\n    const sortedAndFilteredArray = [...array]\r\n      .filter(\r\n        (item) =>\r\n          item.emp_name.toLowerCase().includes(query) ||\r\n          item.title.toLowerCase().includes(query) ||\r\n          item.company_name.toLowerCase().includes(query) ||\r\n          item.created.toLowerCase().includes(query)\r\n      )\r\n      .sort((a, b) => {\r\n        if (a[key] < b[key]) {\r\n          return direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[key] > b[key]) {\r\n          return direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    return sortedAndFilteredArray;\r\n  };\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: \"\",\r\n    direction: \"ascending\",\r\n  });\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const sortedAndFilteredData = sortAndFilterData(\r\n    listData,\r\n    sortConfig.key,\r\n    sortConfig.direction,\r\n    searchQuery\r\n  );\r\n\r\n  const filteredData = listData.filter((item) => {\r\n    const searchString = searchQuery.toLowerCase();\r\n    return (\r\n      item.emp_name.toLowerCase().includes(searchString) ||\r\n      item.title.toLowerCase().includes(searchString) ||\r\n      item.company_name.toLowerCase().includes(searchString) ||\r\n      item.created.toLowerCase().includes(searchString)\r\n    );\r\n  });\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = sortedAndFilteredData.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n\r\n  const totalPages = Math.ceil(sortedAndFilteredData.length / itemsPerPage);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset currentPage to 1 when searchQuery changes\r\n  }, [searchQuery]);\r\n\r\n  const handleColumnClick = (key) => {\r\n    let direction = \"ascending\";\r\n    if (sortConfig.key === key && sortConfig.direction === \"ascending\") {\r\n      direction = \"descending\";\r\n      setSymbol(\"🔻\");\r\n    } else {\r\n      setSymbol(\"🔺\");\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    const newQuery = e.target.value.toLowerCase();\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  const getWorkType = (id) => {\r\n    if (id === 1) {\r\n      return \"Full Time\";\r\n    }\r\n    if (id === 2) {\r\n      return \"Part Time\";\r\n    }\r\n    if (id === 3) {\r\n      return \"Casual\";\r\n    }\r\n    if (id === 4) {\r\n      return \"Seasonal\";\r\n    }\r\n    if (id === 5) {\r\n      return \"Fixed Term\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const access = Cookies.get(\"access\")\r\n\r\n    if(typeof(access) !== null  || access !==  \"\" || access !==  undefined){\r\n\r\n        console.log(JSON.parse(access))\r\n\r\n        setUserAccess(JSON.parse(access))\r\n    }else{\r\n        setUserAccess({})\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic APManageSubadmin\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    to={\"/admin/admins/dashboard\"}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link to=\"\" underline=\"hover\" color=\"inherit\">\r\n                    Jobs\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Job List</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <div className=\"ManageSubAdminHeader\">\r\n                <h2 className=\"\">Jobs List</h2>\r\n                {(userAccess[3]?.Add === 1 || adminID === \"1\")&& <>\r\n                <button\r\n                  className=\"btn navButton1 APMSbutton\"\r\n                  onClick={() => navigate(\"/admin/jobs/addjob\")}\r\n                >\r\n                  Add Job\r\n                </button>\r\n                </>}\r\n              </div>\r\n              {listData != \"\" ? (\r\n                <>\r\n                  <div className=\"manageSubadminPart1\">\r\n                    <form>\r\n                      <div className=\"manageSubadminPart1Sec1\">\r\n                        <h4>\r\n                          Search Job by typing Employer name, title,company name\r\n                          or Created date\r\n                        </h4>\r\n                        <div class=\"APDashboardSearchBx \">\r\n                          {/* <label for=\"formFile\" class=\"form-label\">\r\n                          Search By Keyword\r\n                        </label> */}\r\n\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"form3Example1\"\r\n                            className=\"form-control\"\r\n                            name=\"searchQuery\"\r\n                            placeholder=\"Search..\"\r\n                            value={searchQuery}\r\n                            onChange={handleSearchChange}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                    <h4>\r\n                      No. of Results {indexOfFirstItem + 1}-\r\n                      {Math.min(\r\n                        indexOfLastItem,\r\n                        filteredData.length || listData.length\r\n                      )}{\" \"}\r\n                      of {listData.length}\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <div className=\"manageSubadminPart2\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                        <tr>\r\n                          <td className=\"checkBoxCol checkBxHead\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"tableCheckBox\"\r\n                              // checked={selectAll}\r\n\r\n                              onClick={() => handleCheck(\"selectAll\")}\r\n                            />\r\n                          </td>\r\n                          <th onClick={() => handleColumnClick(\"emp_name\")}>\r\n                            Employer Name {symbol}\r\n                          </th>\r\n                          <th onClick={() => handleColumnClick(\"title\")}>\r\n                            Job Title {symbol}\r\n                          </th>\r\n\r\n                          <th onClick={() => handleColumnClick(\"company_name\")}>\r\n                            Company Name {symbol}\r\n                          </th>\r\n                          <th>Location</th>\r\n                          <th>Category</th>\r\n                          <th onClick={() => handleColumnClick(\"created\")}>\r\n                            <CalendarMonthIcon /> Date {symbol}\r\n                          </th>\r\n                          <th>Jobseekers</th>\r\n\r\n                          <th scope=\"col\">Action</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {currentItems.map((i) => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td className=\"checkBoxCol\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"tableCheckBox\"\r\n                                    checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                    onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                                  />\r\n                                </td>\r\n                                <td onClick={() => handleOpen(i)}>\r\n                                  {i.emp_name}\r\n                                </td>\r\n                                <td>{i.title}</td>\r\n                                <td>{i.company_name}</td>\r\n                                <td>{i.location}</td>\r\n                                <td>{i.cat_name}</td>\r\n                                <td>{i.created}</td>\r\n                                <td>{i.jobseeker_count}</td>\r\n                                <td className=\"APActionButton\">\r\n                                  {i.status === 1 ? (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleDeactivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Deactivate\">\r\n                                        <CheckIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button\r\n                                      className=\"btn-secondary\"\r\n                                      onClick={() => handleActivate(i.slug)}\r\n                                    >\r\n                                      <Tooltip title=\"Activate\">\r\n                                        <BlockIcon />\r\n                                      </Tooltip>\r\n                                    </button>\r\n                                  )}\r\n\r\n                                  {(userAccess[3]?.Edit === 1 || adminID === \"1\")&& <>\r\n\r\n                                  <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() =>\r\n                                      navigate(`/admin/jobs/editjob/${i.slug}`)\r\n                                    }\r\n                                  >\r\n                                    <Tooltip title=\"Edit\">\r\n                                      <CreateIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  </>}\r\n                                  {(userAccess[3]?.Delete === 1 || adminID === \"1\")&& <>\r\n                                  <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    onClick={() => handleDelete(i.slug)}\r\n                                  >\r\n                                    <Tooltip title=\"Delete\">\r\n                                      <DeleteIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  </>}\r\n\r\n                                  <button\r\n                                    className=\"btn-primary\"\r\n                                    onClick={() => handleOpen(i)}\r\n                                  >\r\n                                    <Tooltip title=\"View\">\r\n                                      <RemoveRedEyeIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n\r\n                                  <button\r\n                                    className=\"btn-secondary mt-2\"\r\n                                    onClick={() =>\r\n                                      navigate(\r\n                                        `/admin/jobs/candidates/${i.slug}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip title=\"Jobseeker List\">\r\n                                      <FormatListBulletedIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                  <button\r\n                                    className=\"btn-primary mt-2\"\r\n                                    onClick={() =>\r\n                                      navigate(\r\n                                        `/admin/jobs/addjob/copy/${i.slug}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <Tooltip title=\"Copy Details\">\r\n                                      <ContentCopyIcon />\r\n                                    </Tooltip>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                        <div>\r\n                          <Modal\r\n                            className=\"modalMain\"\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"modal-modal-title\"\r\n                            aria-describedby=\"modal-modal-description\"\r\n                          >\r\n                            <Box className=\"modal adminModal modal-content\">\r\n                              <IconButton\r\n                                onClick={handleClose}\r\n                                className=\"close-button\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 10,\r\n                                  right: 10,\r\n                                }}\r\n                              >\r\n                                &times;\r\n                              </IconButton>\r\n\r\n                              <Typography\r\n                                id=\"modal-modal-title\"\r\n                                variant=\"h6\"\r\n                                component=\"h2\"\r\n                              ></Typography>\r\n                              <Typography\r\n                                id=\"modal-modal-description\"\r\n                                sx={{ mt: 3 }}\r\n                              >\r\n                                {selectedPayment && (\r\n                                  <div className=\"modals \">\r\n                                    <div className=\"modalHead\">\r\n                                      <h1>{selectedPayment.title}</h1>\r\n                                    </div>\r\n                                    <div className=\"modalBody mt-4\">\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Search Count:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.jobseeker_count}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Job View Count:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {/* {selectedPayment.last_name} */}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Employer Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.emp_name}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Job Title:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.title}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Category:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.cat_name}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Company Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.company_name}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Work Type:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {getWorkType(\r\n                                            selectedPayment.work_type\r\n                                          )}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Contact Name:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.contact_name}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Contact Number:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.contact_number}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Company Website:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.url}\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"modalParent\">\r\n                                        <div className=\"modalLeft\">\r\n                                          Job Description:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"modalRight\">\r\n                                          {selectedPayment.description\r\n                                            ? HTMLReactParser(\r\n                                                selectedPayment.description\r\n                                              )\r\n                                            : \"\"}\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Modal>\r\n                        </div>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  <div className=\"manageSubadminpart3\">\r\n                    <div className=\"functionalityButton\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleActivate()}\r\n                      >\r\n                        ACTIVATE\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton3\"\r\n                        onClick={() => handleMultipleDeactivate()}\r\n                      >\r\n                        DEACTIVATE\r\n                      </button>\r\n                      {(userAccess[3]?.Delete === 1 || adminID === 1)&& <>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary APButton4\"\r\n                        onClick={() => handleMultipleDelete()}\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                      </>}\r\n                    </div>\r\n\r\n                    <div className=\"pagination\">\r\n                      <Stack spacing={2}>\r\n                        <Pagination\r\n                          count={totalPages}\r\n                          color=\"primary\"\r\n                          page={currentPage}\r\n                          onChange={(event, page) => setCurrentPage(page)}\r\n                        />\r\n                      </Stack>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"appliedJobListNoData mt-5\">\r\n                  No Records Found\r\n                </div>\r\n              )}\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APJobsList;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z\"\n}), 'Block');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V10h14v10zM9 14H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm-8 4H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2z\"\n}), 'CalendarMonth');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Create');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"\n}), 'FormatListBulleted');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'colorError', 'colorInfo', 'colorSuccess', 'colorWarning', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: (theme.vars || theme).palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  })\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => {\n  var _palette;\n  const palette = (_palette = (theme.vars || theme).palette) == null ? void 0 : _palette[ownerState.color];\n  return _extends({}, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  }, ownerState.color !== 'inherit' && ownerState.color !== 'default' && _extends({\n    color: palette == null ? void 0 : palette.main\n  }, !ownerState.disableRipple && {\n    '&:hover': _extends({}, palette && {\n      backgroundColor: theme.vars ? `rgba(${palette.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(palette.main, theme.palette.action.hoverOpacity)\n    }, {\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    })\n  }), ownerState.size === 'small' && {\n    padding: 5,\n    fontSize: theme.typography.pxToRem(18)\n  }, ownerState.size === 'large' && {\n    padding: 12,\n    fontSize: theme.typography.pxToRem(28)\n  }, {\n    [`&.${iconButtonClasses.disabled}`]: {\n      backgroundColor: 'transparent',\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  });\n});\n\n/**\n * Refer to the [Icons](/material-ui/icons/) section of the documentation\n * regarding the available icon options.\n */\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n  const {\n      edge = false,\n      children,\n      className,\n      color = 'default',\n      disabled = false,\n      disableFocusRipple = false,\n      size = 'medium'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n    if (found) {\n      return new Error(['MUI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default IconButton;"],"names":["APJobsList","_userAccess$","_userAccess$4","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","tokenKey","Cookies","adminID","currentPage","setCurrentPage","open","setOpen","selectedPayment","setSelectedPayment","handleOpen","plan","handleClose","userAccess","setUserAccess","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","selectAll","setSelectAll","handleCheck","id","updatedCheckedData","map","item","includes","filter","checkedId","sortConfig","setSortConfig","direction","symbol","setSymbol","sortedAndFilteredData","array","query","emp_name","toLowerCase","title","company_name","created","sort","a","b","sortAndFilterData","filteredData","searchString","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","pageNumbers","i","push","useEffect","window","scrollTo","handleColumnClick","access","undefined","JSON","parse","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","to","Typography","Add","onClick","class","type","name","placeholder","value","onChange","e","newQuery","target","min","CalendarMonthIcon","scope","_userAccess$2","_userAccess$3","checked","location","cat_name","jobseeker_count","status","Swal","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","slug","message","handleDeactivate","Tooltip","CheckIcon","handleActivate","BlockIcon","Edit","CreateIcon","Delete","handleDelete","DeleteIcon","RemoveRedEyeIcon","FormatListBulletedIcon","ContentCopyIcon","Modal","onClose","Box","IconButton","style","position","top","right","variant","component","sx","mt","work_type","contact_name","contact_number","url","description","HTMLReactParser","ids","toString","idList","action","handleMultipleActivate","join","handleMultipleDeactivate","handleMultipleDelete","Stack","spacing","Pagination","count","page","event","APFooter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getIconButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","props","styles","ownerState","root","capitalize","edge","size","_ref","theme","_extends","textAlign","flex","typography","pxToRem","padding","borderRadius","overflow","vars","palette","active","transition","transitions","create","duration","shortest","disableRipple","backgroundColor","activeChannel","hoverOpacity","alpha","marginLeft","marginRight","_ref2","_palette","main","mainChannel","iconButtonClasses","disabled","React","inProps","ref","useThemeProps","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","centerRipple","focusRipple"],"sourceRoot":""}