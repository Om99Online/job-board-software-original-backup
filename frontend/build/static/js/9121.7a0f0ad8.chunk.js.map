{"version":3,"file":"static/js/9121.7a0f0ad8.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APAddPlan.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APAddPlan = () => {\r\n  const [userData, setUserData] = useState({\r\n    plan_name: \"\",\r\n    job_post: \"\",\r\n    resume_download: \"\",\r\n    candidate_search: \"0\",\r\n    job_apply: \"0\",\r\n    profile_view: \"0\",\r\n    amount: \"\",\r\n    planuser: \"\",\r\n    type_value: \"\",\r\n    type: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    plan_name: \"\",\r\n    job_post: \"\",\r\n    resume_download: \"\",\r\n    candidate_search: \"\",\r\n    job_apply: \"\",\r\n    profile_view: \"\",\r\n    amount: \"\",\r\n    planuser: \"\",\r\n    type_value: \"\",\r\n    type: \"\",\r\n    job_apply_checkbx: \"\",\r\n    job_apply_input: \"\",\r\n    emp_checkbx: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const [planType, setPlanType] = useState([]);\r\n  const [typeofUser, setTypeofUser] = useState([]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/plan/addPlan\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setPlanType(response.data.response.planType);\r\n      setTypeofUser(response.data.response.userType);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get plans data at APmanageplans\");\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.plan_name === \"\") {\r\n        newErrors.plan_name = \"Plan Name is required\";\r\n      }\r\n\r\n      if (userData.amount === \"\") {\r\n        newErrors.amount = \"Amount is required\";\r\n      }\r\n      if (userData.planuser === \"\") {\r\n        newErrors.planuser = \"User Plan is required\";\r\n      }\r\n      if (userData.type === \"\") {\r\n        newErrors.type = \"Plan Type is required\";\r\n      }\r\n      if (userData.type_value === \"\") {\r\n        newErrors.type_value = \"Type is required\";\r\n      }\r\n      if (userData.planuser === \"jobseeker\" && !isNumJobApplyCheckboxChecked) {\r\n        newErrors.job_apply_checkbx = \"Please select atleast one feature\";\r\n      }\r\n      if (\r\n        userData.planuser === \"jobseeker\" &&\r\n        isNumJobApplyCheckboxChecked &&\r\n        userData.job_apply === \"\"\r\n      ) {\r\n        newErrors.job_apply_input = \"Please enter a value\";\r\n      }\r\n      if (\r\n        userData.planuser === \"jobseeker\" &&\r\n        isNumJobApplyCheckboxChecked &&\r\n        userData.job_apply <= 0\r\n      ) {\r\n        newErrors.job_apply_input = \"Please enter a value greater than 0\";\r\n      }\r\n      // if(userData.planuser === \"employer\"){\r\n      //   if(isNumJobPostCheckboxChecked ||\r\n      //     isResumeDownloadCheckboxChecked ||\r\n      //     isCandidateSearchFunctionalityCheckBxChecked ||\r\n      //     isProfileViewCheckboxChecked){\r\n      //       newErrors.emp_checkbx = \"\"\r\n      //     }else{\r\n      //       newErrors.emp_checkbx = \"Please select atleast one feature\"\r\n      //     }\r\n      // }\r\n      // if (\r\n      //   userData.planuser === \"employer\" &&\r\n      //   !isNumJobPostCheckboxChecked ||\r\n      //     !isResumeDownloadCheckboxChecked ||\r\n      //     !isCandidateSearchFunctionalityCheckBxChecked ||\r\n      //     !isProfileViewCheckboxChecked\r\n      // ){\r\n      //   newErrors.emp_checkbx = \"Please select atleast one feature\"\r\n      // }\r\n\r\n      // Validate that at least one of the checkboxes is checked for employer plan\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        !(\r\n          isNumJobPostCheckboxChecked ||\r\n          isResumeDownloadCheckboxChecked ||\r\n          isCandidateSearchFunctionalityCheckBxChecked ||\r\n          isProfileViewCheckboxChecked\r\n        )\r\n      ) {\r\n        newErrors.emp_checkbx = \"Please select at least one feature\";\r\n      }\r\n\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isNumJobPostCheckboxChecked &&\r\n        userData.job_post === \"\"\r\n      ) {\r\n        newErrors.job_post = \"Please enter a value\";\r\n      }\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isNumJobPostCheckboxChecked &&\r\n        userData.job_post <= 0\r\n      ) {\r\n        newErrors.job_post = \"Please enter a value greater than 0\";\r\n      }\r\n\r\n      // for employer - resume download\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isResumeDownloadCheckboxChecked &&\r\n        userData.resume_download === \"\"\r\n      ) {\r\n        newErrors.resume_download = \"Please enter a value\";\r\n      }\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isResumeDownloadCheckboxChecked &&\r\n        userData.resume_download <= 0\r\n      ) {\r\n        newErrors.resume_download = \"Please enter a value greater than 0\";\r\n      }\r\n\r\n      //for employer - profile view\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isProfileViewCheckboxChecked &&\r\n        userData.profile_view === \"\"\r\n      ) {\r\n        newErrors.profile_view = \"Please enter a value\";\r\n      }\r\n      if (\r\n        userData.planuser === \"employer\" &&\r\n        isProfileViewCheckboxChecked &&\r\n        userData.profile_view <= 0\r\n      ) {\r\n        newErrors.profile_view = \"Please enter a value greater than 0\";\r\n      }\r\n      setErrors(newErrors);\r\n      console.log(isNumJobPostCheckboxChecked, \"jobpost\");\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Add Plan\",\r\n          text: \"Do you want to Add this Plan?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/plan/addPlan\",\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Plan added successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            setUserData({\r\n              ...userData,\r\n              plan_name: \"\",\r\n              type_value: \"\",\r\n              type: \"\",\r\n              amount: \"\",\r\n              userplan: \"\",\r\n              feature_ids: \"\",\r\n            });\r\n            window.scrollTo(0, 0);\r\n            navigate(\"/admin/plans/index\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not add plan. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not add plan!\", error);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"planuser\") {\r\n      const selectedUserType = e.target.value;\r\n      setUserType(selectedUserType);\r\n      if (value === \"employer\") {\r\n        setUserData({ ...userData, job_apply: \"0\" });\r\n        setIsNumJobPostCheckboxChecked(false);\r\n        setIsResumeDownloadCheckboxChecked(false);\r\n        setIsProfileViewCheckboxChecked(false);\r\n      }\r\n      if (value === \"jobseeker\") {\r\n        setUserData({\r\n          ...userData,\r\n          job_post: \"0\",\r\n          resume_download: \"0\",\r\n          candidate_search: \"0\",\r\n          profile_view: \"0\",\r\n        });\r\n      }\r\n\r\n      // If the user type changes, hide the input box and checkbox\r\n      setIsNumJobApplyCheckboxChecked(false);\r\n      setIsProfileViewCheckboxChecked(false);\r\n      setIsResumeDownloadCheckboxChecked(false);\r\n    }\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [usertype, setUserType] = useState(\"\");\r\n\r\n  const [isUnlimitedChecked, setIsUnlimitedChecked] = useState(false);\r\n\r\n  // Employer\r\n  // Number of job post\r\n  const [isNumJobPostCheckboxChecked, setIsNumJobPostCheckboxChecked] =\r\n    useState(false);\r\n  const [numJobPostInputValue, setNumJobPostInputValue] = useState(\"\");\r\n  const [isNumJobPostUnlimitedChecked, setIsNumJobPostUnlimitedChecked] =\r\n    useState(false);\r\n  const handleNumJobPostUnlimitedChange = (event) => {\r\n    setIsNumJobPostUnlimitedChecked(event.target.checked);\r\n    if (event.target.checked) {\r\n      setNumJobPostInputValue(\"\"); // Reset input value when \"Unlimited\" is checked\r\n      setUserData({ ...userData, job_post: \"50000\" });\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        job_post: \"\",\r\n      }));\r\n    } else {\r\n      setUserData({ ...userData, job_post: \"\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      job_post: \"\",\r\n    }));\r\n    console.log(userData);\r\n  };\r\n  const handleNumJobPostCheckBxChange = (event) => {\r\n    setIsNumJobPostCheckboxChecked(event.target.checked);\r\n    if (!event.target.checked) {\r\n      setUserData({ ...userData, job_post: \"empty\" });\r\n    }\r\n    if (event.target.checked) {\r\n      setUserData({ ...userData, job_post: \"\" });\r\n    }\r\n    if (!isNumJobPostUnlimitedChecked) {\r\n      setNumJobPostInputValue(event.target.value);\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      emp_checkbx: \"\",\r\n    }));\r\n  };\r\n\r\n  // **********End**********\r\n\r\n  // number of resume download\r\n  const [isResumeDownloadCheckboxChecked, setIsResumeDownloadCheckboxChecked] =\r\n    useState(false);\r\n  const [resumeDownloadsInputValue, setResumeDownloadsInputValue] =\r\n    useState(\"\");\r\n  const [\r\n    isResumeDownloadsUnlimitedChecked,\r\n    setIsResumeDownloadsUnlimitedChecked,\r\n  ] = useState(false);\r\n  // Function to handle changes in the \"Unlimited\" checkbox for Resume Downloads\r\n  const handleResumeDownloadsUnlimitedChange = (e) => {\r\n    setIsResumeDownloadsUnlimitedChecked(e.target.checked);\r\n\r\n    // If \"Unlimited\" is checked, clear the input value\r\n    if (e.target.checked) {\r\n      setResumeDownloadsInputValue(\"\");\r\n      setUserData({ ...userData, resume_download: \"1000000\" });\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        resume_download: \"\",\r\n      }));\r\n    } else {\r\n      setUserData({ ...userData, resume_download: \"\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      resume_download: \"\",\r\n    }));\r\n    console.log(userData);\r\n  };\r\n  // Function to handle changes in the \"Number of Resume Downloads\" input value\r\n  const handleResumeDownloadsCheckBxChange = (e) => {\r\n    setIsResumeDownloadCheckboxChecked(e.target.checked);\r\n    if (!e.target.checked) {\r\n      setUserData({ ...userData, resume_download: \"empty\" });\r\n    } else {\r\n      setUserData({ ...userData, resume_download: \"\" });\r\n    }\r\n    if (!isResumeDownloadsUnlimitedChecked) {\r\n      setResumeDownloadsInputValue(e.target.value);\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      emp_checkbx: \"\",\r\n    }));\r\n  };\r\n\r\n  // *****************End****************\r\n\r\n  // Access candidate search functionality\r\n  const [\r\n    isCandidateSearchFunctionalityCheckBxChecked,\r\n    setIsCandidateSearchFunctionalityCheckBxChecked,\r\n  ] = useState(false);\r\n\r\n  const handleCandidateSearchFunctionalityCheckBxChange = (e) => {\r\n    setIsCandidateSearchFunctionalityCheckBxChecked(e.target.checked);\r\n    if (isCandidateSearchFunctionalityCheckBxChecked) {\r\n      setUserData({ ...userData, candidate_search: \"1\" });\r\n    } else {\r\n      setUserData({ ...userData, candidate_search: \"empty\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      emp_checkbx: \"\",\r\n    }));\r\n    console.log(userData);\r\n  };\r\n\r\n  // *************End*************\r\n\r\n  // Number of candidate profile view\r\n\r\n  const [isProfileViewCheckboxChecked, setIsProfileViewCheckboxChecked] =\r\n    useState(false);\r\n  const [profileViewsInputValue, setProfileViewsInputValue] = useState(\"\");\r\n  const [isProfileViewsUnlimitedChecked, setIsProfileViewsUnlimitedChecked] =\r\n    useState(false);\r\n\r\n  // Function to handle changes in the \"Number of Candidate Profile Views\" input value\r\n  const handleProfileViewsCheckBxChange = (e) => {\r\n    setIsProfileViewCheckboxChecked(e.target.checked);\r\n    if (!e.target.checked) {\r\n      setUserData({ ...userData, profile_view: \"empty\" });\r\n    } else {\r\n      setUserData({ ...userData, profile_view: \"\" });\r\n    }\r\n    if (!isProfileViewsUnlimitedChecked) {\r\n      setProfileViewsInputValue(e.target.value);\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      emp_checkbx: \"\",\r\n    }));\r\n    console.log(userData);\r\n  };\r\n\r\n  // Function to handle changes in the \"Unlimited\" checkbox for Profile Views\r\n  const handleProfileViewsUnlimitedChange = (e) => {\r\n    setIsProfileViewsUnlimitedChecked(e.target.checked);\r\n\r\n    // If \"Unlimited\" is checked, clear the input value\r\n    if (e.target.checked) {\r\n      setProfileViewsInputValue(\"\");\r\n      setUserData({ ...userData, profile_view: \"1000000\" });\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        profile_view: \"\",\r\n      }));\r\n    } else {\r\n      setUserData({ ...userData, profile_view: \"\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      profile_view: \"\",\r\n    }));\r\n  };\r\n\r\n  // ***************End*****************\r\n\r\n  //Jobseeker\r\n  // Number of Job Apply\r\n  const [isNumJobApplyCheckboxChecked, setIsNumJobApplyCheckboxChecked] =\r\n    useState(false);\r\n  const [numJobApplyInputValue, setNumJobApplyInputValue] = useState(\"\");\r\n  const [isNumJobApplyUnlimitedChecked, setIsNumJobApplyUnlimitedChecked] =\r\n    useState(false);\r\n  const [jobApplyValidation, setJobApplyValidation] = useState(false);\r\n\r\n  const handleNumJobApplyCheckBxChange = (event) => {\r\n    console.log(event.target.checked);\r\n    setIsNumJobApplyCheckboxChecked(event.target.checked);\r\n    if (!event.target.checked) {\r\n      setUserData({ ...userData, job_apply: \"empty\" });\r\n      setJobApplyValidation(false);\r\n      setIsNumJobApplyUnlimitedChecked(false);\r\n    }\r\n    if (event.target.checked) {\r\n      setNumJobApplyInputValue(\"\"); // Reset input value when \"Unlimited\" is checked\r\n      setJobApplyValidation(true);\r\n      setUserData({ ...userData, job_apply: \"\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      job_apply_checkbx: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleJobseekerUnlimitedChange = (event) => {\r\n    console.log(event.target.checked);\r\n    setIsNumJobApplyUnlimitedChecked(event.target.checked);\r\n    if (event.target.checked) {\r\n      setNumJobApplyInputValue(\"\"); // Reset input value when \"Unlimited\" is checked\r\n      setUserData({ ...userData, job_apply: \"1000000\" });\r\n      setErrors((prev) => ({\r\n        ...prev,\r\n        job_apply_input: \"\",\r\n      }));\r\n    } else {\r\n      setUserData({ ...userData, job_apply: \"\" });\r\n    }\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      job_apply_input: \"\",\r\n    }));\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setUserData({\r\n      plan_name: \"\",\r\n      job_post: \"\",\r\n      resume_download: \"\",\r\n      candidate_search: \"\",\r\n      job_apply: \"\",\r\n      profile_view: \"\",\r\n      amount: \"\",\r\n      planuser: \"\",\r\n      type_value: \"\",\r\n      type: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/plans/index\")}\r\n                  >\r\n                    Plan List\r\n                  </Link>\r\n                  <Typography color=\"text.primary\">Add Plan</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Add Plan</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Plan Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.plan_name && \"input-error\"\r\n                      }`}\r\n                      name=\"plan_name\"\r\n                      placeholder=\"Plan Name\"\r\n                      value={userData.plan_name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.plan_name && (\r\n                      <div className=\"text-danger\">{errors.plan_name}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Type<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${errors.type && \"input-error\"}`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"type\"\r\n                      value={userData.type}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select Plan Type\r\n                      </option>\r\n                      {Object.entries(planType).map(([key, value]) => {\r\n                        return <option value={key}>{value}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.type && (\r\n                      <div className=\"text-danger\">{errors.type}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      User Plan<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <select\r\n                      className={`form-select ${\r\n                        errors.planuser && \"input-error\"\r\n                      }`}\r\n                      aria-label=\"Default select example\"\r\n                      name=\"planuser\"\r\n                      value={userData.planuser}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected value=\"\">\r\n                        Select User Plan\r\n                      </option>\r\n                      {Object.entries(typeofUser).map(([key, value]) => {\r\n                        return <option value={key}>{value}</option>;\r\n                      })}\r\n                    </select>\r\n                    {errors.planuser && (\r\n                      <div className=\"text-danger\">{errors.planuser}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      {userData.type === \"Years\"\r\n                        ? \"Time Period (In Years)\"\r\n                        : userData.type === \"Months\"\r\n                        ? \"Time Period (In Months)\"\r\n                        : \"Time Period\"}\r\n\r\n                      <span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.type_value && \"input-error\"\r\n                      }`}\r\n                      name=\"type_value\"\r\n                      placeholder=\"Time Period\"\r\n                      value={userData.type_value}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.type_value && (\r\n                      <div className=\"text-danger\">{errors.type_value}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Plan Amount<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.amount && \"input-error\"\r\n                      }`}\r\n                      name=\"amount\"\r\n                      placeholder=\"Plan Amount\"\r\n                      value={userData.amount}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.amount && (\r\n                      <div className=\"text-danger\">{errors.amount}</div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* ****************************** Code for Employer ************************ */}\r\n\r\n                  {userData.planuser === \"employer\" && (\r\n                    <>\r\n                      {errors.emp_checkbx && (\r\n                        <div className=\"text-danger mb-3\">\r\n                          {errors.emp_checkbx}\r\n                        </div>\r\n                      )}\r\n                      <div className=\"mb-2 DashBoardInputBx checkBoxDiv\">\r\n                        <label htmlFor=\"formFile\" className=\"form-label\">\r\n                          Select Features<span className=\"RedStar\">*</span>\r\n                        </label>\r\n                        <div className=\"NumberCheck\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"jobPostCheckbox\"\r\n                            className=\"\"\r\n                            label=\"Number of Job Post\"\r\n                            // className=\"form-select\"\r\n                            // aria-label=\"Default select example\"\r\n                            // name=\"feature_ids\"\r\n                            // value={userData.feature_ids}\r\n                            onChange={handleNumJobPostCheckBxChange}\r\n                          />\r\n\r\n                          <label>Number of Job Post</label>\r\n                        </div>\r\n\r\n                        <div className=\"NumberCheck\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"resumeDownloadsCheckbox\"\r\n                            className=\"\"\r\n                            name=\"resumeDownloads\"\r\n                            // value={userData}\r\n                            onChange={handleResumeDownloadsCheckBxChange}\r\n                          />\r\n                          <label>Number of resume download</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-5 DashBoardInputBx checkBoxDiv\">\r\n                        <div className=\"NumberCheck\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"jobPostCheckbox\"\r\n                            className=\"\"\r\n                            label=\"Number of Job Post\"\r\n                            // className=\"form-select\"\r\n                            // aria-label=\"Default select example\"\r\n                            name=\"feature_ids\"\r\n                            value={userData.candidate_search}\r\n                            onChange={\r\n                              handleCandidateSearchFunctionalityCheckBxChange\r\n                            }\r\n                          />\r\n                          <label>Access candidate search functionality</label>\r\n                        </div>\r\n                        <div className=\"NumberCheck\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"profileViewsCheckbox\"\r\n                            className=\"\"\r\n                            name=\"profileViews\"\r\n                            value={userData.profile_view}\r\n                            onChange={handleProfileViewsCheckBxChange}\r\n                          />\r\n                          <label>Number of Candidate Profile Views</label>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                  {userData.planuser === \"employer\" &&\r\n                    isNumJobPostCheckboxChecked && (\r\n                      <>\r\n                        <div className=\"mb-4 DashBoardInputBx jobPost\">\r\n                          <label htmlFor=\"jobApplyInput\" className=\"form-label\">\r\n                            Number of Job Post:\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"jobPostInput\"\r\n                            className=\"form-control\"\r\n                            name=\"job_post\"\r\n                            value={\r\n                              isNumJobPostUnlimitedChecked\r\n                                ? \"\"\r\n                                : userData.job_post\r\n                            }\r\n                            onChange={(e) => {\r\n                              if (!isNumJobPostUnlimitedChecked) {\r\n                                setNumJobPostInputValue(e.target.value);\r\n                                setUserData({\r\n                                  ...userData,\r\n                                  job_post: e.target.value,\r\n                                });\r\n                                setErrors({\r\n                                  job_post: \"\",\r\n                                });\r\n                                console.log(userData);\r\n                              }\r\n                            }}\r\n                            disabled={isNumJobPostUnlimitedChecked}\r\n                          />\r\n\r\n                          <div className=\"mb-2 DashBoardInputBx checkBoxDiv\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id=\"unlimitedCheckbox\"\r\n                              className=\"unlimitedCheckbx\"\r\n                              name=\"unlimited\"\r\n                              checked={isNumJobPostUnlimitedChecked}\r\n                              onChange={handleNumJobPostUnlimitedChange}\r\n                            />\r\n                            <label className=\"unlimitedLabel\">Unlimited</label>\r\n                          </div>\r\n                          {errors.job_post && (\r\n                            <div className=\"text-danger\">{errors.job_post}</div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {userData.planuser === \"employer\" &&\r\n                    isResumeDownloadCheckboxChecked && (\r\n                      <>\r\n                        <div className=\"mb-4 DashBoardInputBx jobPost\">\r\n                          <label\r\n                            htmlFor=\"resumeDownloadsInput\"\r\n                            className=\"form-label\"\r\n                          >\r\n                            Number of Resume Downloads:\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"jobPostInput\"\r\n                            className=\"form-control\"\r\n                            name=\"resumeDownloadsInput\"\r\n                            value={\r\n                              isResumeDownloadsUnlimitedChecked\r\n                                ? \"\"\r\n                                : userData.resume_download\r\n                            }\r\n                            onChange={(e) => {\r\n                              if (!isResumeDownloadsUnlimitedChecked) {\r\n                                setResumeDownloadsInputValue(e.target.value);\r\n                                setUserData({\r\n                                  ...userData,\r\n                                  resume_download: e.target.value,\r\n                                });\r\n                                setErrors((prev) => ({\r\n                                  ...prev,\r\n                                  resume_download: \"\",\r\n                                }));\r\n                                console.log(userData);\r\n                              }\r\n                            }}\r\n                            disabled={isResumeDownloadsUnlimitedChecked}\r\n                          />\r\n                          <div className=\"mb-2 DashBoardInputBx checkBoxDiv\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id=\"resumeDownloadsUnlimitedCheckbox\"\r\n                              className=\"unlimitedCheckbx\"\r\n                              name=\"resumeDownloadsUnlimited\"\r\n                              checked={isResumeDownloadsUnlimitedChecked}\r\n                              onChange={handleResumeDownloadsUnlimitedChange}\r\n                            />\r\n                            <label className=\"unlimitedLabel\">Unlimited</label>\r\n                          </div>\r\n                          {errors.resume_download && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.resume_download}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  {userData.planuser === \"employer\" &&\r\n                    isProfileViewCheckboxChecked && (\r\n                      <>\r\n                        <div className=\"mb-4 DashBoardInputBx\">\r\n                          <label\r\n                            htmlFor=\"profileViewsInput\"\r\n                            className=\"form-label\"\r\n                          >\r\n                            Number of Candidate Profile Views:\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            id=\"jobPostInput\"\r\n                            className=\"form-control\"\r\n                            name=\"profileViewsInput\"\r\n                            value={\r\n                              isProfileViewsUnlimitedChecked\r\n                                ? \"\"\r\n                                : userData.profile_view\r\n                            }\r\n                            onChange={(e) => {\r\n                              if (!isProfileViewsUnlimitedChecked) {\r\n                                setProfileViewsInputValue(e.target.value);\r\n                                setUserData({\r\n                                  ...userData,\r\n                                  profile_view: e.target.value,\r\n                                });\r\n                                setErrors((prev) => ({\r\n                                  ...prev,\r\n                                  profile_view: \"\",\r\n                                }));\r\n                              }\r\n                              console.log(userData);\r\n                            }}\r\n                            disabled={isProfileViewsUnlimitedChecked}\r\n                          />\r\n                          <div className=\"mb-2 DashBoardInputBx checkBoxDiv\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              id=\"profileViewsUnlimitedCheckbox\"\r\n                              className=\"unlimitedCheckbx\"\r\n                              name=\"profileViewsUnlimited\"\r\n                              checked={isProfileViewsUnlimitedChecked}\r\n                              onChange={handleProfileViewsUnlimitedChange}\r\n                            />\r\n                            <label className=\"unlimitedLabel\">Unlimited</label>\r\n                          </div>\r\n                          {errors.profile_view && (\r\n                            <div className=\"text-danger\">\r\n                              {errors.profile_view}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                  {/* *************************** Code for Jobseeker****************************** */}\r\n\r\n                  {userData.planuser === \"jobseeker\" && (\r\n                    <div className=\"mb-5 DashBoardInputBx checkBoxDiv\">\r\n                      <label htmlFor=\"formFile\" className=\"form-label\">\r\n                        Select Features<span className=\"RedStar\">*</span>\r\n                      </label>\r\n                      <div className=\"NumberCheck\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"jobPostCheckbox\"\r\n                          className=\"\"\r\n                          label=\"Number of Job Post\"\r\n                          // className=\"form-select\"\r\n                          // aria-label=\"Default select example\"\r\n                          name=\"feature_ids\"\r\n                          // value={userData.feature_ids}\r\n                          onChange={handleNumJobApplyCheckBxChange}\r\n                        />\r\n\r\n                        <label>Number of Job Apply</label>\r\n                      </div>\r\n                      {errors.job_apply_checkbx && (\r\n                        <div className=\"text-danger\">\r\n                          {errors.job_apply_checkbx}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {userData.planuser === \"jobseeker\" &&\r\n                    isNumJobApplyCheckboxChecked && (\r\n                      <div className=\"mb-4 DashBoardInputBx\">\r\n                        <label htmlFor=\"jobApplyInput\" className=\"form-label\">\r\n                          Number of Job Apply:\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"jobPostInput\"\r\n                          className=\"form-control\"\r\n                          name=\"job_apply\"\r\n                          value={\r\n                            isNumJobApplyUnlimitedChecked\r\n                              ? \"\"\r\n                              : userData.job_apply\r\n                          }\r\n                          onChange={(e) => {\r\n                            if (!isNumJobApplyUnlimitedChecked) {\r\n                              setNumJobApplyInputValue(e.target.value);\r\n                              setUserData({\r\n                                ...userData,\r\n                                job_apply: e.target.value,\r\n                              });\r\n                              setErrors((prev) => ({\r\n                                ...prev,\r\n                                job_apply_input: \"\",\r\n                              }));\r\n                            }\r\n                          }}\r\n                          disabled={isNumJobApplyUnlimitedChecked}\r\n                        />\r\n\r\n                        <div className=\"mb-2 DashBoardInputBx checkBoxDiv\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            id=\"unlimitedCheckbox\"\r\n                            className=\"unlimitedCheckbx\"\r\n                            name=\"unlimited\"\r\n                            checked={isNumJobApplyUnlimitedChecked}\r\n                            onChange={handleJobseekerUnlimitedChange}\r\n                          />\r\n                          <label className=\"unlimitedLabel\">Unlimited</label>\r\n                        </div>\r\n                        {errors.job_apply_input && (\r\n                          <div className=\"text-danger\">\r\n                            {errors.job_apply_input}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary adminLowerButton1\"\r\n                  onClick={handleClick}\r\n                >\r\n                  SAVE\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary adminLowerButton2\"\r\n                  onClick={handleReset}\r\n                >\r\n                  RESET\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddPlan;\r\n"],"names":["APAddPlan","userData","setUserData","useState","plan_name","job_post","resume_download","candidate_search","job_apply","profile_view","amount","planuser","type_value","type","errors","setErrors","job_apply_checkbx","job_apply_input","emp_checkbx","loading","setLoading","tokenKey","Cookies","adminID","planType","setPlanType","typeofUser","setTypeofUser","navigate","useNavigate","handleChange","e","name","value","target","selectedUserType","setUserType","setIsNumJobPostCheckboxChecked","setIsResumeDownloadCheckboxChecked","setIsProfileViewCheckboxChecked","setIsNumJobApplyCheckboxChecked","prev","inputValue","setInputValue","usertype","isUnlimitedChecked","setIsUnlimitedChecked","isNumJobPostCheckboxChecked","numJobPostInputValue","setNumJobPostInputValue","isNumJobPostUnlimitedChecked","setIsNumJobPostUnlimitedChecked","isResumeDownloadCheckboxChecked","resumeDownloadsInputValue","setResumeDownloadsInputValue","isResumeDownloadsUnlimitedChecked","setIsResumeDownloadsUnlimitedChecked","isCandidateSearchFunctionalityCheckBxChecked","setIsCandidateSearchFunctionalityCheckBxChecked","isProfileViewCheckboxChecked","profileViewsInputValue","setProfileViewsInputValue","isProfileViewsUnlimitedChecked","setIsProfileViewsUnlimitedChecked","isNumJobApplyCheckboxChecked","numJobApplyInputValue","setNumJobApplyInputValue","isNumJobApplyUnlimitedChecked","setIsNumJobApplyUnlimitedChecked","jobApplyValidation","setJobApplyValidation","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","userType","error","console","log","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","for","id","placeholder","onChange","selected","Object","entries","map","_ref","_ref2","htmlFor","label","event","checked","disabled","newErrors","keys","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","userplan","feature_ids","message","handleReset","APFooter"],"sourceRoot":""}