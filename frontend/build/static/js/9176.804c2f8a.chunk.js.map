{"version":3,"file":"static/js/9176.804c2f8a.chunk.js","mappings":"yUAeA,MAsVA,EAtVsBA,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GACjCG,EAAWC,EAAAA,EAAAA,IAAY,SACvBC,EAAUD,EAAAA,EAAAA,IAAY,WAEtBE,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OA4BjBC,EAAAA,EAAAA,YAAU,KAEHP,GA5BSQ,WACd,IACET,GAAW,GACX,MAAMU,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,qBAAoBN,IAC/B,KACA,CACEO,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOf,EACPgB,QAASd,KAIfH,GAAW,GAEXkB,QAAQC,IAAIT,EAASU,KAAKV,SAASW,eAEnCxB,EAAYa,EAASU,KAAKV,SAASW,cACrC,CAAE,MAAOC,GACPtB,GAAW,GACXkB,QAAQC,IAAI,gCACd,GAUEI,GACAC,OAAOC,SAAS,EAAG,IAJnBrB,EAAS,SAKX,GACC,CAACH,EAAUG,IAsGd,OACEsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACTJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,UAASH,SAAA,EACtBC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,IAETjC,GACC8B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAEfL,EAAAA,EAAAA,MAAA,OAAKK,UAAU,kBAAiBH,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,aAAaE,KAAK,eAAcL,UAC7CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACC,SAAS,UAAWT,SAAA,EAEjDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMrC,EAAS,2BAA2BwB,SACpD,eAGDC,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CACHC,UAAU,QACVC,MAAM,UACNC,QAASA,IAAMrC,EAAS,wBAAwBwB,SACjD,mBAIDC,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACF,MAAM,eAAcZ,SAAC,uBAGrCC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMH,SAAC,kBACrBC,EAAAA,EAAAA,KAAA,QAAME,UAAU,YAAYY,SApFjBlC,UACnBmC,EAAEC,iBACF3B,QAAQC,IAAIvB,GAEZ,MAAMkD,EAAW,CACfC,OAAQnD,GAIV,IACEI,GAAW,GACX,MAAMU,QAAiBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAW,qBAAoBN,IAC/BwC,EACA,CACEjC,QAAS,CACP,eAAgB,mBAChBC,IAAKC,EAAAA,EACLC,MAAOf,EACPgB,QAASd,KAIfH,GAAW,GAEa,MAApBU,EAASsC,QACXC,IAAAA,KAAU,CACRC,MAAO,6BACPC,KAAM,UACNC,kBAAmB,UAErBhD,EAAS,yBAET6C,IAAAA,KAAU,CACRC,MAAOxC,EAASU,KAAKiC,QACrBF,KAAM,QACNC,kBAAmB,SAGzB,CAAE,MAAO9B,GACPtB,GAAW,GACXkB,QAAQC,IAAIG,GACZ2B,IAAAA,KAAU,CACRC,MAAO,oBACPC,KAAM,QACNC,kBAAmB,SAEvB,GAqC2DxB,UACjDF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,KAAIH,SAAC,mBAkEpBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,qBAAoBH,SAChChC,EAAS0D,KAAI,CAACC,EAAGC,KAChB3B,EAAAA,EAAAA,KAAA,OAAiBE,UAAU,gBAAeH,UACxCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMH,UACnBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,YAAWH,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,iBAAgBH,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACE4B,KAAK,WACL1B,UAAU,mBACV2B,KAAO,YAAWF,aAClBG,GAAK,YAAWH,IAChBI,QAAsB,IAAbL,EAAEM,OACXC,SAAWC,GApNxBC,EAACD,EAAOR,KACrBrC,QAAQC,IAAI4C,EAAME,OAAOL,SAErBG,EAAME,OAAOL,QACf/D,GAAaqE,GACXA,EAAaZ,KAAKa,GAChBA,EAAKT,OAASH,EAAEG,KACZ,IAAKS,EAAMC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGT,OAAQ,GAC/CM,MAIRtE,GAAaqE,GACXA,EAAaZ,KAAKa,GAChBA,EAAKT,OAASH,EAAEG,KACZ,IAAKS,EAAMC,IAAK,EAAGC,KAAM,EAAGC,OAAQ,EAAGT,OAAQ,GAC/CM,KAGV,EAiM+CH,CAAOD,EAAOR,MAErC1B,EAAAA,EAAAA,KAAA,SAAO0C,QAAU,YAAWf,IAAQ5B,SACjC2B,EAAEG,WAIPhC,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,CACd,IAAV4B,GAAyB,KAAVA,IACd9B,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACE4B,KAAK,WACL1B,UAAU,mBACV2B,KAAO,YAAWF,UAClBG,GAAK,aAAYH,IACjBI,QAAmB,IAAVL,EAAEa,IACXN,SAAUA,IA9MvBP,KACjB1D,GAAaqE,GACXA,EAAaZ,KAAKa,GAChBA,EAAKT,OAASH,EAAEG,KAAO,IAAKS,EAAMC,IAAkB,IAAbD,EAAKC,IAAY,EAAI,GAAMD,KAErE,EAyM6CK,CAAUjB,MAE5B1B,EAAAA,EAAAA,KAAA,SAAO0C,QAAU,aAAYf,IAAQ5B,SAAC,YAM1CF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACE4B,KAAK,WACL1B,UAAU,mBACV2B,KAAO,YAAWF,WAClBG,GAAK,cAAaH,IAClBI,QAAoB,IAAXL,EAAEc,KACXP,SAAUA,IArNpBP,KAClB1D,GAAaqE,GACXA,EAAaZ,KAAKa,GAChBA,EAAKT,OAASH,EAAEG,KAAO,IAAKS,EAAME,KAAoB,IAAdF,EAAKE,KAAa,EAAI,GAAMF,KAEvE,EAgN2CM,CAAWlB,MAE7B1B,EAAAA,EAAAA,KAAA,SAAO0C,QAAU,cAAaf,IAAQ5B,SAAC,YAK9B,IAAV4B,GAAyB,KAAVA,IACd9B,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACE4B,KAAK,WACL1B,UAAU,mBACV2B,KAAO,YAAWF,aAClBG,GAAK,gBAAeH,IACpBI,QAAsB,IAAbL,EAAEe,OACXR,SAAUA,IA5NpBP,KACpB1D,GAAaqE,GACXA,EAAaZ,KAAKa,GAChBA,EAAKT,OAASH,EAAEG,KACZ,IAAKS,EAAMG,OAAwB,IAAhBH,EAAKG,OAAe,EAAI,GAC3CH,KAEP,EAqN6CO,CAAanB,MAE/B1B,EAAAA,EAAAA,KAAA,SAAO0C,QAAU,gBAAef,IAAQ5B,SAAC,uBA1D3C4B,QAsEd3B,EAAAA,EAAAA,KAAA,UAAQ4B,KAAK,SAAS1B,UAAU,0BAAyBH,SAAC,UAG1DC,EAAAA,EAAAA,KAAA,UACE4B,KAAK,SACL1B,UAAU,0BACVU,QAASA,IAAMrC,EAAS,wBAAwBwB,SACjD,oBAOP7B,IAAW8B,EAAAA,EAAAA,KAAC8C,EAAAA,EAAQ,SAGvB,C","sources":["Components/adminpanel/Configuration/APManageRoles.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APManageRoles = () => {\r\n  const [userData, setUserData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/managerole/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n\r\n      console.log(response.data.response.accesscontrol);\r\n\r\n      setUserData(response.data.response.accesscontrol);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(\"Cannot get profile photo data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  //// new code\r\n\r\n  const update = (event, i) => {\r\n    console.log(event.target.checked);\r\n\r\n    if (event.target.checked) {\r\n      setUserData((prevListData) =>\r\n        prevListData.map((item) =>\r\n          item.name === i.name\r\n            ? { ...item, Add: 1, Edit: 1, Delete: 1, Module: 1 }\r\n            : item\r\n        )\r\n      );\r\n    } else {\r\n      setUserData((prevListData) =>\r\n        prevListData.map((item) =>\r\n          item.name === i.name\r\n            ? { ...item, Add: 0, Edit: 0, Delete: 0, Module: 0 }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAdd = (i) => {\r\n    setUserData((prevListData) =>\r\n      prevListData.map((item) =>\r\n        item.name === i.name ? { ...item, Add: item.Add === 1 ? 0 : 1 } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleEdit = (i) => {\r\n    setUserData((prevListData) =>\r\n      prevListData.map((item) =>\r\n        item.name === i.name ? { ...item, Edit: item.Edit === 1 ? 0 : 1 } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDelete = (i) => {\r\n    setUserData((prevListData) =>\r\n      prevListData.map((item) =>\r\n        item.name === i.name\r\n          ? { ...item, Delete: item.Delete === 1 ? 0 : 1 }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const handelSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(userData);\r\n\r\n    const formdata = {\r\n      access: userData,\r\n    };\r\n    //return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/managerole/${slug}`,\r\n        formdata,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n\r\n      if (response.status === 200) {\r\n        Swal.fire({\r\n          title: \"Roles updated successfully\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        navigate(\"/admin/admins/manage\");\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n      Swal.fire({\r\n        title: \"An error occurred\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <div className=\"loader-container\"></div>\r\n        ) : (\r\n          <div className=\"site-min-height\">\r\n            <div className=\"breadCumb1\" role=\"presentation\">\r\n              <Breadcrumbs\r\n                aria-label=\"breadcrumb\"\r\n                separator={<NavigateNextIcon fontSize=\"small\" />}\r\n              >\r\n                <Link\r\n                  underline=\"hover\"\r\n                  color=\"inherit\"\r\n                  onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                >\r\n                  Dashboard\r\n                </Link>\r\n                <Link\r\n                  underline=\"hover\"\r\n                  color=\"inherit\"\r\n                  onClick={() => navigate(\"/admin/admins/manage\")}\r\n                >\r\n                  Subadmin List\r\n                </Link>\r\n\r\n                <Typography color=\"text.primary\">Manage Roles</Typography>\r\n              </Breadcrumbs>\r\n            </div>\r\n            <h2 className=\"mt-4\">Manage Roles</h2>\r\n            <form className=\"adminForm\" onSubmit={handelSubmit}>\r\n              <div className=\"mb-4 mt-5\">\r\n                <div className=\"h4\">Select Roles:</div>\r\n\r\n                {/* <div className=\"row manageRoleBody\">\r\n                  \r\n                  {userData.map((i, index) => (\r\n                    <div key={index} className=\"col-6\">\r\n                      <div className=\"MainTitleChack\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name={`checkbox[${index}][Module]`}\r\n                          id={`checkbox-${index}`}\r\n                          checked={i.Module === 1}\r\n                          onChange={(event) => update(event, i)}\r\n                        />\r\n                        <label htmlFor={`checkbox-${index}`}>{i.name}</label>\r\n                      </div>\r\n\r\n                      <div className=\"SubCheckBx\">\r\n                        {index !== 9 && index !== 10 && (\r\n                          <div className=\"SubtitleBx\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"form-check-input\"\r\n                              name={`checkbox[${index}][Add]`}\r\n                              id={`inner-add-${index}`}\r\n                              checked={i.Add === 1}\r\n                              onChange={() => handleAdd(i)}\r\n                            />\r\n                            <label htmlFor={`inner-add-${index}`}>Add</label>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"SubtitleBx\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name={`checkbox[${index}][Edit]`}\r\n                            id={`inner-edit-${index}`}\r\n                            checked={i.Edit === 1}\r\n                            onChange={() => handleEdit(i)}\r\n                          />\r\n                          <label htmlFor={`inner-edit-${index}`}>Edit</label>\r\n                        </div>\r\n\r\n                        {index !== 9 && index !== 10 && (\r\n                          <div className=\"SubtitleBx\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"form-check-input\"\r\n                              name={`checkbox[${index}][Delete]`}\r\n                              id={`inner-delete-${index}`}\r\n                              checked={i.Delete === 1}\r\n                              onChange={() => handleDelete(i)}\r\n                            />\r\n                            <label htmlFor={`inner-delete-${index}`}>\r\n                              Delete\r\n                            </label>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                 \r\n                 \r\n                </div> */}\r\n                <div className=\"row manageRoleBody\">\r\n                  {userData.map((i, index) => (\r\n                    <div key={index} className=\"col-md-6 mb-4\">\r\n                      <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                          <div className=\"MainTitleChack\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"form-check-input\"\r\n                              name={`checkbox[${index}][Module]`}\r\n                              id={`checkbox-${index}`}\r\n                              checked={i.Module === 1}\r\n                              onChange={(event) => update(event, i)}\r\n                            />\r\n                            <label htmlFor={`checkbox-${index}`}>\r\n                              {i.name}\r\n                            </label>\r\n                          </div>\r\n\r\n                          <div className=\"SubCheckBx\">\r\n                            {index !== 9 && index !== 10 && (\r\n                              <div className=\"SubtitleBx\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  name={`checkbox[${index}][Add]`}\r\n                                  id={`inner-add-${index}`}\r\n                                  checked={i.Add === 1}\r\n                                  onChange={() => handleAdd(i)}\r\n                                />\r\n                                <label htmlFor={`inner-add-${index}`}>\r\n                                  Add\r\n                                </label>\r\n                              </div>\r\n                            )}\r\n\r\n                            <div className=\"SubtitleBx\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                name={`checkbox[${index}][Edit]`}\r\n                                id={`inner-edit-${index}`}\r\n                                checked={i.Edit === 1}\r\n                                onChange={() => handleEdit(i)}\r\n                              />\r\n                              <label htmlFor={`inner-edit-${index}`}>\r\n                                Edit\r\n                              </label>\r\n                            </div>\r\n\r\n                            {index !== 9 && index !== 10 && (\r\n                              <div className=\"SubtitleBx\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  name={`checkbox[${index}][Delete]`}\r\n                                  id={`inner-delete-${index}`}\r\n                                  checked={i.Delete === 1}\r\n                                  onChange={() => handleDelete(i)}\r\n                                />\r\n                                <label htmlFor={`inner-delete-${index}`}>\r\n                                  Delete\r\n                                </label>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary button1\">\r\n                  SAVE\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary button2\"\r\n                  onClick={() => navigate(\"/admin/admins/manage\")}\r\n                >\r\n                  CANCEL\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n        {!loading && <APFooter />}\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APManageRoles;\r\n"],"names":["APManageRoles","userData","setUserData","useState","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","console","log","data","accesscontrol","error","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","onSubmit","e","preventDefault","formdata","access","status","Swal","title","icon","confirmButtonText","message","map","i","index","type","name","id","checked","Module","onChange","event","update","target","prevListData","item","Add","Edit","Delete","htmlFor","handleAdd","handleEdit","handleDelete","APFooter"],"sourceRoot":""}