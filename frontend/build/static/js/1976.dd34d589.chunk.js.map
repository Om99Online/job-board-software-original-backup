{"version":3,"file":"static/js/1976.dd34d589.chunk.js","mappings":"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","sources":["Components/adminpanel/Configuration/APChangeFavicon.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APChangeFavicon = () => {\r\n  const [logo, setLogo] = useState({\r\n    favicon: \"\",\r\n    // favicon_path: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    favicon: \"\",\r\n  });\r\n  // const [logoData, setLogoData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/admin/changeFavicon\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setSelectedImage(response.data.response.favicon_path);\r\n      // setLogo(response.data.response);\r\n      // setLogoData(response.data.response.favicon_path);\r\n      console.log(response.data.response.favicon_path);\r\n    } catch (error) {\r\n      // setLoading(false);\r\n      console.log(\"Cannot get profile photo data\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      if (!logo.favicon || logo.favicon === null) {\r\n        Swal.fire({\r\n          title: \"Please select a Favicon!\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n      } else {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Upload Favicon\",\r\n          text: \"Do you want to upload this Favicon?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n        if (confirmationResult.isConfirmed) {\r\n          // setLoading(true);\r\n          const response = await axios.post(\r\n            BaseApi + \"/admin/changeFavicon\",\r\n            logo,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Favicon updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // setSelectedImage(logo.favicon_path)\r\n            getData();\r\n\r\n            window.scrollTo(0, 0);\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Could not update Favicon. Please try after some time!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not update photo!\");\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setLogo({ ...logo, favicon: base64 });\r\n  //   setSelectedImage(base64);\r\n  // };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n  \r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 500 * 1024; // 500 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 500 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // Clear the file input\r\n        fileInput.value = \"\";\r\n        setSelectedImage(\"\");\r\n        setLogo((prevLogo) => ({\r\n          ...prevLogo,\r\n          favicon: \"\",\r\n        }));\r\n        return;\r\n      }\r\n  \r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n  \r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n  \r\n        if (width < 10 || height < 10 || width > 100 || height > 100) {\r\n          Swal.fire({\r\n            title: \"Image resolution should be between 10x10 and 100x100 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // Clear the file input\r\n          fileInput.value = \"\";\r\n          setSelectedImage(\"\");\r\n          setLogo((prevLogo) => ({\r\n            ...prevLogo,\r\n            favicon: \"\",\r\n          }));\r\n        } else {\r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setLogo((prevLogo) => ({\r\n              ...prevLogo,\r\n              favicon: base64,\r\n            }));\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Change Favicon</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n              <h2 className=\"adminPageHeading\">Change Favicon</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-5 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <div className=\"adminFavicon mb-4 mt-4\">\r\n                      {selectedImage && (\r\n                        <img\r\n                          className=\"adminFaviconImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                    <form>\r\n                      <div className=\"mt-5\">\r\n                        <div class=\"DashBoardInputBx\">\r\n                          <label for=\"formFile\" class=\"form-label\">\r\n                            New Favicon<span className=\"RedStar\">*</span>\r\n                          </label>\r\n                          <input\r\n                            class=\"form-control\"\r\n                            type=\"file\"\r\n                            id=\"formFile\"\r\n                            lable=\"Image\"\r\n                            name=\"favicon\"\r\n                            accept=\".ico\"\r\n                            onChange={(e) => handleFileUpload1(e)}\r\n                          />\r\n                          <div id=\"emailHelp\" class=\"form-text\">\r\n                            Supported File Types: ico (Max. 500 KB). Min file size\r\n                            16 X 16 pixels.\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    UPDATE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/admins/dashboard\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APChangeFavicon;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["APChangeFavicon","logo","setLogo","useState","favicon","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","selectedImage","setSelectedImage","navigate","useNavigate","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","favicon_path","console","log","error","handleFileUpload1","fileInput","e","target","file","files","size","Swal","title","icon","confirmButtonText","value","prevLogo","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertToBase64","then","base64","useEffect","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","underline","color","onClick","Typography","class","alt","for","type","id","lable","name","accept","onChange","text","showCancelButton","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}