{"version":3,"file":"static/js/2522.957439d2.chunk.js","mappings":"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","sources":["Components/adminpanel/Skills/APEditSkills.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\n// import Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditSkills = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = Cookies.get(\"adminID\");\r\n\r\n  const navigate = useNavigate();\r\n  const { slug } = useParams();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    setErrors((prev) => ({\r\n      ...prev,\r\n      [name]: \"\",\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/skill/admin_edit/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.name === \"\") {\r\n        newErrors.name = \"Skill name is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Update Skill?\",\r\n          text: \"Do you want to update this Skill?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/skill/admin_edit/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Skill updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            // getData();\r\n            // setUserData({\r\n            //   ...userData,\r\n            //   new_username: \"\",\r\n            //   conf_username: \"\",\r\n            // });\r\n            // window.scrollTo(0, 0)\r\n            navigate(\"/admin/skills\");\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update skill. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link to=\"/admin/skills\" underline=\"hover\" color=\"inherit\">\r\n                    Skills List\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Edit Skill</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Skills</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Skills Name<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${errors.name && \"input-error\"}`}\r\n                      name=\"name\"\r\n                      placeholder=\"Add Skills\"\r\n                      value={userData.name}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {/* <p>(comma (,) separated)</p> */}\r\n                    {errors.name && (\r\n                      <div className=\"text-danger\">{errors.name}</div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/skills\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditSkills;\r\n"],"names":["APEditSkills","userData","setUserData","useState","name","errors","setErrors","loading","setLoading","tokenKey","Cookies","adminID","navigate","useNavigate","slug","useParams","useEffect","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","getData","window","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","type","id","placeholder","value","onChange","e","target","prev","onClick","newErrors","Object","keys","length","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","status","message","APFooter"],"sourceRoot":""}