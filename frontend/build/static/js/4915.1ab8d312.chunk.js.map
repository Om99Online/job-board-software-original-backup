{"version":3,"file":"static/js/4915.1ab8d312.chunk.js","mappings":"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","sources":["Components/jobseekersSide/JSMailHistory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../element/Footer\";\r\nimport JSSidebar from \"./JSSidebar\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\nimport { FaEye } from \"react-icons/fa\";\r\n\r\nconst JSMailHistory = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [mailHistory, setMailHistory] = useState([]);\r\n\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [hoverFirstButtonColor, setHoverFirstButtonColor] = useState(false);\r\n\r\n  const handleFirstButtonMouseEnter = () => {\r\n    setHoverFirstButtonColor(true);\r\n  };\r\n\r\n  const handleFirstButtonMouseLeave = () => {\r\n    setHoverFirstButtonColor(false);\r\n  };\r\n\r\n  const [hoverSecondButtonColor, setHoverSecondButtonColor] = useState(false);\r\n\r\n  const handleSecondButtonMouseEnter = () => {\r\n    setHoverSecondButtonColor(true);\r\n  };\r\n\r\n  const handleSecondButtonMouseLeave = () => {\r\n    setHoverSecondButtonColor(false);\r\n  };\r\n\r\n  const [hoverThirdButtonColor, setHoverThirdButtonColor] = useState(false);\r\n\r\n  const handleThirdButtonMouseEnter = () => {\r\n    setHoverThirdButtonColor(true);\r\n  };\r\n\r\n  const handleThirdButtonMouseLeave = () => {\r\n    setHoverThirdButtonColor(false);\r\n  };\r\n\r\n  const [hoverFourthButtonColor, setHoverFourthButtonColor] = useState(false);\r\n\r\n  const handleFourthButtonMouseEnter = () => {\r\n    setHoverFourthButtonColor(true);\r\n  };\r\n\r\n  const handleFourthButtonMouseLeave = () => {\r\n    setHoverFourthButtonColor(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/jobseekerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/candidates/mailhistory\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if (response.data.status === 200) {\r\n        setMailHistory(response.data.response);\r\n        console.log(mailHistory);\r\n      } else if (response.data.status === 400) {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"jobseekerExperience.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get mail history of job seeker\");\r\n    }\r\n  };\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const mailPerPage = 10;\r\n\r\n  // Get current jobs to display based on pagination\r\n  const indexOfLastMail = currentPage * mailPerPage;\r\n  const indexOfFirstMail = indexOfLastMail - mailPerPage;\r\n  const currentData = mailHistory\r\n    ? mailHistory.slice(indexOfFirstMail, indexOfLastMail)\r\n    : mailHistory.slice(indexOfFirstMail, indexOfLastMail);\r\n\r\n  // Function to handle pagination page change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      {loading ? (\r\n        <div className=\"loader-container\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"container paymentHistory\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-3\">\r\n                <JSSidebar />\r\n              </div>\r\n\r\n              <div\r\n                className=\"col-lg-9 col-md-9 mb-5\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"PHHeader\">\r\n                  <div className=\"d-flex PageHeader\">\r\n                    <img src=\"/Images/employerSide/icon6color.png\" alt=\"\" />\r\n                    <h3 className=\"ms-1\" style={{ color: \"#4464ac\" }}>\r\n                      {t(\"jobseekerMailHistory.mailHistory\")}\r\n                    </h3>\r\n                  </div>\r\n\r\n                  <div className=\"PHBody mt-5\">\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr className=\"table-active TrFirst\">\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                            {t(\"jobseekerMailHistory.username\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                            {t(\"jobseekerMailHistory.companyName\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                            {t(\"jobseekerMailHistory.subject\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                            {t(\"jobseekerMailHistory.created\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                            {t(\"jobseekerMailHistory.action\")}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {currentData &&\r\n                          currentData.map((i, index) => {\r\n                            return (\r\n                              <tr className=\"TrDefoult\">\r\n                                <td className=\"\">{i.user_name}</td>\r\n                                <td className=\"\">{i.company_name}</td>\r\n                                <td className=\"\">\r\n                                  <Link to={`/candidates/maildetail/${i.slug}`}>\r\n                                    {i.subject}\r\n                                  </Link>\r\n                                </td>\r\n                                <td className=\"\">\r\n                                  {i.created.substring(0, 10)}\r\n                                </td>\r\n                                <td className=\"TrActions\">\r\n                                  <Link\r\n                                    to={`/candidates/maildetail/${i.slug}`}\r\n                                    className=\"btn btn-primary\"\r\n                                    style={{\r\n                                      backgroundColor: hoverFirstButtonColor\r\n                                        ? secondaryColor\r\n                                        : primaryColor,\r\n                                      border: hoverFirstButtonColor\r\n                                        ? secondaryColor\r\n                                        : primaryColor,\r\n                                    }}\r\n                                    // onMouseEnter={handleFirstButtonMouseEnter}\r\n                                    // onMouseLeave={handleFirstButtonMouseLeave}\r\n                                  >\r\n                                    {/* <i class=\"fa-solid fa-eye\"></i> */}\r\n                                    <FaEye />\r\n                                  </Link>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div className=\"JSMailHistoryPagination\">\r\n                  <p className=\"text-muted empPaginationData\">\r\n                    {t(\"pagination.NoofRecords\")}{\" \"}\r\n                    {mailHistory.length > 0\r\n                      ? indexOfFirstMail + 1\r\n                      : indexOfFirstMail}\r\n                    -{Math.min(indexOfLastMail, mailHistory.length)} of{\" \"}\r\n                    {mailHistory ? mailHistory.length : mailHistory.length}\r\n                  </p>\r\n                  {/* Custom Pagination */}\r\n                  <div className=\"d-flex justify-content-center empPaginationButton\">\r\n                    <button\r\n                      className=\"navButton1 me-2\"\r\n                      disabled={currentPage === 1}\r\n                      onClick={() => handlePageChange(currentPage - 1)}\r\n                      style={{\r\n                        backgroundColor: hoverThirdButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverThirdButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleThirdButtonMouseEnter}\r\n                      onMouseLeave={handleThirdButtonMouseLeave}\r\n                    >\r\n                      {t(\"pagination.Prev\")}\r\n                    </button>\r\n                    <button\r\n                      className=\"navButton1\"\r\n                      disabled={\r\n                        mailHistory\r\n                          ? indexOfLastMail >= mailHistory.length\r\n                          : indexOfLastMail >= mailHistory.length\r\n                      }\r\n                      onClick={() => handlePageChange(currentPage + 1)}\r\n                      style={{\r\n                        backgroundColor: hoverFourthButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverFourthButtonColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleFourthButtonMouseEnter}\r\n                      onMouseLeave={handleFourthButtonMouseLeave}\r\n                    >\r\n                      {t(\"pagination.Next\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSMailHistory;\r\n"],"names":["JSMailHistory","loading","setLoading","useState","mailHistory","setMailHistory","tokenKey","Cookies","primaryColor","secondaryColor","t","i18n","useTranslation","hoverFirstButtonColor","setHoverFirstButtonColor","hoverSecondButtonColor","setHoverSecondButtonColor","hoverThirdButtonColor","setHoverThirdButtonColor","hoverFourthButtonColor","setHoverFourthButtonColor","navigate","useNavigate","useEffect","getData","window","scrollTo","async","response","axios","BaseApi","headers","key","ApiKey","token","data","status","console","log","Swal","title","message","icon","confirmButtonText","error","setTimeout","location","reload","currentPage","setCurrentPage","indexOfLastMail","indexOfFirstMail","currentData","slice","handlePageChange","pageNumber","_jsxs","_Fragment","children","_jsx","NavBar","className","JSSidebar","style","borderLeft","borderRight","src","alt","color","scope","map","i","index","user_name","company_name","Link","to","slug","subject","created","substring","backgroundColor","border","FaEye","length","Math","min","disabled","onClick","onMouseEnter","handleThirdButtonMouseEnter","onMouseLeave","handleThirdButtonMouseLeave","handleFourthButtonMouseEnter","handleFourthButtonMouseLeave","Footer"],"sourceRoot":""}