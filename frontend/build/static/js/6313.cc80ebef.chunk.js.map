{"version":3,"file":"static/js/6313.cc80ebef.chunk.js","mappings":"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","sources":["Components/employersSide/PaymentHistory.js","Components/employersSide/Sidebar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../element/NavBar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Footer from \"../element/Footer\";\r\nimport axios from \"axios\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { Button, IconButton, Typography } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst PaymentHistory = () => {\r\n  const [paymentHistory, setPaymentHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  let primaryColor = Cookies.get(\"primaryColor\");\r\n  let secondaryColor = Cookies.get(\"secondaryColor\");\r\n  const [hoverSearchColor, setHoverSearchColor] = useState(false);\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const handleSearchMouseEnter = () => {\r\n    setHoverSearchColor(true);\r\n  };\r\n\r\n  const handleSearchMouseLeave = () => {\r\n    setHoverSearchColor(false);\r\n  };\r\n\r\n  const [hoverUploadCVColor, setHoverUploadCVColor] = useState(false);\r\n\r\n  const handleUploadCVMouseEnter = () => {\r\n    setHoverUploadCVColor(true);\r\n  };\r\n\r\n  const handleUploadCVMouseLeave = () => {\r\n    setHoverUploadCVColor(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [selectedPayment, setSelectedPayment] = useState(null); // Track the selected payment\r\n  const [DownloadURL, setDownloadURL] = useState(\"\");\r\n  const [downloadActive, setDownloadActive] = useState();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = (plan) => {\r\n    console.log(\"Clicked payment:\", plan); // Add this line\r\n    setSelectedPayment(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPayment(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/user/employerlogin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + \"/payments/history\",\r\n        null, // Pass null as the request body if not required\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if(response.data.status === 200) {\r\n        setPaymentHistory(response.data.response);\r\n        console.log(paymentHistory);\r\n      } else {\r\n        Swal.fire({\r\n          title: t(\"employerFavouriteListProfile.addFavFailedTitle\"),\r\n          text: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"membershipPlan.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get payment data\");\r\n    }\r\n  };\r\n\r\n  const generateDownload = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/users/generateinvoice/${id}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      if(response.data.status === 200) {\r\n        setDownloadURL(response.data.response.invoice);\r\n        setDownloadActive(id);\r\n      } else {\r\n        Swal.fire({\r\n          title: t(\"employerFavouriteListProfile.addFavFailedTitle\"),\r\n          text: response.data.message,\r\n          icon: \"error\",\r\n          confirmButtonText: t(\"membershipPlan.close\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      if (error.message === \"Network Error\") {\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        navigate(\"/\");\r\n        Swal.fire({\r\n          title: t(\"tokenExpired.tokenExpired\"),\r\n          icon: \"warning\",\r\n          confirmButtonText: t(\"jobDescription.close\"),\r\n        });\r\n        setTimeout(function () {\r\n          window.location.reload();\r\n        }, 3000);\r\n      }\r\n      console.log(\"Cannot get CV data pdf format\", error.message);\r\n    }\r\n  };\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paymentDataPerPage = 10;\r\n\r\n  // Get current jobs to display based on pagination\r\n  const indexOfLastPayment = currentPage * paymentDataPerPage;\r\n  const indexOfFirstPayment = indexOfLastPayment - paymentDataPerPage;\r\n  const currentData = paymentHistory\r\n    ? paymentHistory.slice(indexOfFirstPayment, indexOfLastPayment)\r\n    : paymentHistory.slice(indexOfFirstPayment, indexOfLastPayment);\r\n\r\n  // Function to handle pagination page change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(downloadActive, DOCDownloadURL)\r\n    if (downloadActive && DownloadURL) {\r\n      // Create a hidden link element\r\n      const link = document.createElement(\"a\");\r\n      link.style.display = \"none\";\r\n      link.href = DownloadURL;\r\n      link.download = \"Membership_Plan_Invoice.pdf\";\r\n      document.body.appendChild(link);\r\n\r\n      // Trigger a click on the link\r\n      link.click();\r\n\r\n      // Clean up\r\n      document.body.removeChild(link);\r\n      setDownloadURL(\"\");\r\n      setDownloadActive(null);\r\n    }\r\n  }, [downloadActive, DownloadURL]);\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className=\"container paymentHistory\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-md-3\">\r\n            <Sidebar />\r\n          </div>\r\n          {loading ? (\r\n            <div className=\"loader-container\"></div>\r\n          ) : (\r\n            <>\r\n              <div\r\n                className=\"col-lg-9 col-md-9 mb-5\"\r\n                style={{\r\n                  borderLeft: \"2px solid #e6e8e7\",\r\n                  borderRight: \"2px solid #e6e8e7\",\r\n                }}\r\n              >\r\n                <div className=\"PHHeader PageHeader\">\r\n                  <div className=\"d-flex\">\r\n                    <img src=\"/Images/employerSide/icon3color.png\" alt=\"\" />\r\n                    <h3 className=\"mx-2\">{t(\"employerPaymentHistory.paymentHistory\")}</h3>\r\n                  </div>\r\n\r\n                  <div className=\"PHBody mt-5\">\r\n                    <table className=\"table\">\r\n                      <thead>\r\n                        <tr className=\"table-active TrFirst\">\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.no\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.planName\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.amount\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.transactionId\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.startDate\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.endDate\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.paidOn\")}\r\n                          </th>\r\n                          <th className=\"\" scope=\"col p-3\">\r\n                          {t(\"employerPaymentHistory.action\")}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {currentData.map((i, index) => {\r\n                          return (\r\n                            <>\r\n                              <tr className=\"TrDefoult\" key={index}>\r\n                                <td className=\"\">{index + 1}</td>\r\n                                <td className=\"\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"paymentButton\"\r\n                                    onClick={() => handleOpen(i)}\r\n                                    style={{\r\n                                      backgroundColor: primaryColor,\r\n                                      border: primaryColor,\r\n                                    }}\r\n                                  >\r\n                                    {i.plan_name}\r\n                                  </button>\r\n                                </td>\r\n                                <td className=\"\">{i.amount}</td>\r\n                                <td className=\"\">{i.transaction_id}</td>\r\n                                <td className=\"\">{i.start_date}</td>\r\n                                <td className=\"\">{i.end_date}</td>\r\n                                <td className=\"\">{i.created}</td>\r\n                                <td className=\"TrActions\">\r\n                                  <Link\r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => handleOpen(i)}\r\n                                    style={{\r\n                                      backgroundColor: primaryColor,\r\n                                      color: \"white\",\r\n                                      border: primaryColor,\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fa fa-eye\"></i>\r\n                                  </Link>\r\n\r\n                                  <Link\r\n                                    onClick={() => generateDownload(i.id)}\r\n                                    className=\"btn btn-secondary\"\r\n                                    style={{\r\n                                      backgroundColor: secondaryColor,\r\n                                      color: \"white\",\r\n                                      border: secondaryColor,\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fa fa-download\"></i>\r\n                                  </Link>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                        <div>\r\n                          <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"modal-modal-title\"\r\n                            aria-describedby=\"modal-modal-description\"\r\n                          >\r\n                            <Box sx={{ ...style, width: 500 }}>\r\n                              <IconButton\r\n                                onClick={handleClose}\r\n                                className=\"close-button\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: 10,\r\n                                  right: 10,\r\n                                }}\r\n                              >\r\n                                &times;\r\n                              </IconButton>\r\n\r\n                              <Typography\r\n                                id=\"modal-modal-title\"\r\n                                variant=\"h6\"\r\n                                component=\"h2\"\r\n                              ></Typography>\r\n                              <Typography\r\n                                id=\"modal-modal-description\"\r\n                                sx={{ mt: 6 }}\r\n                              >\r\n                                {selectedPayment && (\r\n                                  <div className=\"modals \">\r\n                                    <div className=\"modalHead\">\r\n                                      <h1 style={{ color: secondaryColor }}>\r\n                                        {selectedPayment.transaction_id}\r\n                                      </h1>\r\n                                    </div>\r\n                                    <div className=\"modalBody mt-4\">\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-4 fw-bold m-2\">\r\n                                        {t(\"employerPaymentHistory.planName\")}:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"col-md-4 m-2\">\r\n                                          {selectedPayment.plan_name}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-4 fw-bold m-2\">\r\n                                        {t(\"employerPaymentHistory.amount\")}:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"col-md-4 m-2\">\r\n                                          {selectedPayment.amount}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-4 fw-bold m-2\">\r\n                                        {t(\r\n                                            \"employerPaymentHistory.transactionId\"\r\n                                          )}:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"col-md-4 m-2\">\r\n                                          {selectedPayment.transaction_id}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-4 fw-bold m-2\">\r\n                                        {t(\r\n                                            \"employerPaymentHistory.startDate\"\r\n                                          )}:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"col-md-4 m-2\">\r\n                                          {selectedPayment.start_date}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row\">\r\n                                        <div className=\"col-md-4 fw-bold m-2\">\r\n                                        {t(\"employerPaymentHistory.endDate\")}:{\" \"}\r\n                                        </div>\r\n                                        <div className=\"col-md-4 m-2\">\r\n                                          {selectedPayment.end_date}\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      {/* <div className=\"row\"> */}\r\n                                      <div className=\"col-md-4 fw-bold m-2\">\r\n                                      {t(\"employerPaymentHistory.features\")}:{\" \"}\r\n                                      </div>\r\n                                      <div className=\"col-md-12 m-2\">\r\n                                        {Object.values(\r\n                                          selectedPayment.features\r\n                                        ).map((value, index, key) => {\r\n                                          return (\r\n                                            <>\r\n                                              {index + 1}. {value}\r\n                                              <br />\r\n                                            </>\r\n                                          );\r\n                                        })}\r\n                                      </div>\r\n                                      {/* </div> */}\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Modal>\r\n                        </div>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div className=\"paymentHistoryPagination\">\r\n                  <p className=\"text-muted empPaginationData\">\r\n                    {t(\"pagination.NoofRecords\")} {paymentHistory.length > 0 ? indexOfFirstPayment + 1 : indexOfFirstPayment}-\r\n                    {Math.min(indexOfLastPayment, paymentHistory.length)} of{\" \"}\r\n                    {paymentHistory\r\n                      ? paymentHistory.length\r\n                      : paymentHistory.length}\r\n                  </p>\r\n                  {/* Custom Pagination */}\r\n                  <div className=\"d-flex justify-content-center empPaginationButton\">\r\n                    <button\r\n                      className=\"navButton1 me-2\"\r\n                      disabled={currentPage === 1}\r\n                      onClick={() => handlePageChange(currentPage - 1)}\r\n                      style={{\r\n                        backgroundColor: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                        border: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleSearchMouseEnter}\r\n                      onMouseLeave={handleSearchMouseLeave}\r\n                    >\r\n                      {t(\"pagination.Prev\")}\r\n                    </button>\r\n                    <button\r\n                      className=\"navButton1\"\r\n                      disabled={\r\n                        paymentHistory\r\n                          ? indexOfLastPayment >= paymentHistory.length\r\n                          : indexOfLastPayment >= paymentHistory.length\r\n                      }\r\n                      onClick={() => handlePageChange(currentPage + 1)}\r\n                      style={{\r\n                        backgroundColor: hoverUploadCVColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n\r\n                        border: hoverSearchColor\r\n                          ? secondaryColor\r\n                          : primaryColor,\r\n                      }}\r\n                      onMouseEnter={handleUploadCVMouseEnter}\r\n                      onMouseLeave={handleUploadCVMouseLeave}\r\n                    >\r\n                      {t(\"pagination.Next\")}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentHistory;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport BaseApi from \"../api/BaseApi\";\r\nimport ApiKey from \"../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Sidebar = () => {\r\n  const tokenKey = Cookies.get(\"tokenClient\");\r\n  const navigate = useNavigate();\r\n  const [t, i18n] = useTranslation(\"global\");\r\n\r\n  const [isQuickLinksVisible, setIsQuickLinksVisible] = useState(false);\r\n  const [isDashboardLinksVisible, setIsDashboardLinksVisible] = useState(false);\r\n\r\n  const toggle1 = () => {\r\n    setIsQuickLinksVisible(!isQuickLinksVisible);\r\n  };\r\n  const toggle2 = () => {\r\n    setIsDashboardLinksVisible(!isDashboardLinksVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // const handleWindowResize = () => {\r\n    //   if (window.innerWidth < 768) {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(false);\r\n    //   } else {\r\n    //     setIsQuickLinksVisible(false);\r\n    //     setIsDashboardLinksVisible(true);\r\n    //   }\r\n    // };\r\n\r\n    const handleWindowResize = () => {\r\n      if (window.innerWidth > 768) {\r\n        // Reload the page when the screen size is less than 768\r\n        window.location.reload();\r\n      }\r\n    };\r\n\r\n    // Call the function on component mount\r\n    // handleWindowResize();\r\n\r\n    // Attach event listener for window resize\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n\r\n    // Clean up event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  let screenWidth = window.innerWidth;\r\n\r\n  const handleLogOut = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: t(\"employerSidebar.confirmTitle\"),\r\n        text: t(\"employerSidebar.confirmTxt\"),\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: t(\"employerSidebar.yes\"),\r\n        cancelButtonText: t(\"employerSidebar.no\"),\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(BaseApi + \"/users/logout\", null, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n          },\r\n        });\r\n        Cookies.remove(\"tokenClient\");\r\n        Cookies.remove(\"user_type\");\r\n        Cookies.remove(\"fname\");\r\n        // sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: t(\"employerSidebar.successTitle\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: t(\"employerSidebar.failedTitle\"),\r\n        icon: \"error\",\r\n        confirmButtonText: t(\"employerSidebar.close\"),\r\n      });\r\n      console.log(\"Cannot logout!\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAc = async () => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Account\",\r\n        text: \"Do you want to delete this account?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(\r\n          BaseApi + \"/users/deleteAccount\",\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n            },\r\n          }\r\n        );\r\n        sessionStorage.clear();\r\n        navigate(\"/\");\r\n        const Toast = Swal.mixin({\r\n          toast: true,\r\n          position: \"top-end\",\r\n          showConfirmButton: false,\r\n          timer: 3000,\r\n          timerProgressBar: true,\r\n          didOpen: (toast) => {\r\n            toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n            toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n          },\r\n        });\r\n\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Account deleted successfully!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Could not delete account!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Cannot delete account!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {screenWidth > 768 ? (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"SBBody\">\r\n              <Link to=\"/user/createjob\" className=\"bodyItem SidebarCreatJob\">\r\n                <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon1color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/managejob\" className=\"bodyItem SidebarManageJob\">\r\n                <div className=\"SidebarImages SidebarManageJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon2color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/paymenthistory\"\r\n                className=\"bodyItem SidebarPaymentJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon3color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/favouritelist\"\r\n                className=\"bodyItem SidebarFavouriteJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon4color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/importjobseekers\"\r\n                className=\"bodyItem SidebarImportJob\"\r\n              >\r\n                <div className=\"SidebarImages SidebarImportJobBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon5color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-5\">\r\n              <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className=\"body\">\r\n              <Link\r\n                to=\"/user/mailhistory\"\r\n                className=\"bodyItem SidebarMailHistory\"\r\n              >\r\n                <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon6color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n              </Link>\r\n              <Link to=\"/user/myprofile\" className=\"bodyItem SidebarMyProfile\">\r\n                <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon7color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/editprofile\"\r\n                className=\"bodyItem SidebarEditProfile\"\r\n              >\r\n                <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon8color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changepassword\"\r\n                className=\"bodyItem SidebarChangePass\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangePassBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon9color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n              </Link>\r\n              <Link\r\n                to=\"/user/changelogo\"\r\n                className=\"bodyItem SidebarChangeLogo\"\r\n              >\r\n                <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon10color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n              </Link>\r\n              <Link className=\"bodyItem SidebarLogOut\">\r\n                <div className=\"SidebarImages SidebarLogOutBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon11color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                {t(\"employerSidebar.logout\")}\r\n                </div>\r\n              </Link>\r\n              <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                  <img\r\n                    className=\"\"\r\n                    src=\"/Images/employerSide/icon12color.png\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"menuTitle\">{t(\"employerSidebar.deleteAccount\")}</div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"SidebarSection1 pe-4\">\r\n            <div className=\"SBHeader\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.quickLinks\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle1}>\r\n                  {isQuickLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isQuickLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isQuickLinksVisible ? \"block\" : \"none\",\r\n                  \r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/createjob\"\r\n                    className=\"bodyItem SidebarCreatJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarCreatJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon1color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.createJob\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/managejob\"\r\n                    className=\"bodyItem SidebarManageJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarManageJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon2color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.manageJobs\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/paymenthistory\"\r\n                    className=\"bodyItem SidebarPaymentJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarPaymentJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon3color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.paymentHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/favouritelist\"\r\n                    className=\"bodyItem SidebarFavouriteJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarFavouriteJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon4color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.favouriteList\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/importjobseekers\"\r\n                    className=\"bodyItem SidebarImportJob\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarImportJobBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon5color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.importJobseekers\")}</div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"SidebarSection2 pe-4\">\r\n            <div className=\"SBHeader mt-3\">\r\n              <div className=\"sidebarEachHeader\">\r\n                <h3>{t(\"employerSidebar.myDashboard\")}</h3>\r\n                <Link className=\"sidebarPlusLink\" onClick={toggle2}>\r\n                  {isDashboardLinksVisible ? (\r\n                    <i class=\"fa-solid fa-circle-minus\"></i>\r\n                  ) : (\r\n                    <i class=\"fa-solid fa-circle-plus\"></i>\r\n                  )}\r\n                </Link>\r\n              </div>\r\n              <hr style={{ border: \"1px solid rgb(211 209 209)\" }} />\r\n            </div>\r\n            <div className={`SBBody ${isDashboardLinksVisible ? \"open\" : \"\"}`}>\r\n              <ul\r\n                style={{\r\n                  display: isDashboardLinksVisible ? \"block\" : \"none\",\r\n                }}\r\n              >\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/mailhistory\"\r\n                    className=\"bodyItem SidebarMailHistory\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMailHistoryBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon6color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.mailHistory\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/myprofile\"\r\n                    className=\"bodyItem SidebarMyProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarMyProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon7color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.myProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/editprofile\"\r\n                    className=\"bodyItem SidebarEditProfile\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarEditProfileBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon8color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.editProfile\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changepassword\"\r\n                    className=\"bodyItem SidebarChangePass\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangePassBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon9color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changePassword\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    to=\"/user/changelogo\"\r\n                    className=\"bodyItem SidebarChangeLogo\"\r\n                  >\r\n                    <div className=\"SidebarImages SidebarChangeLogoBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon10color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">{t(\"employerSidebar.changeLogo\")}</div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"bodyItem SidebarLogOut\">\r\n                    <div className=\"SidebarImages SidebarLogOutBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon11color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\" onClick={handleLogOut}>\r\n                    {t(\"employerSidebar.logout\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/user/deleteaccount\" className=\"bodyItem SidebarDeleteAcc\">\r\n                    <div className=\"SidebarImages SidebarDeleteAccBg\">\r\n                      <img\r\n                        className=\"\"\r\n                        src=\"/Images/employerSide/icon12color.png\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"menuTitle\">\r\n                    {t(\"employerSidebar.deleteAccount\")}\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["PaymentHistory","paymentHistory","setPaymentHistory","useState","loading","setLoading","tokenKey","Cookies","primaryColor","secondaryColor","hoverSearchColor","setHoverSearchColor","t","i18n","useTranslation","hoverUploadCVColor","setHoverUploadCVColor","navigate","useNavigate","selectedPayment","setSelectedPayment","DownloadURL","setDownloadURL","downloadActive","setDownloadActive","open","setOpen","handleOpen","plan","console","log","handleClose","useEffect","getData","window","scrollTo","async","response","axios","BaseApi","headers","key","ApiKey","token","data","status","Swal","title","text","message","icon","confirmButtonText","error","setTimeout","location","reload","currentPage","setCurrentPage","indexOfLastPayment","indexOfFirstPayment","currentData","slice","handlePageChange","pageNumber","link","document","createElement","style","display","href","download","body","appendChild","click","removeChild","_jsxs","_Fragment","children","_jsx","NavBar","className","Sidebar","borderLeft","borderRight","src","alt","scope","map","i","index","type","onClick","backgroundColor","border","plan_name","amount","transaction_id","start_date","end_date","created","Link","color","id","invoice","generateDownload","Modal","onClose","Box","sx","position","top","left","transform","width","bgcolor","boxShadow","p","IconButton","right","Typography","variant","component","mt","Object","values","features","value","length","Math","min","disabled","onMouseEnter","handleSearchMouseEnter","onMouseLeave","handleSearchMouseLeave","handleUploadCVMouseEnter","handleUploadCVMouseLeave","Footer","isQuickLinksVisible","setIsQuickLinksVisible","isDashboardLinksVisible","setIsDashboardLinksVisible","handleWindowResize","innerWidth","addEventListener","removeEventListener","screenWidth","handleLogOut","showCancelButton","cancelButtonText","isConfirmed","toast","showConfirmButton","timer","timerProgressBar","didOpen","fire","to","toggle1","class","toggle2"],"sourceRoot":""}