{"version":3,"file":"static/js/1388.c759c109.chunk.js","mappings":"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","sources":["Components/adminpanel/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport BlockIcon from \"@mui/icons-material/Block\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport Cookies from \"js-cookie\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ZAxis,\r\n} from \"recharts\";\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APAddBlog = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [listData, setListData] = useState([]);\r\n  const [checkedData, setCheckedData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [userData, setUserData] = useState([]);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = parseInt(Cookies.get(\"adminID\"));\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [jobseekerGraphData, setJobseekerGraphData] = useState([]);\r\n  const [employerGraphData, setEmployerGraphData] = useState([]);\r\n  const [employeesList, setEmployeesList] = useState([]);\r\n  const [jobseekersList, setJobseekersList] = useState([]);\r\n  const itemsPerPage = 3;\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const [userAccess , setUserAccess] = useState({})\r\n  const handleOpen = (plan) => {\r\n    setSelectedPlan(plan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedPlan(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  // const data = [\r\n  //   {\r\n  //     name: \"Jan\",\r\n  //     uv: 40,\r\n  //     Employer: 24,\r\n  //     // amt: 2400,\r\n  //     range: 20,\r\n  //   },\r\n  //   {\r\n  //     name: \"Feb\",\r\n  //     uv: 30,\r\n  //     Employer: 13,\r\n  //     // amt: 2210,\r\n  //     range: 40,\r\n  //   },\r\n  //   {\r\n  //     name: \"Mar\",\r\n  //     uv: 20,\r\n  //     Employer: 98,\r\n  //     // amt: 2290,\r\n  //     range: 60,\r\n  //   },\r\n  //   {\r\n  //     name: \"Apr\",\r\n  //     // uv: 27,\r\n  //     Employer: 39,\r\n  //     // amt: 2000,\r\n  //     range: 80,\r\n  //   },\r\n  //   {\r\n  //     name: \"May\",\r\n  //     // uv: 18,\r\n  //     Employer: 48,\r\n  //     // amt: 2181,\r\n  //     range: 100,\r\n  //   },\r\n  //   {\r\n  //     name: \"Jun\",\r\n  //     // uv: 23,\r\n  //     pv: 38,\r\n  //     // amt: 2500,\r\n  //     range: 120,\r\n  //   },\r\n  //   {\r\n  //     name: \"Jul\",\r\n  //     // uv: 34,\r\n  //     pv: 43,\r\n  //     // amt: 2100,\r\n  //     range: 140,\r\n  //   },\r\n  // ];\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(BaseApi + \"/admin/dashboard\", null, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          key: ApiKey,\r\n          token: tokenKey,\r\n          adminid: adminID,\r\n        },\r\n      });\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setEmployeesList(response.data.response.employees);\r\n      setJobseekersList(response.data.response.jobseekers);\r\n      setJobseekerGraphData(response.data.response.jobseekerchart);\r\n      setEmployerGraphData(response.data.response.employerchart);\r\n      console.log(employeesList);\r\n    } catch (error) {\r\n      console.log(\"Error at Dashboard at Admin panel\");\r\n    }\r\n  };\r\n\r\n  // const handleClick = async () => {\r\n  //   try {\r\n  //     // if (!userData.title || !userData.description || !userData.image || userData.meta_title || userData.meta_description || userData.meta_keywords) {\r\n  //     //   Swal.fire({\r\n  //     //     title: \"Please fill all the fields!\",\r\n  //     //     icon: \"warning\",\r\n  //     //     confirmButtonText: \"Close\",\r\n  //     //   });\r\n  //     // } else {\r\n  //     const confirmationResult = await Swal.fire({\r\n  //       title: \"Add Blog?\",\r\n  //       text: \"Do you want to Add this Blog?\",\r\n  //       icon: \"question\",\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: \"Yes\",\r\n  //       cancelButtonText: \"No\",\r\n  //     });\r\n\r\n  //     if (confirmationResult.isConfirmed) {\r\n  //       setLoading(true);\r\n\r\n  //       const response = await axios.post(\r\n  //         BaseApi + \"/admin/blog/admin_addblogs\",\r\n  //         userData,\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             key: ApiKey,\r\n  //             token: tokenKey,\r\n  //             adminid: adminID,\r\n  //           },\r\n  //         }\r\n  //       );\r\n\r\n  //       setLoading(false);\r\n\r\n  //       if (response.data.status === 200) {\r\n  //         Swal.fire({\r\n  //           title: \"Blog added successfully!\",\r\n  //           icon: \"success\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //         navigate(\"/admin/blogs\");\r\n  //         setUserData({\r\n  //           ...userData,\r\n  //           title: \"\",\r\n  //           description: \"\",\r\n  //           image: \"\",\r\n  //           meta_title: \"\",\r\n  //           meta_keywords: \"\",\r\n  //           meta_description: \"\",\r\n  //         });\r\n  //         window.scrollTo(0, 0);\r\n  //       } else {\r\n  //         Swal.fire({\r\n  //           title: response.data.message,\r\n  //           icon: \"error\",\r\n  //           confirmButtonText: \"Close\",\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //     // }\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     Swal.fire({\r\n  //       title: \"Failed\",\r\n  //       text: \"Could not add Blog. Please try again later!\",\r\n  //       icon: \"error\",\r\n  //       confirmButtonText: \"Close\",\r\n  //     });\r\n  //     console.log(\"Could not add blog!\", error);\r\n  //   }\r\n  // };\r\n\r\n  // const [selectAll, setSelectAll] = useState(true);\r\n\r\n  // const handleCheck = (id) => {\r\n  //   // Check if the id is 'selectAll', indicating the \"Select All\" checkbox\r\n  //   if (id === \"selectAll\") {\r\n  //     // If it's \"Select All\", toggle the selectAll state\r\n  //     setSelectAll(!selectAll);\r\n\r\n  //     // If selectAll is true, select all checkboxes, else unselect all\r\n  //     const updatedCheckedData = selectAll\r\n  //       ? listData.map((item) => item.id)\r\n  //       : [];\r\n  //     setCheckedData(updatedCheckedData);\r\n  //   } else {\r\n  //     // Individual checkbox handling remains the same\r\n  //     if (checkedData.includes(id)) {\r\n  //       // If the ID is already in the array, remove it\r\n  //       setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //     } else {\r\n  //       // If the ID is not in the array, add it\r\n  //       setCheckedData([...checkedData, id]);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const handleCheck = (id) => {\r\n  //   if (checkedData.includes(id)) {\r\n  //     // If the ID is already in the array, remove it\r\n  //     setCheckedData(checkedData.filter((checkedId) => checkedId !== id));\r\n  //   } else {\r\n  //     // If the ID is not in the array, add it\r\n  //     setCheckedData([...checkedData, id]);\r\n  //   }\r\n  // };\r\n  const handleActivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Activate\",\r\n        text: \"Do you want to Activate?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/activateuser/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Activated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        // getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Activate\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't activate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDeactivate = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Deactivate\",\r\n        text: \"Do you want to Deactivate?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/deactivateuser/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Deactivated successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        // getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Deactivate\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't deactivate the record!\", error.message);\r\n    }\r\n  };\r\n  const handleDelete = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete\",\r\n        text: \"Do you want to Delete?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n      if (confirmationResult.isConfirmed) {\r\n        // setLoading(true);\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/users/deleteusers/${slug}`,\r\n          null, // Pass null as the request body if not required\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        // setLoading(false);\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n        // getData();\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed. Please try after some time!\",\r\n        text: \"Could not Delete\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Couldn't delete the record!\", error.message);\r\n    }\r\n  };\r\n\r\n  const [symbol, setSymbol] = useState(\"🔺\");\r\n\r\n  const handleColumnClick = () => {\r\n    console.log(\"Work\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  useEffect(() => {\r\n    const access = Cookies.get(\"access\")\r\n\r\n    if(typeof(access) !== null  || access !==  \"\" || access !==  undefined){\r\n\r\n        console.log(JSON.parse(access))\r\n\r\n        setUserAccess(JSON.parse(access))\r\n    }else{\r\n        setUserAccess({})\r\n    }\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"dashboardHeader\">\r\n                <h2 className=\"\">Dashboard</h2>\r\n                <p>Here is the information about all the records</p>\r\n              </div>\r\n              <div className=\"dashboardBody\">\r\n                <div className=\"dashboardSection1 row\">\r\n                  {(userAccess[0]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-3\">\r\n                    <Link to=\"/admin/users\">\r\n                      <div className=\"dashboardCard1\">\r\n                        <div className=\"cardUpperLeft\">\r\n                          <p>Employers</p>\r\n                        </div>\r\n                        {/* <div className=\"cardUpperRight\">\r\n                        <input type=\"checkbox\" />\r\n                      </div> */}\r\n                        <div className=\"cardCenter\">\r\n                          <h3>{userData.total_customers}</h3>\r\n                        </div>\r\n                        <div className=\"cardLower\">\r\n                        \r\n                          <div className=\"cardLowerImg\">\r\n                          <img src=\"/Images/adminpanel/new.png\" />\r\n                        </div>\r\n                          {/* <div className=\"cardLowerTxt\">\r\n                          <p>\r\n                            10.2\r\n                            <span className=\"lowerCardInnerTxt\">Increased</span>\r\n                          </p>\r\n                        </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  </>}\r\n\r\n                  {(userAccess[2]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-3\">\r\n                    <Link to=\"/admin/candidates\">\r\n                      <div className=\"dashboardCard2\">\r\n                        <div className=\"cardUpperLeft\">\r\n                          <p>Jobseeker</p>\r\n                        </div>\r\n                        {/* <div className=\"cardUpperRight\">\r\n                        <input type=\"checkbox\" />\r\n                      </div> */}\r\n                        <div className=\"cardCenter\">\r\n                          <h3>{userData.total_candidate}</h3>\r\n                        </div>\r\n                        <div className=\"cardLower\">\r\n                        <div className=\"cardLowerImg\">\r\n                          <img src=\"/Images/adminpanel/Jobseeker.png\" />\r\n                        </div>\r\n                          {/* <div className=\"cardLowerTxt\">\r\n                          <p>\r\n                            10.2\r\n                            <span className=\"lowerCardInnerTxt\">Increased</span>\r\n                          </p>\r\n                        </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  </>}\r\n\r\n                  {(userAccess[3]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-3\">\r\n                    <Link to=\"/admin/jobs\">\r\n                      <div className=\"dashboardCard3\">\r\n                        <div className=\"cardUpperLeft\">\r\n                          <p>Jobs</p>\r\n                        </div>\r\n                        {/* <div className=\"cardUpperRight\">\r\n                        <input type=\"checkbox\" />\r\n                      </div> */}\r\n                        <div className=\"cardCenter\">\r\n                          <h3>{userData.total_job}</h3>\r\n                        </div>\r\n                        <div className=\"cardLower\">\r\n                        <div className=\"cardLowerImg\">\r\n                          <img src=\"/Images/adminpanel/Jobs.png\" />\r\n                        </div>\r\n                          {/* <div className=\"cardLowerTxt\">\r\n                          <p>\r\n                            10.2\r\n                            <span className=\"lowerCardInnerTxt\">Increased</span>\r\n                          </p>\r\n                        </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  </>}\r\n\r\n                  {(userAccess[8]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-3\">\r\n                    <Link to=\"/admin/skills\">\r\n                      <div className=\"dashboardCard4\">\r\n                        <div className=\"cardUpperLeft\">\r\n                          <p>Skills</p>\r\n                        </div>\r\n                        {/* <div className=\"cardUpperRight\">\r\n                        <input type=\"checkbox\" />\r\n                      </div> */}\r\n                        <div className=\"cardCenter\">\r\n                          <h3>{userData.total_skill}</h3>\r\n                        </div>\r\n                        <div className=\"cardLower\">\r\n                        <div className=\"cardLowerImg\">\r\n                          <img src=\"/Images/adminpanel/Skills.png\" />\r\n                        </div>\r\n                          {/* <div className=\"cardLowerTxt\">\r\n                          <p>\r\n                            10.2\r\n                            <span className=\"lowerCardInnerTxt\">Increased</span>\r\n                          </p>\r\n                        </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                  </>}\r\n                </div>\r\n                <div className=\"dashboardSection2 row\">\r\n                  {(userAccess[0]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-6\">\r\n                    <h4>Employer</h4>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <LineChart\r\n                        width={600}\r\n                        height={400}\r\n                        data={employerGraphData}\r\n                        margin={{\r\n                          top: 50,\r\n                          right: 30,\r\n                          left: 0,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis dataKey=\"range\" />\r\n\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"Employer\"\r\n                          stroke=\"#8884d8\"\r\n                          activeDot={{ r: 8 }}\r\n                        />\r\n                        {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\r\n                      </LineChart>\r\n                    </div>\r\n                  </div>\r\n                  </>}\r\n\r\n                  {(userAccess[2]?.Module === 1 || adminID === 1)&& <>\r\n                  <div className=\"col-md-6\">\r\n                    <h4>Jobseeker</h4>\r\n                    <div style={{ width: \"100%\" }}>\r\n                      <LineChart\r\n                        width={600}\r\n                        height={400}\r\n                        data={jobseekerGraphData}\r\n                        margin={{\r\n                          top: 50,\r\n                          right: 30,\r\n                          left: 0,\r\n                          bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis dataKey=\"range\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line\r\n                          type=\"monotone\"\r\n                          dataKey=\"Jobseeker\"\r\n                          stroke=\"#8884d8\"\r\n                          activeDot={{ r: 8 }}\r\n                        />\r\n                        {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\r\n                      </LineChart>\r\n                    </div>\r\n                  </div>\r\n                  </>}\r\n\r\n                </div>\r\n\r\n                {(userAccess[0]?.Module === 1 || adminID === 1)&& <>\r\n                <div className=\"dashboardSection3 manageSubadminPart2\">\r\n                  <div className=\"tableHeader\">\r\n                    <p>Employer List</p>\r\n                    <button\r\n                      className=\"tableHeaderButton\"\r\n                      onClick={() => navigate(\"/admin/users\")}\r\n                    >\r\n                      View All\r\n                    </button>\r\n                  </div>\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        {/* <th className=\"checkBoxCol checkBxHead\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"tableCheckBox\"\r\n                              // checked={selectAll}\r\n\r\n                              onClick={() => handleCheck(\"selectAll\")}\r\n                            />\r\n                          </th> */}\r\n                        <th onClick={() => handleColumnClick(\"company_name\")}>\r\n                          Company Name {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"full_name\")}>\r\n                          Full Name {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"position\")}>\r\n                          Position {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"email\")}>\r\n                          Email {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"current_plan\")}>\r\n                          Current Plan {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"created\")}>\r\n                          Created {symbol}\r\n                        </th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {employeesList?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <tr>\r\n                              {/* <td className=\"checkBoxCol\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"tableCheckBox\"\r\n                                    checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                    onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                                  />\r\n                                </td> */}\r\n                              <td>{i.company_name}</td>\r\n                              <td>{i.fullname}</td>\r\n                              <td>{i.position}</td>\r\n                              <td>{i.email_address}</td>\r\n                              <td>{i.current_plan}</td>\r\n                              <td>{i.created}</td>\r\n\r\n                              <td className=\"APActionButton\">\r\n                                {i.status === 1 ? (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleDeactivate(i.slug)}\r\n                                  >\r\n                                    {/* <Tooltip title=\"Deactivate\"> */}\r\n                                    <CheckIcon />\r\n                                    {/* </Tooltip> */}\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleActivate(i.slug)}\r\n                                  >\r\n                                    {/* <Tooltip title=\"Activate\"> */}\r\n                                    <BlockIcon />\r\n                                    {/* </Tooltip> */}\r\n                                  </button>\r\n                                )}\r\n                                {(userAccess[0]?.Edit === 1 || adminID === 1)&& <>\r\n                                <button\r\n                                  className=\"btn-primary\"\r\n                                  onClick={() =>\r\n                                    navigate(`/admin/users/editusers/${i.slug}`)\r\n                                  }\r\n                                >\r\n                                  {/* <Tooltip title=\"Edit\"> */}\r\n                                  <CreateIcon />\r\n                                  {/* </Tooltip> */}\r\n                                </button>\r\n                                </>}\r\n                                {(userAccess[0]?.Delete === 1 || adminID === 1)&& <>\r\n                                <button\r\n                                  className=\"btn btn-secondary\"\r\n                                  onClick={() => handleDelete(i.slug)}\r\n                                >\r\n                                  {/* <Tooltip title=\"Delete\"> */}\r\n                                  <DeleteIcon />\r\n                                  {/* </Tooltip> */}\r\n                                </button>\r\n                                </>}\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                </>}\r\n                {(userAccess[2]?.Module === 1 || adminID === 1)&& <>\r\n                <div className=\"dashboardSection4 manageSubadminPart2\">\r\n                  <div className=\"tableHeader\">\r\n                    <p>Jobseeker List</p>\r\n                    <button\r\n                      className=\"tableHeaderButton\"\r\n                      onClick={() => navigate(\"/admin/candidates\")}\r\n                    >\r\n                      View All\r\n                    </button>\r\n                  </div>\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        {/* <th className=\"checkBoxCol checkBxHead\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"tableCheckBox\"\r\n                              // checked={selectAll}\r\n\r\n                              onClick={() => handleCheck(\"selectAll\")}\r\n                            />\r\n                          </th> */}\r\n\r\n                        <th onClick={() => handleColumnClick(\"full_name\")}>\r\n                          Full Name {symbol}\r\n                        </th>\r\n\r\n                        <th onClick={() => handleColumnClick(\"email\")}>\r\n                          Email {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"phone\")}>\r\n                          Phone {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"location\")}>\r\n                          Location {symbol}\r\n                        </th>\r\n                        <th onClick={() => handleColumnClick(\"created\")}>\r\n                          Created {symbol}\r\n                        </th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {jobseekersList?.map((i) => {\r\n                        return (\r\n                          <>\r\n                            <tr>\r\n                              {/* <td className=\"checkBoxCol\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"tableCheckBox\"\r\n                                  checked={checkedData.includes(i.id)} // Check if the current ID is in checkedData\r\n                                  onChange={() => handleCheck(i.id)} // Pass the ID to the handler\r\n                                />\r\n                              </td> */}\r\n                              <td>{i.fullname}</td>\r\n                              <td>{i.email_address}</td>\r\n                              <td>{i.contact}</td>\r\n                              <td>{i.location?.substring(0, 10)}</td>\r\n\r\n                              <td>{i.created}</td>\r\n\r\n                              <td className=\"APActionButton\">\r\n                                {i.status === 1 ? (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleDeactivate(i.slug)}\r\n                                  >\r\n                                    {/* <Tooltip title=\"Deactivate\"> */}\r\n                                    <CheckIcon />\r\n                                    {/* </Tooltip> */}\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    className=\"btn-secondary\"\r\n                                    onClick={() => handleActivate(i.slug)}\r\n                                  >\r\n                                    {/* <Tooltip title=\"Activate\"> */}\r\n                                    <BlockIcon />\r\n                                    {/* </Tooltip> */}\r\n                                  </button>\r\n                                )}\r\n                                {(userAccess[2]?.Edit === 1 || adminID === 1)&& <>\r\n                                <button\r\n                                  className=\"btn-primary\"\r\n                                  onClick={() =>\r\n                                    navigate(\r\n                                      `/admin/candidates/editcandidates/${i.slug}`\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  {/* <Tooltip title=\"Edit\"> */}\r\n                                  <CreateIcon />\r\n                                  {/* </Tooltip> */}\r\n                                </button>\r\n                                </>}\r\n                                {(userAccess[2]?.Delete === 1 || adminID === 1)&& <>\r\n                                <button\r\n                                  className=\"btn btn-secondary\"\r\n                                  onClick={() => handleDelete(i.slug)}\r\n                                >\r\n                                  {/* <Tooltip title=\"Delete\"> */}\r\n                                  <DeleteIcon />\r\n                                  {/* </Tooltip> */}\r\n                                </button>\r\n                                </>}\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                </>}\r\n              </div>\r\n            </div>\r\n            <APFooter />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APAddBlog;\r\n\r\n// function convertToBase64(file) {\r\n//   return new Promise((resolve, reject) => {\r\n//     const fileReader = new FileReader();\r\n//     fileReader.readAsDataURL(file);\r\n//     fileReader.onload = () => {\r\n//       resolve(fileReader.result);\r\n//     };\r\n//     fileReader.onerror = (error) => {\r\n//       reject(error);\r\n//     };\r\n//   });\r\n// }\r\n"],"names":["APAddBlog","_userAccess$","_userAccess$2","_userAccess$3","_userAccess$4","_userAccess$5","_userAccess$6","_userAccess$7","_userAccess$10","navigate","useNavigate","loading","setLoading","useState","listData","setListData","checkedData","setCheckedData","searchQuery","setSearchQuery","userData","setUserData","tokenKey","Cookies","adminID","parseInt","currentPage","setCurrentPage","jobseekerGraphData","setJobseekerGraphData","employerGraphData","setEmployerGraphData","employeesList","setEmployeesList","jobseekersList","setJobseekersList","open","setOpen","selectedPlan","setSelectedPlan","userAccess","setUserAccess","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","employees","jobseekers","jobseekerchart","employerchart","console","log","error","handleActivate","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","slug","status","message","handleDeactivate","handleDelete","symbol","setSymbol","handleColumnClick","useEffect","window","scrollTo","access","undefined","JSON","parse","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","Module","Link","to","total_customers","src","total_candidate","total_job","total_skill","style","width","LineChart","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","onClick","scope","map","i","_userAccess$8","_userAccess$9","company_name","fullname","position","email_address","current_plan","created","CheckIcon","BlockIcon","Edit","CreateIcon","Delete","DeleteIcon","_i$location","_userAccess$11","_userAccess$12","contact","location","substring","APFooter"],"sourceRoot":""}