{"version":3,"file":"static/js/9778.2a559414.chunk.js","mappings":"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","sources":["Components/adminpanel/Blogs/APEditBlog.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport APNavBar from \"../Elements/APNavBar\";\r\nimport APSidebar from \"../APSidebar/APSidebar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\n// import Link from \"@mui/material/Link\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport axios from \"axios\";\r\nimport BaseApi from \"../../api/BaseApi\";\r\nimport ApiKey from \"../../api/ApiKey\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { useRef } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\"; // import styles\r\nimport APFooter from \"../Elements/APFooter\";\r\n\r\nconst APEditBlog = () => {\r\n  const [userData, setUserData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    meta_keyword: \"\",\r\n    meta_title: \"\",\r\n    meta_description: \"\",\r\n    image: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    meta_keyword: \"\",\r\n    meta_title: \"\",\r\n    meta_description: \"\",\r\n    image: \"\",\r\n  });\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const tokenKey = Cookies.get(\"token\");\r\n  const adminID = parseInt(Cookies.get(\"adminID\"));\r\n\r\n  const navigate = useNavigate();\r\n  const editor = useRef(null);\r\n  const { slug } = useParams();\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   setUserData((prev) => ({\r\n  //     ...prev,\r\n  //     [name]: value,\r\n  //   }));\r\n  // };\r\n\r\n  \r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\r\n        BaseApi + `/admin/blog/admin_editblogs/${slug}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            key: ApiKey,\r\n            token: tokenKey,\r\n            adminid: adminID,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setUserData(response.data.response);\r\n      setSelectedImage(response.data.response.image);\r\n    } catch (error) {\r\n      console.log(\"Error at chnage username at Admin panel\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    setUserData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      const newErrors = {};\r\n\r\n      if (userData.title === \"\") {\r\n        newErrors.title = \"Blog Title is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n\r\n      if (!userData.description.trim()) {\r\n        newErrors.description = \"Blog Description is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      if (userData.image === \"\") {\r\n        newErrors.image = \"Blog Image is required\";\r\n        window.scrollTo(0, 0);\r\n      }\r\n      setErrors(newErrors);\r\n\r\n      if (Object.keys(newErrors).length === 0) {\r\n        const confirmationResult = await Swal.fire({\r\n          title: \"Edit Blog?\",\r\n          text: \"Do you want to Edit this Blog?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n          confirmButtonText: \"Yes\",\r\n          cancelButtonText: \"No\",\r\n        });\r\n\r\n        if (confirmationResult.isConfirmed) {\r\n          setLoading(true);\r\n\r\n          const response = await axios.post(\r\n            BaseApi + `/admin/blog/admin_editblogs/${slug}`,\r\n            userData,\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                key: ApiKey,\r\n                token: tokenKey,\r\n                adminid: adminID,\r\n              },\r\n            }\r\n          );\r\n\r\n          setLoading(false);\r\n\r\n          if (response.data.status === 200) {\r\n            Swal.fire({\r\n              title: \"Blog updated successfully!\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n            navigate(\"/admin/blogs\");\r\n            setUserData({\r\n              ...userData,\r\n              title: \"\",\r\n              description: \"\",\r\n              image: \"\",\r\n              meta_title: \"\",\r\n              meta_keyword: \"\",\r\n              meta_description: \"\",\r\n            });\r\n            window.scrollTo(0, 0);\r\n          } else {\r\n            Swal.fire({\r\n              title: response.data.message,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Close\",\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not update Blog. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not change username!\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload1 = async (e) => {\r\n    const fileInput = e.target;\r\n    const file = fileInput.files[0];\r\n  \r\n    // Check if the file is selected\r\n    if (file) {\r\n      // Check the file size (in bytes)\r\n      const fileSizeInBytes = file.size;\r\n      const maxSizeInBytes = 600 * 1024; // 600 KB\r\n      if (fileSizeInBytes > maxSizeInBytes) {\r\n        Swal.fire({\r\n          title: \"Image size should be under 600 KB\",\r\n          icon: \"warning\",\r\n          confirmButtonText: \"Close\",\r\n        });\r\n        // setErrors({\r\n        //   ...errors,\r\n        //   image: \"Image size should be under 2MB\",\r\n        // });\r\n        // Clear the file input\r\n        fileInput.value = \"\"; // This clears the input\r\n        // setSelectedImage(\"\")\r\n        // setUserData({ ...userData, image: \"\" });\r\n        return;\r\n      }\r\n  \r\n      // Check image resolution\r\n      const img = new Image();\r\n      img.src = window.URL.createObjectURL(file);\r\n  \r\n      img.onload = () => {\r\n        const width = img.naturalWidth;\r\n        const height = img.naturalHeight;\r\n  \r\n        if (width <250 || height < 250) {\r\n          Swal.fire({\r\n            title: \"Minimum image resolution should be 250x250 pixels\",\r\n            icon: \"warning\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          // setErrors({\r\n          //   ...errors,\r\n          //   image: \"Image resolution should be 1920x634 pixels\",\r\n          // });\r\n          // Clear the file input\r\n          fileInput.value = \"\"; // This clears the input\r\n          // setSelectedImage(\"\")\r\n          // setUserData({ ...userData, image: \"\" });\r\n        } else {\r\n          // Clear the image error\r\n          setErrors({\r\n            ...errors,\r\n            image: \"\",\r\n          });\r\n  \r\n          // Convert the image to base64\r\n          convertToBase64(file).then((base64) => {\r\n            setUserData({ ...userData, image: base64 });\r\n            setSelectedImage(base64);\r\n          });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  // const handleFileUpload1 = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const base64 = await convertToBase64(file);\r\n  //   setUserData({ ...userData, image: base64 });\r\n  //   setSelectedImage(base64);\r\n\r\n  //   // Clear the image error\r\n  //   setErrors({\r\n  //     ...errors,\r\n  //     image: \"\",\r\n  //   });\r\n  // };\r\n\r\n  const deleteImage = () => {\r\n    setSelectedImage(null);\r\n    setUserData({ ...userData, image: \"\" });\r\n    const fileInput = document.getElementById(\"formFile\"); // Replace with the actual ID of your file input\r\n    if (fileInput) {\r\n      fileInput.value = \"\";\r\n    }\r\n  };\r\n\r\n  const deleteImageWithSlug = async (slug) => {\r\n    try {\r\n      const confirmationResult = await Swal.fire({\r\n        title: \"Delete Image?\",\r\n        text: \"Do you want to delete this Image?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes\",\r\n        cancelButtonText: \"No\",\r\n      });\r\n\r\n      if (confirmationResult.isConfirmed) {\r\n        const response = await axios.post(\r\n          BaseApi + `/admin/blog/admin_deleteBlogImage/${slug}`,\r\n          null,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              key: ApiKey,\r\n              token: tokenKey,\r\n              adminid: adminID,\r\n            },\r\n          }\r\n        );\r\n        if (response.data.status === 200) {\r\n          Swal.fire({\r\n            title: \"Image Deleted successfully!\",\r\n            icon: \"success\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n          getData();\r\n        } else {\r\n          Swal.fire({\r\n            title: response.data.message,\r\n            icon: \"error\",\r\n            confirmButtonText: \"Close\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      Swal.fire({\r\n        title: \"Failed\",\r\n        text: \"Could not delete Image. Please try again later!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Close\",\r\n      });\r\n      console.log(\"Could not delete image!\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if tokenKey is not present\r\n    if (!tokenKey) {\r\n      // Redirect to the home page\r\n      navigate(\"/admin\");\r\n    } else {\r\n      // TokenKey is present, fetch data or perform other actions\r\n      getData();\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [tokenKey, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <APNavBar />\r\n      <div className=\"APBasic\">\r\n        <APSidebar />\r\n\r\n        {loading ? (\r\n          <>\r\n            <div className=\"loader-container\"></div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"site-min-height\">\r\n              <div className=\"breadCumb1\" role=\"presentation\">\r\n                <Breadcrumbs\r\n                  aria-label=\"breadcrumb\"\r\n                  separator={<NavigateNextIcon fontSize=\"small\" />}\r\n                >\r\n                  <Link\r\n                    to=\"/admin/admins/dashboard\"\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                  <Link to=\"/admin/blogs\" underline=\"hover\" color=\"inherit\">\r\n                    Blogs\r\n                  </Link>\r\n\r\n                  <Typography color=\"text.primary\">Edit Blog</Typography>\r\n                </Breadcrumbs>\r\n              </div>\r\n\r\n              <h2 className=\"adminPageHeading\">Edit Blog</h2>\r\n              <form className=\"adminForm\">\r\n                <div className=\"mb-4 mt-5\">\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Blog Title<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className={`form-control ${\r\n                        errors.title && \"input-error\"\r\n                      }`}\r\n                      name=\"title\"\r\n                      placeholder=\"Blog Title\"\r\n                      value={userData.title}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {errors.title && (\r\n                      <div className=\"text-danger\">{errors.title}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-5 DashBoardInputBx DashBoardCreatBx APJoditEditor\">\r\n                    <label className=\"form-label\" htmlFor=\"form3Example3\">\r\n                      Description<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <ReactQuill\r\n                      theme=\"snow\"\r\n                      value={userData.description}\r\n                      onChange={(value) => handleChange(\"description\", value)}\r\n                    />\r\n\r\n                    {errors.description && (\r\n                      <div className=\"text-danger\">{errors.description}</div>\r\n                    )}\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Image<span className=\"RedStar\">*</span>\r\n                    </label>\r\n                    <input\r\n                      class={`form-control ${errors.image && \"input-error\"}`}\r\n                      type=\"file\"\r\n                      id=\"formFile\"\r\n                      label=\"Image\"\r\n                      name=\"logo\"\r\n                      accept=\".jpeg, .png, .jpg, .gif\"\r\n                      onChange={(e) => handleFileUpload1(e)}\r\n                    />\r\n                    {errors.image && (\r\n                      <div className=\"text-danger\">{errors.image}</div>\r\n                    )}\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Supported File Types: gif, jpg, jpeg, png (Max. 10MB). Min\r\n                      file size 250 X 250 pixels.\r\n                    </div>\r\n                    {selectedImage && (\r\n                      <div>\r\n                        <img\r\n                          className=\"selectedInputImage\"\r\n                          src={selectedImage}\r\n                          alt=\"Selected\"\r\n                        />\r\n                        {userData.image ? (\r\n                          <button\r\n                            className=\"APButton3\"\r\n                            type=\"button\"\r\n                            onClick={() => deleteImageWithSlug(slug)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        ) : (\r\n                          <button className=\"APButton3\" onClick={deleteImage}>\r\n                            Delete\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Meta Title\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"meta_title\"\r\n                      placeholder=\"Meta Title\"\r\n                      value={userData.meta_title}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Meta Keyword\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"meta_keyword\"\r\n                      placeholder=\"Meta Keyword\"\r\n                      value={userData.meta_keyword}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div class=\"mb-5 DashBoardInputBx\">\r\n                    <label for=\"formFile\" class=\"form-label\">\r\n                      Meta Description\r\n                    </label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      id=\"form3Example1\"\r\n                      className=\"form-control\"\r\n                      name=\"meta_description\"\r\n                      placeholder=\"Meta Description\"\r\n                      value={userData.meta_description}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <div id=\"emailHelp\" class=\"form-text\">\r\n                      Note.: Meta details are important please fill these\r\n                      information. If you don't filled it by default information\r\n                      will be show.\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button1\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    SAVE\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary button2\"\r\n                    onClick={() => navigate(\"/admin/blogs\")}\r\n                  >\r\n                    CANCEL\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <APFooter />\r\n\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APEditBlog;\r\n\r\nfunction convertToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(file);\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = (error) => {\r\n      reject(error);\r\n    };\r\n  });\r\n}\r\n"],"names":["APEditBlog","userData","setUserData","useState","title","description","meta_keyword","meta_title","meta_description","image","errors","setErrors","selectedImage","setSelectedImage","loading","setLoading","tokenKey","Cookies","adminID","parseInt","navigate","useNavigate","slug","useRef","useParams","getData","async","response","axios","BaseApi","headers","key","ApiKey","token","adminid","data","error","console","log","handleChange","name","value","prev","handleFileUpload1","fileInput","e","target","file","files","size","Swal","icon","confirmButtonText","img","Image","src","window","URL","createObjectURL","onload","width","naturalWidth","height","naturalHeight","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","result","onerror","convertToBase64","then","base64","useEffect","scrollTo","_jsxs","_Fragment","children","_jsx","APNavBar","className","APSidebar","role","Breadcrumbs","separator","NavigateNextIcon","fontSize","Link","to","underline","color","Typography","class","for","type","id","placeholder","onChange","htmlFor","ReactQuill","theme","label","accept","alt","onClick","text","showCancelButton","cancelButtonText","isConfirmed","status","message","deleteImageWithSlug","deleteImage","document","getElementById","newErrors","trim","Object","keys","length","APFooter"],"sourceRoot":""}